{"ast":null,"code":"var _jsxFileName = \"/home/krishna/Desktop/vector/frontend/src/nodes/BaseNode.js\",\n  _s = $RefreshSig$();\nimport { BaseNode } from './BaseNode';\nimport { useStore } from '../store';\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const updateNodeField = useStore(state => state.updateNodeField);\n  const [variables, setVariables] = useState([]);\n  const textareaRef = useRef(null);\n\n  // Extract {{ variable }} patterns\n  const extractVariables = text => {\n    const regex = /{{\\s*([a-zA-Z_$][\\w$]*)\\s*}}/g;\n    const matches = [...text.matchAll(regex)];\n    return [...new Set(matches.map(match => match[1]))];\n  };\n\n  // Update variable list when text changes\n  useEffect(() => {\n    if (data.text) {\n      const newVars = extractVariables(data.text);\n      setVariables(newVars);\n    }\n  }, [data.text]);\n\n  // Input handles for each {{variable}}\n  const variableHandles = variables.map((v, i) => ({\n    id: `input-${v}`,\n    type: 'target',\n    position: 'left',\n    style: {\n      top: `${50 + i * 25}px`\n    },\n    label: v\n  }));\n\n  // Auto-resize handler\n  const handleInput = e => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n\n    // Resize textarea\n    textarea.style.height = 'auto';\n    textarea.style.height = `${textarea.scrollHeight}px`;\n\n    // Optional: Width based on length\n    const length = textarea.value.length;\n    const node = textarea.closest('.react-flow__node');\n    if (node) {\n      node.style.width = `${Math.min(600, Math.max(200, length * 8))}px`;\n      node.style.height = `${textarea.scrollHeight + 80}px`;\n    }\n    updateNodeField(id, 'text', textarea.value);\n  };\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    data: data,\n    title: \"Text\",\n    outputs: [{\n      id: 'output',\n      label: 'Output'\n    }],\n    inputs: variableHandles,\n    fields: [{\n      type: 'textarea',\n      name: 'text',\n      label: 'Text',\n      defaultValue: '{{input}}',\n      ref: textareaRef,\n      rows: 1,\n      style: {\n        width: '100%',\n        resize: 'none',\n        overflow: 'hidden',\n        minHeight: '40px',\n        padding: '8px',\n        boxSizing: 'border-box',\n        fontFamily: 'monospace'\n      },\n      onInput: handleInput\n    }],\n    onFieldChange: (field, val) => updateNodeField(id, field, val)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TextNode, \"jmss6KGoa1Z2ruIPFgZfxXx+nm8=\", false, function () {\n  return [useStore];\n});\n_c = TextNode;\nvar _c;\n$RefreshReg$(_c, \"TextNode\");","map":{"version":3,"names":["BaseNode","useStore","useEffect","useRef","useState","jsxDEV","_jsxDEV","TextNode","id","data","_s","updateNodeField","state","variables","setVariables","textareaRef","extractVariables","text","regex","matches","matchAll","Set","map","match","newVars","variableHandles","v","i","type","position","style","top","label","handleInput","e","textarea","current","height","scrollHeight","length","value","node","closest","width","Math","min","max","title","outputs","inputs","fields","name","defaultValue","ref","rows","resize","overflow","minHeight","padding","boxSizing","fontFamily","onInput","onFieldChange","field","val","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/krishna/Desktop/vector/frontend/src/nodes/BaseNode.js"],"sourcesContent":["import { BaseNode } from './BaseNode';\r\nimport { useStore } from '../store';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nexport const TextNode = ({ id, data }) => {\r\n  const updateNodeField = useStore((state) => state.updateNodeField);\r\n  const [variables, setVariables] = useState([]);\r\n  const textareaRef = useRef(null);\r\n\r\n  // Extract {{ variable }} patterns\r\n  const extractVariables = (text) => {\r\n    const regex = /{{\\s*([a-zA-Z_$][\\w$]*)\\s*}}/g;\r\n    const matches = [...text.matchAll(regex)];\r\n    return [...new Set(matches.map(match => match[1]))];\r\n  };\r\n\r\n  // Update variable list when text changes\r\n  useEffect(() => {\r\n    if (data.text) {\r\n      const newVars = extractVariables(data.text);\r\n      setVariables(newVars);\r\n    }\r\n  }, [data.text]);\r\n\r\n  // Input handles for each {{variable}}\r\n  const variableHandles = variables.map((v, i) => ({\r\n    id: `input-${v}`,\r\n    type: 'target',\r\n    position: 'left',\r\n    style: { top: `${50 + i * 25}px` },\r\n    label: v\r\n  }));\r\n\r\n  // Auto-resize handler\r\n  const handleInput = (e) => {\r\n    const textarea = textareaRef.current;\r\n    if (!textarea) return;\r\n\r\n    // Resize textarea\r\n    textarea.style.height = 'auto';\r\n    textarea.style.height = `${textarea.scrollHeight}px`;\r\n\r\n    // Optional: Width based on length\r\n    const length = textarea.value.length;\r\n    const node = textarea.closest('.react-flow__node');\r\n    if (node) {\r\n      node.style.width = `${Math.min(600, Math.max(200, length * 8))}px`;\r\n      node.style.height = `${textarea.scrollHeight + 80}px`;\r\n    }\r\n\r\n    updateNodeField(id, 'text', textarea.value);\r\n  };\r\n\r\n  return (\r\n    <BaseNode\r\n      id={id}\r\n      data={data}\r\n      title=\"Text\"\r\n      outputs={[{ id: 'output', label: 'Output' }]}\r\n      inputs={variableHandles}\r\n      fields={[\r\n        {\r\n          type: 'textarea',\r\n          name: 'text',\r\n          label: 'Text',\r\n          defaultValue: '{{input}}',\r\n          ref: textareaRef,\r\n          rows: 1,\r\n          style: {\r\n            width: '100%',\r\n            resize: 'none',\r\n            overflow: 'hidden',\r\n            minHeight: '40px',\r\n            padding: '8px',\r\n            boxSizing: 'border-box',\r\n            fontFamily: 'monospace'\r\n          },\r\n          onInput: handleInput\r\n        }\r\n      ]}\r\n      onFieldChange={(field, val) => updateNodeField(id, field, val)}\r\n    />\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,QAAQ,QAAQ,UAAU;AACnC,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,eAAe,GAAGV,QAAQ,CAAEW,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EAClE,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMW,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMa,gBAAgB,GAAIC,IAAI,IAAK;IACjC,MAAMC,KAAK,GAAG,+BAA+B;IAC7C,MAAMC,OAAO,GAAG,CAAC,GAAGF,IAAI,CAACG,QAAQ,CAACF,KAAK,CAAC,CAAC;IACzC,OAAO,CAAC,GAAG,IAAIG,GAAG,CAACF,OAAO,CAACG,GAAG,CAACC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,CAACQ,IAAI,EAAE;MACb,MAAMO,OAAO,GAAGR,gBAAgB,CAACP,IAAI,CAACQ,IAAI,CAAC;MAC3CH,YAAY,CAACU,OAAO,CAAC;IACvB;EACF,CAAC,EAAE,CAACf,IAAI,CAACQ,IAAI,CAAC,CAAC;;EAEf;EACA,MAAMQ,eAAe,GAAGZ,SAAS,CAACS,GAAG,CAAC,CAACI,CAAC,EAAEC,CAAC,MAAM;IAC/CnB,EAAE,EAAG,SAAQkB,CAAE,EAAC;IAChBE,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE;MAAEC,GAAG,EAAG,GAAE,EAAE,GAAGJ,CAAC,GAAG,EAAG;IAAI,CAAC;IAClCK,KAAK,EAAEN;EACT,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMO,WAAW,GAAIC,CAAC,IAAK;IACzB,MAAMC,QAAQ,GAAGpB,WAAW,CAACqB,OAAO;IACpC,IAAI,CAACD,QAAQ,EAAE;;IAEf;IACAA,QAAQ,CAACL,KAAK,CAACO,MAAM,GAAG,MAAM;IAC9BF,QAAQ,CAACL,KAAK,CAACO,MAAM,GAAI,GAAEF,QAAQ,CAACG,YAAa,IAAG;;IAEpD;IACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,KAAK,CAACD,MAAM;IACpC,MAAME,IAAI,GAAGN,QAAQ,CAACO,OAAO,CAAC,mBAAmB,CAAC;IAClD,IAAID,IAAI,EAAE;MACRA,IAAI,CAACX,KAAK,CAACa,KAAK,GAAI,GAAEC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEP,MAAM,GAAG,CAAC,CAAC,CAAE,IAAG;MAClEE,IAAI,CAACX,KAAK,CAACO,MAAM,GAAI,GAAEF,QAAQ,CAACG,YAAY,GAAG,EAAG,IAAG;IACvD;IAEA3B,eAAe,CAACH,EAAE,EAAE,MAAM,EAAE2B,QAAQ,CAACK,KAAK,CAAC;EAC7C,CAAC;EAED,oBACElC,OAAA,CAACN,QAAQ;IACPQ,EAAE,EAAEA,EAAG;IACPC,IAAI,EAAEA,IAAK;IACXsC,KAAK,EAAC,MAAM;IACZC,OAAO,EAAE,CAAC;MAAExC,EAAE,EAAE,QAAQ;MAAEwB,KAAK,EAAE;IAAS,CAAC,CAAE;IAC7CiB,MAAM,EAAExB,eAAgB;IACxByB,MAAM,EAAE,CACN;MACEtB,IAAI,EAAE,UAAU;MAChBuB,IAAI,EAAE,MAAM;MACZnB,KAAK,EAAE,MAAM;MACboB,YAAY,EAAE,WAAW;MACzBC,GAAG,EAAEtC,WAAW;MAChBuC,IAAI,EAAE,CAAC;MACPxB,KAAK,EAAE;QACLa,KAAK,EAAE,MAAM;QACbY,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE,QAAQ;QAClBC,SAAS,EAAE,MAAM;QACjBC,OAAO,EAAE,KAAK;QACdC,SAAS,EAAE,YAAY;QACvBC,UAAU,EAAE;MACd,CAAC;MACDC,OAAO,EAAE5B;IACX,CAAC,CACD;IACF6B,aAAa,EAAEA,CAACC,KAAK,EAAEC,GAAG,KAAKrD,eAAe,CAACH,EAAE,EAAEuD,KAAK,EAAEC,GAAG;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEN,CAAC;AAAC1D,EAAA,CA/EWH,QAAQ;EAAA,QACKN,QAAQ;AAAA;AAAAoE,EAAA,GADrB9D,QAAQ;AAAA,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}