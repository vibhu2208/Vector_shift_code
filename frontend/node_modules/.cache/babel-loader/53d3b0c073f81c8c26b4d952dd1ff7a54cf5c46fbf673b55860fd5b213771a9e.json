{"ast":null,"code":"import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\nconst errorMessages = {\n  error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n  error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n  error003: nodeType => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n  error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n  error005: () => 'Only child nodes can use a parent extent.',\n  error006: () => \"Can't create edge. An edge needs a source and a target.\",\n  error007: id => `The old edge with id=${id} does not exist.`,\n  error009: type => `Marker type \"${type}\" doesn't exist.`,\n  error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n  error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n  error011: edgeType => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n  error012: id => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`\n};\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n  const store = useContext(StoreContext);\n  if (store === null) {\n    throw new Error(zustandErrorMessage);\n  }\n  return useMemo(() => ({\n    getState: store.getState,\n    setState: store.setState,\n    subscribe: store.subscribe,\n    destroy: store.destroy\n  }), [store]);\n};\nconst selector$g = s => s.userSelectionActive ? 'none' : 'all';\nfunction Panel({\n  position,\n  children,\n  className,\n  style,\n  ...rest\n}) {\n  const pointerEvents = useStore(selector$g);\n  const positionClasses = `${position}`.split('-');\n  return jsx(\"div\", {\n    className: cc(['react-flow__panel', className, ...positionClasses]),\n    style: {\n      ...style,\n      pointerEvents\n    },\n    ...rest,\n    children: children\n  });\n}\nfunction Attribution({\n  proOptions,\n  position = 'bottom-right'\n}) {\n  if (proOptions?.hideAttribution) {\n    return null;\n  }\n  return jsx(Panel, {\n    position: position,\n    className: \"react-flow__attribution\",\n    \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\",\n    children: jsx(\"a\", {\n      href: \"https://reactflow.dev\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      \"aria-label\": \"React Flow attribution\",\n      children: \"React Flow\"\n    })\n  });\n}\nconst EdgeText = ({\n  x,\n  y,\n  label,\n  labelStyle = {},\n  labelShowBg = true,\n  labelBgStyle = {},\n  labelBgPadding = [2, 4],\n  labelBgBorderRadius = 2,\n  children,\n  className,\n  ...rest\n}) => {\n  const edgeRef = useRef(null);\n  const [edgeTextBbox, setEdgeTextBbox] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n  useEffect(() => {\n    if (edgeRef.current) {\n      const textBbox = edgeRef.current.getBBox();\n      setEdgeTextBbox({\n        x: textBbox.x,\n        y: textBbox.y,\n        width: textBbox.width,\n        height: textBbox.height\n      });\n    }\n  }, [label]);\n  if (typeof label === 'undefined' || !label) {\n    return null;\n  }\n  return jsxs(\"g\", {\n    transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`,\n    className: edgeTextClasses,\n    visibility: edgeTextBbox.width ? 'visible' : 'hidden',\n    ...rest,\n    children: [labelShowBg && jsx(\"rect\", {\n      width: edgeTextBbox.width + 2 * labelBgPadding[0],\n      x: -labelBgPadding[0],\n      y: -labelBgPadding[1],\n      height: edgeTextBbox.height + 2 * labelBgPadding[1],\n      className: \"react-flow__edge-textbg\",\n      style: labelBgStyle,\n      rx: labelBgBorderRadius,\n      ry: labelBgBorderRadius\n    }), jsx(\"text\", {\n      className: \"react-flow__edge-text\",\n      y: edgeTextBbox.height / 2,\n      dy: \"0.3em\",\n      ref: edgeRef,\n      style: labelStyle,\n      children: label\n    }), children]\n  });\n};\nvar EdgeText$1 = memo(EdgeText);\nconst getDimensions = node => ({\n  width: node.offsetWidth,\n  height: node.offsetHeight\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = {\n  x: 0,\n  y: 0\n}, extent) => ({\n  x: clamp(position.x, extent[0][0], extent[1][0]),\n  y: clamp(position.y, extent[0][1], extent[1][1])\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n  if (value < min) {\n    return clamp(Math.abs(value - min), 1, 50) / 50;\n  } else if (value > max) {\n    return -clamp(Math.abs(value - max), 1, 50) / 50;\n  }\n  return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n  const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n  const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n  return [xMovement, yMovement];\n};\nconst getHostForElement = element => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n  x: Math.min(box1.x, box2.x),\n  y: Math.min(box1.y, box2.y),\n  x2: Math.max(box1.x2, box2.x2),\n  y2: Math.max(box1.y2, box2.y2)\n});\nconst rectToBox = ({\n  x,\n  y,\n  width,\n  height\n}) => ({\n  x,\n  y,\n  x2: x + width,\n  y2: y + height\n});\nconst boxToRect = ({\n  x,\n  y,\n  x2,\n  y2\n}) => ({\n  x,\n  y,\n  width: x2 - x,\n  height: y2 - y\n});\nconst nodeToRect = node => ({\n  ...(node.positionAbsolute || {\n    x: 0,\n    y: 0\n  }),\n  width: node.width || 0,\n  height: node.height || 0\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n  const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n  const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n  return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = obj => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = n => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n  }\n};\nconst isReactKeyboardEvent = event => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n  const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n  // using composed path for handling shadow dom\n  const target = kbEvent.composedPath?.()?.[0] || event.target;\n  const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n  // when an input field is focused we don't want to trigger deletion or movement of nodes\n  return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = event => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n  const isMouseTriggered = isMouseEvent(event);\n  const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n  const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n  return {\n    x: evtX - (bounds?.left ?? 0),\n    y: evtY - (bounds?.top ?? 0)\n  };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\nconst BaseEdge = ({\n  id,\n  path,\n  labelX,\n  labelY,\n  label,\n  labelStyle,\n  labelShowBg,\n  labelBgStyle,\n  labelBgPadding,\n  labelBgBorderRadius,\n  style,\n  markerEnd,\n  markerStart,\n  interactionWidth = 20\n}) => {\n  return jsxs(Fragment, {\n    children: [jsx(\"path\", {\n      id: id,\n      style: style,\n      d: path,\n      fill: \"none\",\n      className: \"react-flow__edge-path\",\n      markerEnd: markerEnd,\n      markerStart: markerStart\n    }), interactionWidth && jsx(\"path\", {\n      d: path,\n      fill: \"none\",\n      strokeOpacity: 0,\n      strokeWidth: interactionWidth,\n      className: \"react-flow__edge-interaction\"\n    }), label && isNumeric(labelX) && isNumeric(labelY) ? jsx(EdgeText$1, {\n      x: labelX,\n      y: labelY,\n      label: label,\n      labelStyle: labelStyle,\n      labelShowBg: labelShowBg,\n      labelBgStyle: labelBgStyle,\n      labelBgPadding: labelBgPadding,\n      labelBgBorderRadius: labelBgBorderRadius\n    }) : null]\n  });\n};\nBaseEdge.displayName = 'BaseEdge';\nconst getMarkerEnd = (markerType, markerEndId) => {\n  if (typeof markerEndId !== 'undefined' && markerEndId) {\n    return `url(#${markerEndId})`;\n  }\n  return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const edge = getState().edges.find(e => e.id === id);\n    if (edge) {\n      handler(event, {\n        ...edge\n      });\n    }\n  };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY\n}) {\n  const xOffset = Math.abs(targetX - sourceX) / 2;\n  const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n  const yOffset = Math.abs(targetY - sourceY) / 2;\n  const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n  return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourceControlX,\n  sourceControlY,\n  targetControlX,\n  targetControlY\n}) {\n  // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n  // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n  const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n  const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n  const offsetX = Math.abs(centerX - sourceX);\n  const offsetY = Math.abs(centerY - sourceY);\n  return [centerX, centerY, offsetX, offsetY];\n}\nvar ConnectionMode;\n(function (ConnectionMode) {\n  ConnectionMode[\"Strict\"] = \"strict\";\n  ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n  PanOnScrollMode[\"Free\"] = \"free\";\n  PanOnScrollMode[\"Vertical\"] = \"vertical\";\n  PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n  SelectionMode[\"Partial\"] = \"partial\";\n  SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n  ConnectionLineType[\"Bezier\"] = \"default\";\n  ConnectionLineType[\"Straight\"] = \"straight\";\n  ConnectionLineType[\"Step\"] = \"step\";\n  ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n  ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n  MarkerType[\"Arrow\"] = \"arrow\";\n  MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\nvar Position;\n(function (Position) {\n  Position[\"Left\"] = \"left\";\n  Position[\"Top\"] = \"top\";\n  Position[\"Right\"] = \"right\";\n  Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\nfunction getControl({\n  pos,\n  x1,\n  y1,\n  x2,\n  y2\n}) {\n  if (pos === Position.Left || pos === Position.Right) {\n    return [0.5 * (x1 + x2), y1];\n  }\n  return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({\n  sourceX,\n  sourceY,\n  sourcePosition = Position.Bottom,\n  targetX,\n  targetY,\n  targetPosition = Position.Top\n}) {\n  const [sourceControlX, sourceControlY] = getControl({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY\n  });\n  const [targetControlX, targetControlY] = getControl({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [`M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst SimpleBezierEdge = memo(({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition = Position.Bottom,\n  targetPosition = Position.Top,\n  label,\n  labelStyle,\n  labelShowBg,\n  labelBgStyle,\n  labelBgPadding,\n  labelBgBorderRadius,\n  style,\n  markerEnd,\n  markerStart,\n  interactionWidth\n}) => {\n  const [path, labelX, labelY] = getSimpleBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\nconst handleDirections = {\n  [Position.Left]: {\n    x: -1,\n    y: 0\n  },\n  [Position.Right]: {\n    x: 1,\n    y: 0\n  },\n  [Position.Top]: {\n    x: 0,\n    y: -1\n  },\n  [Position.Bottom]: {\n    x: 0,\n    y: 1\n  }\n};\nconst getDirection = ({\n  source,\n  sourcePosition = Position.Bottom,\n  target\n}) => {\n  if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n    return source.x < target.x ? {\n      x: 1,\n      y: 0\n    } : {\n      x: -1,\n      y: 0\n    };\n  }\n  return source.y < target.y ? {\n    x: 0,\n    y: 1\n  } : {\n    x: 0,\n    y: -1\n  };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({\n  source,\n  sourcePosition = Position.Bottom,\n  target,\n  targetPosition = Position.Top,\n  center,\n  offset\n}) {\n  const sourceDir = handleDirections[sourcePosition];\n  const targetDir = handleDirections[targetPosition];\n  const sourceGapped = {\n    x: source.x + sourceDir.x * offset,\n    y: source.y + sourceDir.y * offset\n  };\n  const targetGapped = {\n    x: target.x + targetDir.x * offset,\n    y: target.y + targetDir.y * offset\n  };\n  const dir = getDirection({\n    source: sourceGapped,\n    sourcePosition,\n    target: targetGapped\n  });\n  const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n  const currDir = dir[dirAccessor];\n  let points = [];\n  let centerX, centerY;\n  const sourceGapOffset = {\n    x: 0,\n    y: 0\n  };\n  const targetGapOffset = {\n    x: 0,\n    y: 0\n  };\n  const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n    sourceX: source.x,\n    sourceY: source.y,\n    targetX: target.x,\n    targetY: target.y\n  });\n  // opposite handle positions, default case\n  if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n    centerX = center.x || defaultCenterX;\n    centerY = center.y || defaultCenterY;\n    //    --->\n    //    |\n    // >---\n    const verticalSplit = [{\n      x: centerX,\n      y: sourceGapped.y\n    }, {\n      x: centerX,\n      y: targetGapped.y\n    }];\n    //    |\n    //  ---\n    //  |\n    const horizontalSplit = [{\n      x: sourceGapped.x,\n      y: centerY\n    }, {\n      x: targetGapped.x,\n      y: centerY\n    }];\n    if (sourceDir[dirAccessor] === currDir) {\n      points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n    } else {\n      points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n    }\n  } else {\n    // sourceTarget means we take x from source and y from target, targetSource is the opposite\n    const sourceTarget = [{\n      x: sourceGapped.x,\n      y: targetGapped.y\n    }];\n    const targetSource = [{\n      x: targetGapped.x,\n      y: sourceGapped.y\n    }];\n    // this handles edges with same handle positions\n    if (dirAccessor === 'x') {\n      points = sourceDir.x === currDir ? targetSource : sourceTarget;\n    } else {\n      points = sourceDir.y === currDir ? sourceTarget : targetSource;\n    }\n    if (sourcePosition === targetPosition) {\n      const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n      // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n      if (diff <= offset) {\n        const gapOffset = Math.min(offset - 1, offset - diff);\n        if (sourceDir[dirAccessor] === currDir) {\n          sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n        } else {\n          targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n        }\n      }\n    }\n    // these are conditions for handling mixed handle positions like Right -> Bottom for example\n    if (sourcePosition !== targetPosition) {\n      const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n      const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n      const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n      const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n      const flipSourceTarget = sourceDir[dirAccessor] === 1 && (!isSameDir && sourceGtTargetOppo || isSameDir && sourceLtTargetOppo) || sourceDir[dirAccessor] !== 1 && (!isSameDir && sourceLtTargetOppo || isSameDir && sourceGtTargetOppo);\n      if (flipSourceTarget) {\n        points = dirAccessor === 'x' ? sourceTarget : targetSource;\n      }\n    }\n    const sourceGapPoint = {\n      x: sourceGapped.x + sourceGapOffset.x,\n      y: sourceGapped.y + sourceGapOffset.y\n    };\n    const targetGapPoint = {\n      x: targetGapped.x + targetGapOffset.x,\n      y: targetGapped.y + targetGapOffset.y\n    };\n    const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n    const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n    // we want to place the label on the longest segment of the edge\n    if (maxXDistance >= maxYDistance) {\n      centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n      centerY = points[0].y;\n    } else {\n      centerX = points[0].x;\n      centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n    }\n  }\n  const pathPoints = [source, {\n    x: sourceGapped.x + sourceGapOffset.x,\n    y: sourceGapped.y + sourceGapOffset.y\n  }, ...points, {\n    x: targetGapped.x + targetGapOffset.x,\n    y: targetGapped.y + targetGapOffset.y\n  }, target];\n  return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n  const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n  const {\n    x,\n    y\n  } = b;\n  // no bend\n  if (a.x === x && x === c.x || a.y === y && y === c.y) {\n    return `L${x} ${y}`;\n  }\n  // first segment is horizontal\n  if (a.y === y) {\n    const xDir = a.x < c.x ? -1 : 1;\n    const yDir = a.y < c.y ? 1 : -1;\n    return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n  }\n  const xDir = a.x < c.x ? 1 : -1;\n  const yDir = a.y < c.y ? -1 : 1;\n  return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({\n  sourceX,\n  sourceY,\n  sourcePosition = Position.Bottom,\n  targetX,\n  targetY,\n  targetPosition = Position.Top,\n  borderRadius = 5,\n  centerX,\n  centerY,\n  offset = 20\n}) {\n  const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n    source: {\n      x: sourceX,\n      y: sourceY\n    },\n    sourcePosition,\n    target: {\n      x: targetX,\n      y: targetY\n    },\n    targetPosition,\n    center: {\n      x: centerX,\n      y: centerY\n    },\n    offset\n  });\n  const path = points.reduce((res, p, i) => {\n    let segment = '';\n    if (i > 0 && i < points.length - 1) {\n      segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n    } else {\n      segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n    }\n    res += segment;\n    return res;\n  }, '');\n  return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  label,\n  labelStyle,\n  labelShowBg,\n  labelBgStyle,\n  labelBgPadding,\n  labelBgBorderRadius,\n  style,\n  sourcePosition = Position.Bottom,\n  targetPosition = Position.Top,\n  markerEnd,\n  markerStart,\n  pathOptions,\n  interactionWidth\n}) => {\n  const [path, labelX, labelY] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    borderRadius: pathOptions?.borderRadius,\n    offset: pathOptions?.offset\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\nconst StepEdge = memo(props => jsx(SmoothStepEdge, {\n  ...props,\n  pathOptions: useMemo(() => ({\n    borderRadius: 0,\n    offset: props.pathOptions?.offset\n  }), [props.pathOptions?.offset])\n}));\nStepEdge.displayName = 'StepEdge';\nfunction getStraightPath({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY\n}) {\n  const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  label,\n  labelStyle,\n  labelShowBg,\n  labelBgStyle,\n  labelBgPadding,\n  labelBgBorderRadius,\n  style,\n  markerEnd,\n  markerStart,\n  interactionWidth\n}) => {\n  const [path, labelX, labelY] = getStraightPath({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nStraightEdge.displayName = 'StraightEdge';\nfunction calculateControlOffset(distance, curvature) {\n  if (distance >= 0) {\n    return 0.5 * distance;\n  }\n  return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({\n  pos,\n  x1,\n  y1,\n  x2,\n  y2,\n  c\n}) {\n  switch (pos) {\n    case Position.Left:\n      return [x1 - calculateControlOffset(x1 - x2, c), y1];\n    case Position.Right:\n      return [x1 + calculateControlOffset(x2 - x1, c), y1];\n    case Position.Top:\n      return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n    case Position.Bottom:\n      return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n  }\n}\nfunction getBezierPath({\n  sourceX,\n  sourceY,\n  sourcePosition = Position.Bottom,\n  targetX,\n  targetY,\n  targetPosition = Position.Top,\n  curvature = 0.25\n}) {\n  const [sourceControlX, sourceControlY] = getControlWithCurvature({\n    pos: sourcePosition,\n    x1: sourceX,\n    y1: sourceY,\n    x2: targetX,\n    y2: targetY,\n    c: curvature\n  });\n  const [targetControlX, targetControlY] = getControlWithCurvature({\n    pos: targetPosition,\n    x1: targetX,\n    y1: targetY,\n    x2: sourceX,\n    y2: sourceY,\n    c: curvature\n  });\n  const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourceControlX,\n    sourceControlY,\n    targetControlX,\n    targetControlY\n  });\n  return [`M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst BezierEdge = memo(({\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition = Position.Bottom,\n  targetPosition = Position.Top,\n  label,\n  labelStyle,\n  labelShowBg,\n  labelBgStyle,\n  labelBgPadding,\n  labelBgBorderRadius,\n  style,\n  markerEnd,\n  markerStart,\n  pathOptions,\n  interactionWidth\n}) => {\n  const [path, labelX, labelY] = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n    curvature: pathOptions?.curvature\n  });\n  return jsx(BaseEdge, {\n    path: path,\n    labelX: labelX,\n    labelY: labelY,\n    label: label,\n    labelStyle: labelStyle,\n    labelShowBg: labelShowBg,\n    labelBgStyle: labelBgStyle,\n    labelBgPadding: labelBgPadding,\n    labelBgBorderRadius: labelBgBorderRadius,\n    style: style,\n    markerEnd: markerEnd,\n    markerStart: markerStart,\n    interactionWidth: interactionWidth\n  });\n});\nBezierEdge.displayName = 'BezierEdge';\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n  const nodeId = useContext(NodeIdContext);\n  return nodeId;\n};\nconst isEdge = element => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = element => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const outgoerIds = edges.filter(e => e.source === node.id).map(e => e.target);\n  return nodes.filter(n => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n  if (!isNode(node)) {\n    return [];\n  }\n  const incomersIds = edges.filter(e => e.target === node.id).map(e => e.source);\n  return nodes.filter(n => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({\n  source,\n  sourceHandle,\n  target,\n  targetHandle\n}) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n  if (typeof marker === 'undefined') {\n    return '';\n  }\n  if (typeof marker === 'string') {\n    return marker;\n  }\n  const idPrefix = rfId ? `${rfId}__` : '';\n  return `${idPrefix}${Object.keys(marker).sort().map(key => `${key}=${marker[key]}`).join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n  return edges.some(el => el.source === edge.source && el.target === edge.target && (el.sourceHandle === edge.sourceHandle || !el.sourceHandle && !edge.sourceHandle) && (el.targetHandle === edge.targetHandle || !el.targetHandle && !edge.targetHandle));\n};\nconst addEdge = (edgeParams, edges) => {\n  if (!edgeParams.source || !edgeParams.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  let edge;\n  if (isEdge(edgeParams)) {\n    edge = {\n      ...edgeParams\n    };\n  } else {\n    edge = {\n      ...edgeParams,\n      id: getEdgeId(edgeParams)\n    };\n  }\n  if (connectionExists(edge, edges)) {\n    return edges;\n  }\n  return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = {\n  shouldReplaceId: true\n}) => {\n  const {\n    id: oldEdgeId,\n    ...rest\n  } = oldEdge;\n  if (!newConnection.source || !newConnection.target) {\n    devWarn('006', errorMessages['error006']());\n    return edges;\n  }\n  const foundEdge = edges.find(e => e.id === oldEdgeId);\n  if (!foundEdge) {\n    devWarn('007', errorMessages['error007'](oldEdgeId));\n    return edges;\n  }\n  // Remove old edge and create the new edge with parameters of old edge.\n  const edge = {\n    ...rest,\n    id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n    source: newConnection.source,\n    target: newConnection.target,\n    sourceHandle: newConnection.sourceHandle,\n    targetHandle: newConnection.targetHandle\n  };\n  return edges.filter(e => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({\n  x,\n  y\n}, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n  const position = {\n    x: (x - tx) / tScale,\n    y: (y - ty) / tScale\n  };\n  if (snapToGrid) {\n    return {\n      x: snapX * Math.round(position.x / snapX),\n      y: snapY * Math.round(position.y / snapY)\n    };\n  }\n  return position;\n};\nconst rendererPointToPoint = ({\n  x,\n  y\n}, [tx, ty, tScale]) => {\n  return {\n    x: x * tScale + tx,\n    y: y * tScale + ty\n  };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n  if (!node) {\n    return {\n      x: 0,\n      y: 0,\n      positionAbsolute: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n  const offsetX = (node.width ?? 0) * nodeOrigin[0];\n  const offsetY = (node.height ?? 0) * nodeOrigin[1];\n  const position = {\n    x: node.position.x - offsetX,\n    y: node.position.y - offsetY\n  };\n  return {\n    ...position,\n    positionAbsolute: node.positionAbsolute ? {\n      x: node.positionAbsolute.x - offsetX,\n      y: node.positionAbsolute.y - offsetY\n    } : position\n  };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n  if (nodes.length === 0) {\n    return {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const box = nodes.reduce((currBox, node) => {\n    const {\n      x,\n      y\n    } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n    return getBoundsOfBoxes(currBox, rectToBox({\n      x,\n      y,\n      width: node.width || 0,\n      height: node.height || 0\n    }));\n  }, {\n    x: Infinity,\n    y: Infinity,\n    x2: -Infinity,\n    y2: -Infinity\n  });\n  return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false,\n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n  const paneRect = {\n    x: (rect.x - tx) / tScale,\n    y: (rect.y - ty) / tScale,\n    width: rect.width / tScale,\n    height: rect.height / tScale\n  };\n  const visibleNodes = [];\n  nodeInternals.forEach(node => {\n    const {\n      width,\n      height,\n      selectable = true,\n      hidden = false\n    } = node;\n    if (excludeNonSelectableNodes && !selectable || hidden) {\n      return false;\n    }\n    const {\n      positionAbsolute\n    } = getNodePositionWithOrigin(node, nodeOrigin);\n    const nodeRect = {\n      x: positionAbsolute.x,\n      y: positionAbsolute.y,\n      width: width || 0,\n      height: height || 0\n    };\n    const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n    const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n    const partiallyVisible = partially && overlappingArea > 0;\n    const area = (width || 0) * (height || 0);\n    const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n    if (isVisible || node.dragging) {\n      visibleNodes.push(node);\n    }\n  });\n  return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n  const nodeIds = nodes.map(node => node.id);\n  return edges.filter(edge => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n  const xZoom = width / (bounds.width * (1 + padding));\n  const yZoom = height / (bounds.height * (1 + padding));\n  const zoom = Math.min(xZoom, yZoom);\n  const clampedZoom = clamp(zoom, minZoom, maxZoom);\n  const boundsCenterX = bounds.x + bounds.width / 2;\n  const boundsCenterY = bounds.y + bounds.height / 2;\n  const x = width / 2 - boundsCenterX * clampedZoom;\n  const y = height / 2 - boundsCenterY * clampedZoom;\n  return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n  return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n  return (handleBounds[type] || []).reduce((res, h) => {\n    if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n      res.push({\n        id: h.id || null,\n        type,\n        nodeId: node.id,\n        x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n        y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2\n      });\n    }\n    return res;\n  }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n  // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n  // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n  const {\n    x,\n    y\n  } = getEventPosition(event);\n  const domNodes = doc.elementsFromPoint(x, y);\n  const handleBelow = domNodes.find(el => el.classList.contains('react-flow__handle'));\n  if (handleBelow) {\n    const handleNodeId = handleBelow.getAttribute('data-nodeid');\n    if (handleNodeId) {\n      const handleType = getHandleType(undefined, handleBelow);\n      const handleId = handleBelow.getAttribute('data-handleid');\n      const validHandleResult = validator({\n        nodeId: handleNodeId,\n        id: handleId,\n        type: handleType\n      });\n      if (validHandleResult) {\n        return {\n          handle: {\n            id: handleId,\n            type: handleType,\n            nodeId: handleNodeId,\n            x: pos.x,\n            y: pos.y\n          },\n          validHandleResult\n        };\n      }\n    }\n  }\n  // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n  let closestHandles = [];\n  let minDistance = Infinity;\n  handles.forEach(handle => {\n    const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n    if (distance <= connectionRadius) {\n      const validHandleResult = validator(handle);\n      if (distance <= minDistance) {\n        if (distance < minDistance) {\n          closestHandles = [{\n            handle,\n            validHandleResult\n          }];\n        } else if (distance === minDistance) {\n          // when multiple handles are on the same distance we collect all of them\n          closestHandles.push({\n            handle,\n            validHandleResult\n          });\n        }\n        minDistance = distance;\n      }\n    }\n  });\n  if (!closestHandles.length) {\n    return {\n      handle: null,\n      validHandleResult: defaultResult()\n    };\n  }\n  if (closestHandles.length === 1) {\n    return closestHandles[0];\n  }\n  const hasValidHandle = closestHandles.some(({\n    validHandleResult\n  }) => validHandleResult.isValid);\n  const hasTargetHandle = closestHandles.some(({\n    handle\n  }) => handle.type === 'target');\n  // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n  return closestHandles.find(({\n    handle,\n    validHandleResult\n  }) => hasTargetHandle ? handle.type === 'target' : hasValidHandle ? validHandleResult.isValid : true) || closestHandles[0];\n}\nconst nullConnection = {\n  source: null,\n  target: null,\n  sourceHandle: null,\n  targetHandle: null\n};\nconst defaultResult = () => ({\n  handleDomNode: null,\n  isValid: false,\n  connection: nullConnection,\n  endHandle: null\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n  const isTarget = fromType === 'target';\n  const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n  const result = {\n    ...defaultResult(),\n    handleDomNode: handleToCheck\n  };\n  if (handleToCheck) {\n    const handleType = getHandleType(undefined, handleToCheck);\n    const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n    const handleId = handleToCheck.getAttribute('data-handleid');\n    const connectable = handleToCheck.classList.contains('connectable');\n    const connectableEnd = handleToCheck.classList.contains('connectableend');\n    const connection = {\n      source: isTarget ? handleNodeId : fromNodeId,\n      sourceHandle: isTarget ? handleId : fromHandleId,\n      target: isTarget ? fromNodeId : handleNodeId,\n      targetHandle: isTarget ? fromHandleId : handleId\n    };\n    result.connection = connection;\n    const isConnectable = connectable && connectableEnd;\n    // in strict mode we don't allow target to target or source to source connections\n    const isValid = isConnectable && (connectionMode === ConnectionMode.Strict ? isTarget && handleType === 'source' || !isTarget && handleType === 'target' : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n    if (isValid) {\n      result.endHandle = {\n        nodeId: handleNodeId,\n        handleId,\n        type: handleType\n      };\n      result.isValid = isValidConnection(connection);\n    }\n  }\n  return result;\n}\nfunction getHandleLookup({\n  nodes,\n  nodeId,\n  handleId,\n  handleType\n}) {\n  return nodes.reduce((res, node) => {\n    if (node[internalsSymbol]) {\n      const {\n        handleBounds\n      } = node[internalsSymbol];\n      let sourceHandles = [];\n      let targetHandles = [];\n      if (handleBounds) {\n        sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n        targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n      }\n      res.push(...sourceHandles, ...targetHandles);\n    }\n    return res;\n  }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n  if (edgeUpdaterType) {\n    return edgeUpdaterType;\n  } else if (handleDomNode?.classList.contains('target')) {\n    return 'target';\n  } else if (handleDomNode?.classList.contains('source')) {\n    return 'source';\n  }\n  return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n  handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n  let connectionStatus = null;\n  if (isHandleValid) {\n    connectionStatus = 'valid';\n  } else if (isInsideConnectionRadius && !isHandleValid) {\n    connectionStatus = 'invalid';\n  }\n  return connectionStatus;\n}\nfunction handlePointerDown({\n  event,\n  handleId,\n  nodeId,\n  onConnect,\n  isTarget,\n  getState,\n  setState,\n  isValidConnection,\n  edgeUpdaterType,\n  onEdgeUpdateEnd\n}) {\n  // when react-flow is used inside a shadow root we can't use document\n  const doc = getHostForElement(event.target);\n  const {\n    connectionMode,\n    domNode,\n    autoPanOnConnect,\n    connectionRadius,\n    onConnectStart,\n    panBy,\n    getNodes,\n    cancelConnection\n  } = getState();\n  let autoPanId = 0;\n  let closestHandle;\n  const {\n    x,\n    y\n  } = getEventPosition(event);\n  const clickedHandle = doc?.elementFromPoint(x, y);\n  const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n  const containerBounds = domNode?.getBoundingClientRect();\n  if (!containerBounds || !handleType) {\n    return;\n  }\n  let prevActiveHandle;\n  let connectionPosition = getEventPosition(event, containerBounds);\n  let autoPanStarted = false;\n  let connection = null;\n  let isValid = false;\n  let handleDomNode = null;\n  const handleLookup = getHandleLookup({\n    nodes: getNodes(),\n    nodeId,\n    handleId,\n    handleType\n  });\n  // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n  const autoPan = () => {\n    if (!autoPanOnConnect) {\n      return;\n    }\n    const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n    panBy({\n      x: xMovement,\n      y: yMovement\n    });\n    autoPanId = requestAnimationFrame(autoPan);\n  };\n  setState({\n    connectionPosition,\n    connectionStatus: null,\n    // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n    connectionNodeId: nodeId,\n    connectionHandleId: handleId,\n    connectionHandleType: handleType,\n    connectionStartHandle: {\n      nodeId,\n      handleId,\n      type: handleType\n    },\n    connectionEndHandle: null\n  });\n  onConnectStart?.(event, {\n    nodeId,\n    handleId,\n    handleType\n  });\n  function onPointerMove(event) {\n    const {\n      transform\n    } = getState();\n    connectionPosition = getEventPosition(event, containerBounds);\n    const {\n      handle,\n      validHandleResult\n    } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, handle => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n    closestHandle = handle;\n    if (!autoPanStarted) {\n      autoPan();\n      autoPanStarted = true;\n    }\n    handleDomNode = validHandleResult.handleDomNode;\n    connection = validHandleResult.connection;\n    isValid = validHandleResult.isValid;\n    setState({\n      connectionPosition: closestHandle && isValid ? rendererPointToPoint({\n        x: closestHandle.x,\n        y: closestHandle.y\n      }, transform) : connectionPosition,\n      connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n      connectionEndHandle: validHandleResult.endHandle\n    });\n    if (!closestHandle && !isValid && !handleDomNode) {\n      return resetRecentHandle(prevActiveHandle);\n    }\n    if (connection.source !== connection.target && handleDomNode) {\n      resetRecentHandle(prevActiveHandle);\n      prevActiveHandle = handleDomNode;\n      // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n      handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n      handleDomNode.classList.toggle('valid', isValid);\n      handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n    }\n  }\n  function onPointerUp(event) {\n    if ((closestHandle || handleDomNode) && connection && isValid) {\n      onConnect?.(connection);\n    }\n    // it's important to get a fresh reference from the store here\n    // in order to get the latest state of onConnectEnd\n    getState().onConnectEnd?.(event);\n    if (edgeUpdaterType) {\n      onEdgeUpdateEnd?.(event);\n    }\n    resetRecentHandle(prevActiveHandle);\n    cancelConnection();\n    cancelAnimationFrame(autoPanId);\n    autoPanStarted = false;\n    isValid = false;\n    connection = null;\n    handleDomNode = null;\n    doc.removeEventListener('mousemove', onPointerMove);\n    doc.removeEventListener('mouseup', onPointerUp);\n    doc.removeEventListener('touchmove', onPointerMove);\n    doc.removeEventListener('touchend', onPointerUp);\n  }\n  doc.addEventListener('mousemove', onPointerMove);\n  doc.addEventListener('mouseup', onPointerUp);\n  doc.addEventListener('touchmove', onPointerMove);\n  doc.addEventListener('touchend', onPointerUp);\n}\nconst alwaysValid = () => true;\nconst selector$f = s => ({\n  connectionStartHandle: s.connectionStartHandle,\n  connectOnClick: s.connectOnClick,\n  noPanClassName: s.noPanClassName\n});\nconst connectingSelector = (nodeId, handleId, type) => state => {\n  const {\n    connectionStartHandle: startHandle,\n    connectionEndHandle: endHandle,\n    connectionClickStartHandle: clickHandle\n  } = state;\n  return {\n    connecting: startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type || endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type,\n    clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type\n  };\n};\nconst Handle = forwardRef(({\n  type = 'source',\n  position = Position.Top,\n  isValidConnection,\n  isConnectable = true,\n  isConnectableStart = true,\n  isConnectableEnd = true,\n  id,\n  onConnect,\n  children,\n  className,\n  onMouseDown,\n  onTouchStart,\n  ...rest\n}, ref) => {\n  const handleId = id || null;\n  const isTarget = type === 'target';\n  const store = useStoreApi();\n  const nodeId = useNodeId();\n  const {\n    connectOnClick,\n    noPanClassName\n  } = useStore(selector$f, shallow);\n  const {\n    connecting,\n    clickConnecting\n  } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n  if (!nodeId) {\n    store.getState().onError?.('010', errorMessages['error010']());\n  }\n  const onConnectExtended = params => {\n    const {\n      defaultEdgeOptions,\n      onConnect: onConnectAction,\n      hasDefaultEdges\n    } = store.getState();\n    const edgeParams = {\n      ...defaultEdgeOptions,\n      ...params\n    };\n    if (hasDefaultEdges) {\n      const {\n        edges,\n        setEdges\n      } = store.getState();\n      setEdges(addEdge(edgeParams, edges));\n    }\n    onConnectAction?.(edgeParams);\n    onConnect?.(edgeParams);\n  };\n  const onPointerDown = event => {\n    if (!nodeId) {\n      return;\n    }\n    const isMouseTriggered = isMouseEvent(event);\n    if (isConnectableStart && (isMouseTriggered && event.button === 0 || !isMouseTriggered)) {\n      handlePointerDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectExtended,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid\n      });\n    }\n    if (isMouseTriggered) {\n      onMouseDown?.(event);\n    } else {\n      onTouchStart?.(event);\n    }\n  };\n  const onClick = event => {\n    const {\n      onClickConnectStart,\n      onClickConnectEnd,\n      connectionClickStartHandle,\n      connectionMode,\n      isValidConnection: isValidConnectionStore\n    } = store.getState();\n    if (!nodeId || !connectionClickStartHandle && !isConnectableStart) {\n      return;\n    }\n    if (!connectionClickStartHandle) {\n      onClickConnectStart?.(event, {\n        nodeId,\n        handleId,\n        handleType: type\n      });\n      store.setState({\n        connectionClickStartHandle: {\n          nodeId,\n          type,\n          handleId\n        }\n      });\n      return;\n    }\n    const doc = getHostForElement(event.target);\n    const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n    const {\n      connection,\n      isValid\n    } = isValidHandle({\n      nodeId,\n      id: handleId,\n      type\n    }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n    if (isValid) {\n      onConnectExtended(connection);\n    }\n    onClickConnectEnd?.(event);\n    store.setState({\n      connectionClickStartHandle: null\n    });\n  };\n  return jsx(\"div\", {\n    \"data-handleid\": handleId,\n    \"data-nodeid\": nodeId,\n    \"data-handlepos\": position,\n    \"data-id\": `${nodeId}-${handleId}-${type}`,\n    className: cc(['react-flow__handle', `react-flow__handle-${position}`, 'nodrag', noPanClassName, className, {\n      source: !isTarget,\n      target: isTarget,\n      connectable: isConnectable,\n      connectablestart: isConnectableStart,\n      connectableend: isConnectableEnd,\n      connecting: clickConnecting,\n      // this class is used to style the handle when the user is connecting\n      connectionindicator: isConnectable && (isConnectableStart && !connecting || isConnectableEnd && connecting)\n    }]),\n    onMouseDown: onPointerDown,\n    onTouchStart: onPointerDown,\n    onClick: connectOnClick ? onClick : undefined,\n    ref: ref,\n    ...rest,\n    children: children\n  });\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\nconst DefaultNode = ({\n  data,\n  isConnectable,\n  targetPosition = Position.Top,\n  sourcePosition = Position.Bottom\n}) => {\n  return jsxs(Fragment, {\n    children: [jsx(Handle$1, {\n      type: \"target\",\n      position: targetPosition,\n      isConnectable: isConnectable\n    }), data?.label, jsx(Handle$1, {\n      type: \"source\",\n      position: sourcePosition,\n      isConnectable: isConnectable\n    })]\n  });\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\nconst InputNode = ({\n  data,\n  isConnectable,\n  sourcePosition = Position.Bottom\n}) => jsxs(Fragment, {\n  children: [data?.label, jsx(Handle$1, {\n    type: \"source\",\n    position: sourcePosition,\n    isConnectable: isConnectable\n  })]\n});\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\nconst OutputNode = ({\n  data,\n  isConnectable,\n  targetPosition = Position.Top\n}) => jsxs(Fragment, {\n  children: [jsx(Handle$1, {\n    type: \"target\",\n    position: targetPosition,\n    isConnectable: isConnectable\n  }), data?.label]\n});\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\nconst selector$e = s => ({\n  selectedNodes: s.getNodes().filter(n => n.selected),\n  selectedEdges: s.edges.filter(e => e.selected)\n});\nconst selectId = obj => obj.id;\nfunction areEqual(a, b) {\n  return shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) && shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({\n  onSelectionChange\n}) => {\n  const store = useStoreApi();\n  const {\n    selectedNodes,\n    selectedEdges\n  } = useStore(selector$e, areEqual);\n  useEffect(() => {\n    const params = {\n      nodes: selectedNodes,\n      edges: selectedEdges\n    };\n    onSelectionChange?.(params);\n    store.getState().onSelectionChange?.(params);\n  }, [selectedNodes, selectedEdges, onSelectionChange]);\n  return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = s => !!s.onSelectionChange;\nfunction Wrapper$1({\n  onSelectionChange\n}) {\n  const storeHasSelectionChange = useStore(changeSelector);\n  if (onSelectionChange || storeHasSelectionChange) {\n    return jsx(SelectionListener, {\n      onSelectionChange: onSelectionChange\n    });\n  }\n  return null;\n}\nconst selector$d = s => ({\n  setNodes: s.setNodes,\n  setEdges: s.setEdges,\n  setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n  setMinZoom: s.setMinZoom,\n  setMaxZoom: s.setMaxZoom,\n  setTranslateExtent: s.setTranslateExtent,\n  setNodeExtent: s.setNodeExtent,\n  reset: s.reset\n});\nfunction useStoreUpdater(value, setStoreState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setStoreState(value);\n    }\n  }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n  useEffect(() => {\n    if (typeof value !== 'undefined') {\n      setState({\n        [key]: value\n      });\n    }\n  }, [value]);\n}\nconst StoreUpdater = ({\n  nodes,\n  edges,\n  defaultNodes,\n  defaultEdges,\n  onConnect,\n  onConnectStart,\n  onConnectEnd,\n  onClickConnectStart,\n  onClickConnectEnd,\n  nodesDraggable,\n  nodesConnectable,\n  nodesFocusable,\n  edgesFocusable,\n  edgesUpdatable,\n  elevateNodesOnSelect,\n  minZoom,\n  maxZoom,\n  nodeExtent,\n  onNodesChange,\n  onEdgesChange,\n  elementsSelectable,\n  connectionMode,\n  snapGrid,\n  snapToGrid,\n  translateExtent,\n  connectOnClick,\n  defaultEdgeOptions,\n  fitView,\n  fitViewOptions,\n  onNodesDelete,\n  onEdgesDelete,\n  onNodeDrag,\n  onNodeDragStart,\n  onNodeDragStop,\n  onSelectionDrag,\n  onSelectionDragStart,\n  onSelectionDragStop,\n  noPanClassName,\n  nodeOrigin,\n  rfId,\n  autoPanOnConnect,\n  autoPanOnNodeDrag,\n  onError,\n  connectionRadius,\n  isValidConnection\n}) => {\n  const {\n    setNodes,\n    setEdges,\n    setDefaultNodesAndEdges,\n    setMinZoom,\n    setMaxZoom,\n    setTranslateExtent,\n    setNodeExtent,\n    reset\n  } = useStore(selector$d, shallow);\n  const store = useStoreApi();\n  useEffect(() => {\n    const edgesWithDefaults = defaultEdges?.map(e => ({\n      ...e,\n      ...defaultEdgeOptions\n    }));\n    setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n    return () => {\n      reset();\n    };\n  }, []);\n  useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n  useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n  useDirectStoreUpdater('onConnect', onConnect, store.setState);\n  useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n  useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n  useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n  useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n  useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n  useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n  useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n  useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n  useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n  useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n  useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n  useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n  useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n  useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n  useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n  useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n  useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n  useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n  useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n  useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n  useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n  useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n  useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n  useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n  useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n  useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n  useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n  useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n  useDirectStoreUpdater('rfId', rfId, store.setState);\n  useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n  useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n  useDirectStoreUpdater('onError', onError, store.setState);\n  useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n  useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n  useStoreUpdater(nodes, setNodes);\n  useStoreUpdater(edges, setEdges);\n  useStoreUpdater(minZoom, setMinZoom);\n  useStoreUpdater(maxZoom, setMaxZoom);\n  useStoreUpdater(translateExtent, setTranslateExtent);\n  useStoreUpdater(nodeExtent, setNodeExtent);\n  return null;\n};\nconst style = {\n  display: 'none'\n};\nconst ariaLiveStyle = {\n  position: 'absolute',\n  width: 1,\n  height: 1,\n  margin: -1,\n  border: 0,\n  padding: 0,\n  overflow: 'hidden',\n  clip: 'rect(0px, 0px, 0px, 0px)',\n  clipPath: 'inset(100%)'\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = s => s.ariaLiveMessage;\nfunction AriaLiveMessage({\n  rfId\n}) {\n  const ariaLiveMessage = useStore(selector$c);\n  return jsx(\"div\", {\n    id: `${ARIA_LIVE_MESSAGE}-${rfId}`,\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\",\n    style: ariaLiveStyle,\n    children: ariaLiveMessage\n  });\n}\nfunction A11yDescriptions({\n  rfId,\n  disableKeyboardA11y\n}) {\n  return jsxs(Fragment, {\n    children: [jsxs(\"div\", {\n      id: `${ARIA_NODE_DESC_KEY}-${rfId}`,\n      style: style,\n      children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' ']\n    }), jsx(\"div\", {\n      id: `${ARIA_EDGE_DESC_KEY}-${rfId}`,\n      style: style,\n      children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\"\n    }), !disableKeyboardA11y && jsx(AriaLiveMessage, {\n      rfId: rfId\n    })]\n  });\n}\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = {\n  target: doc\n}) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  // we need to remember if a modifier key is pressed in order to track it\n  const modifierPressed = useRef(false);\n  // we need to remember the pressed keys in order to support combinations\n  const pressedKeys = useRef(new Set([]));\n  // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n  // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n  // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n  // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n  // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n  // we can't find it in the list of keysToWatch.\n  const [keyCodes, keysToWatch] = useMemo(() => {\n    if (keyCode !== null) {\n      const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n      const keys = keyCodeArr.filter(kc => typeof kc === 'string').map(kc => kc.split('+'));\n      const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n      return [keys, keysFlat];\n    }\n    return [[], []];\n  }, [keyCode]);\n  useEffect(() => {\n    if (keyCode !== null) {\n      const downHandler = event => {\n        modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        pressedKeys.current.add(event[keyOrCode]);\n        if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n          event.preventDefault();\n          setKeyPressed(true);\n        }\n      };\n      const upHandler = event => {\n        if (!modifierPressed.current && isInputDOMNode(event)) {\n          return false;\n        }\n        const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n        if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n          setKeyPressed(false);\n          pressedKeys.current.clear();\n        } else {\n          pressedKeys.current.delete(event[keyOrCode]);\n        }\n        // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n        if (event.key === 'Meta') {\n          pressedKeys.current.clear();\n        }\n        modifierPressed.current = false;\n      };\n      const resetHandler = () => {\n        pressedKeys.current.clear();\n        setKeyPressed(false);\n      };\n      options?.target?.addEventListener('keydown', downHandler);\n      options?.target?.addEventListener('keyup', upHandler);\n      window.addEventListener('blur', resetHandler);\n      return () => {\n        options?.target?.removeEventListener('keydown', downHandler);\n        options?.target?.removeEventListener('keyup', upHandler);\n        window.removeEventListener('blur', resetHandler);\n      };\n    }\n  }, [keyCode, setKeyPressed]);\n  return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n  return keyCodes\n  // we only want to compare same sizes of keyCode definitions\n  // and pressed keys. When the user specified 'Meta' as a key somewhere\n  // this would also be truthy without this filter when user presses 'Meta' + 'r'\n  .filter(keys => isUp || keys.length === pressedKeys.size)\n  // since we want to support multiple possibilities only one of the\n  // combinations need to be part of the pressed keys\n  .some(keys => keys.every(k => pressedKeys.has(k)));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n  return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n  if (!node.parentNode) {\n    return result;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n  return calculateXYZPosition(parentNode, nodeInternals, {\n    x: (result.x ?? 0) + parentNodePosition.x,\n    y: (result.y ?? 0) + parentNodePosition.y,\n    z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0\n  }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n  nodeInternals.forEach(node => {\n    if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n      throw new Error(`Parent node ${node.parentNode} not found`);\n    }\n    if (node.parentNode || parentNodes?.[node.id]) {\n      const {\n        x,\n        y,\n        z\n      } = calculateXYZPosition(node, nodeInternals, {\n        ...node.position,\n        z: node[internalsSymbol]?.z ?? 0\n      }, nodeOrigin);\n      node.positionAbsolute = {\n        x,\n        y\n      };\n      node[internalsSymbol].z = z;\n      if (parentNodes?.[node.id]) {\n        node[internalsSymbol].isParent = true;\n      }\n    }\n  });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n  const nextNodeInternals = new Map();\n  const parentNodes = {};\n  const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n  nodes.forEach(node => {\n    const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n    const currInternals = nodeInternals.get(node.id);\n    const internals = {\n      width: currInternals?.width,\n      height: currInternals?.height,\n      ...node,\n      positionAbsolute: {\n        x: node.position.x,\n        y: node.position.y\n      }\n    };\n    if (node.parentNode) {\n      internals.parentNode = node.parentNode;\n      parentNodes[node.parentNode] = true;\n    }\n    Object.defineProperty(internals, internalsSymbol, {\n      enumerable: false,\n      value: {\n        handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n        z\n      }\n    });\n    nextNodeInternals.set(node.id, internals);\n  });\n  updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n  return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n  const {\n    getNodes,\n    width,\n    height,\n    minZoom,\n    maxZoom,\n    d3Zoom,\n    d3Selection,\n    fitViewOnInitDone,\n    fitViewOnInit,\n    nodeOrigin\n  } = get();\n  const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n  const d3initialized = d3Zoom && d3Selection;\n  if (d3initialized && (isInitialFitView || !options.initial)) {\n    const nodes = getNodes().filter(n => {\n      const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n      if (options.nodes?.length) {\n        return isVisible && options.nodes.some(optionNode => optionNode.id === n.id);\n      }\n      return isVisible;\n    });\n    const nodesInitialized = nodes.every(n => n.width && n.height);\n    if (nodes.length > 0 && nodesInitialized) {\n      const bounds = getRectOfNodes(nodes, nodeOrigin);\n      const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n      const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n      if (typeof options.duration === 'number' && options.duration > 0) {\n        d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n      } else {\n        d3Zoom.transform(d3Selection, nextTransform);\n      }\n      return true;\n    }\n  }\n  return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n  nodeChanges.forEach(change => {\n    const node = nodeInternals.get(change.id);\n    if (node) {\n      nodeInternals.set(node.id, {\n        ...node,\n        [internalsSymbol]: node[internalsSymbol],\n        selected: change.selected\n      });\n    }\n  });\n  return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n  return edges.map(e => {\n    const change = edgeChanges.find(change => change.id === e.id);\n    if (change) {\n      e.selected = change.selected;\n    }\n    return e;\n  });\n}\nfunction updateNodesAndEdgesSelections({\n  changedNodes,\n  changedEdges,\n  get,\n  set\n}) {\n  const {\n    nodeInternals,\n    edges,\n    onNodesChange,\n    onEdgesChange,\n    hasDefaultNodes,\n    hasDefaultEdges\n  } = get();\n  if (changedNodes?.length) {\n    if (hasDefaultNodes) {\n      set({\n        nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals)\n      });\n    }\n    onNodesChange?.(changedNodes);\n  }\n  if (changedEdges?.length) {\n    if (hasDefaultEdges) {\n      set({\n        edges: handleControlledEdgeSelectionChange(changedEdges, edges)\n      });\n    }\n    onEdgesChange?.(changedEdges);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst initialViewportHelper = {\n  zoomIn: noop,\n  zoomOut: noop,\n  zoomTo: noop,\n  getZoom: () => 1,\n  setViewport: noop,\n  getViewport: () => ({\n    x: 0,\n    y: 0,\n    zoom: 1\n  }),\n  fitView: () => false,\n  setCenter: noop,\n  fitBounds: noop,\n  project: position => position,\n  viewportInitialized: false\n};\nconst selector$b = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection\n});\nconst useViewportHelper = () => {\n  const store = useStoreApi();\n  const {\n    d3Zoom,\n    d3Selection\n  } = useStore(selector$b, shallow);\n  const viewportHelperFunctions = useMemo(() => {\n    if (d3Selection && d3Zoom) {\n      return {\n        zoomIn: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n        zoomOut: options => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n        zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n        getZoom: () => store.getState().transform[2],\n        setViewport: (transform, options) => {\n          const [x, y, zoom] = store.getState().transform;\n          const nextTransform = zoomIdentity.translate(transform.x ?? x, transform.y ?? y).scale(transform.zoom ?? zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n        },\n        getViewport: () => {\n          const [x, y, zoom] = store.getState().transform;\n          return {\n            x,\n            y,\n            zoom\n          };\n        },\n        fitView: options => fitView(store.getState, options),\n        setCenter: (x, y, options) => {\n          const {\n            width,\n            height,\n            maxZoom\n          } = store.getState();\n          const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n          const centerX = width / 2 - x * nextZoom;\n          const centerY = height / 2 - y * nextZoom;\n          const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n        },\n        fitBounds: (bounds, options) => {\n          const {\n            width,\n            height,\n            minZoom,\n            maxZoom\n          } = store.getState();\n          const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n          const transform = zoomIdentity.translate(x, y).scale(zoom);\n          d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n        },\n        project: position => {\n          const {\n            transform,\n            snapToGrid,\n            snapGrid\n          } = store.getState();\n          return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n        },\n        viewportInitialized: true\n      };\n    }\n    return initialViewportHelper;\n  }, [d3Zoom, d3Selection]);\n  return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n  const viewportHelper = useViewportHelper();\n  const store = useStoreApi();\n  const getNodes = useCallback(() => {\n    return store.getState().getNodes().map(n => ({\n      ...n\n    }));\n  }, []);\n  const getNode = useCallback(id => {\n    return store.getState().nodeInternals.get(id);\n  }, []);\n  const getEdges = useCallback(() => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.map(e => ({\n      ...e\n    }));\n  }, []);\n  const getEdge = useCallback(id => {\n    const {\n      edges = []\n    } = store.getState();\n    return edges.find(e => e.id === id);\n  }, []);\n  const setNodes = useCallback(payload => {\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    const nodes = getNodes();\n    const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n    if (hasDefaultNodes) {\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nextNodes.length === 0 ? nodes.map(node => ({\n        type: 'remove',\n        id: node.id\n      })) : nextNodes.map(node => ({\n        item: node,\n        type: 'reset'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const setEdges = useCallback(payload => {\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n    if (hasDefaultEdges) {\n      setEdges(nextEdges);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.length === 0 ? edges.map(edge => ({\n        type: 'remove',\n        id: edge.id\n      })) : nextEdges.map(edge => ({\n        item: edge,\n        type: 'reset'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const addNodes = useCallback(payload => {\n    const nodes = Array.isArray(payload) ? payload : [payload];\n    const {\n      getNodes,\n      setNodes,\n      hasDefaultNodes,\n      onNodesChange\n    } = store.getState();\n    if (hasDefaultNodes) {\n      const currentNodes = getNodes();\n      const nextNodes = [...currentNodes, ...nodes];\n      setNodes(nextNodes);\n    } else if (onNodesChange) {\n      const changes = nodes.map(node => ({\n        item: node,\n        type: 'add'\n      }));\n      onNodesChange(changes);\n    }\n  }, []);\n  const addEdges = useCallback(payload => {\n    const nextEdges = Array.isArray(payload) ? payload : [payload];\n    const {\n      edges = [],\n      setEdges,\n      hasDefaultEdges,\n      onEdgesChange\n    } = store.getState();\n    if (hasDefaultEdges) {\n      setEdges([...edges, ...nextEdges]);\n    } else if (onEdgesChange) {\n      const changes = nextEdges.map(edge => ({\n        item: edge,\n        type: 'add'\n      }));\n      onEdgesChange(changes);\n    }\n  }, []);\n  const toObject = useCallback(() => {\n    const {\n      getNodes,\n      edges = [],\n      transform\n    } = store.getState();\n    const [x, y, zoom] = transform;\n    return {\n      nodes: getNodes().map(n => ({\n        ...n\n      })),\n      edges: edges.map(e => ({\n        ...e\n      })),\n      viewport: {\n        x,\n        y,\n        zoom\n      }\n    };\n  }, []);\n  const deleteElements = useCallback(({\n    nodes: nodesDeleted,\n    edges: edgesDeleted\n  }) => {\n    const {\n      nodeInternals,\n      getNodes,\n      edges,\n      hasDefaultNodes,\n      hasDefaultEdges,\n      onNodesDelete,\n      onEdgesDelete,\n      onNodesChange,\n      onEdgesChange\n    } = store.getState();\n    const nodeIds = (nodesDeleted || []).map(node => node.id);\n    const edgeIds = (edgesDeleted || []).map(edge => edge.id);\n    const nodesToRemove = getNodes().reduce((res, node) => {\n      const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find(n => n.id === node.parentNode);\n      const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n      if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n        res.push(node);\n      }\n      return res;\n    }, []);\n    const deletableEdges = edges.filter(e => typeof e.deletable === 'boolean' ? e.deletable : true);\n    const initialHitEdges = deletableEdges.filter(e => edgeIds.includes(e.id));\n    if (nodesToRemove || initialHitEdges) {\n      const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n      const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n      const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n        if (!res.includes(edge.id)) {\n          res.push(edge.id);\n        }\n        return res;\n      }, []);\n      if (hasDefaultEdges || hasDefaultNodes) {\n        if (hasDefaultEdges) {\n          store.setState({\n            edges: edges.filter(e => !edgeIdsToRemove.includes(e.id))\n          });\n        }\n        if (hasDefaultNodes) {\n          nodesToRemove.forEach(node => {\n            nodeInternals.delete(node.id);\n          });\n          store.setState({\n            nodeInternals: new Map(nodeInternals)\n          });\n        }\n      }\n      if (edgeIdsToRemove.length > 0) {\n        onEdgesDelete?.(edgesToRemove);\n        if (onEdgesChange) {\n          onEdgesChange(edgeIdsToRemove.map(id => ({\n            id,\n            type: 'remove'\n          })));\n        }\n      }\n      if (nodesToRemove.length > 0) {\n        onNodesDelete?.(nodesToRemove);\n        if (onNodesChange) {\n          const nodeChanges = nodesToRemove.map(n => ({\n            id: n.id,\n            type: 'remove'\n          }));\n          onNodesChange(nodeChanges);\n        }\n      }\n    }\n  }, []);\n  const getNodeRect = useCallback(nodeOrRect => {\n    const isRect = isRectObject(nodeOrRect);\n    const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n    const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n    return [nodeRect, node, isRect];\n  }, []);\n  const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n    const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return [];\n    }\n    return (nodes || store.getState().getNodes()).filter(n => {\n      if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n        return false;\n      }\n      const currNodeRect = nodeToRect(n);\n      const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n      const partiallyVisible = partially && overlappingArea > 0;\n      return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    });\n  }, []);\n  const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n    const [nodeRect] = getNodeRect(nodeOrRect);\n    if (!nodeRect) {\n      return false;\n    }\n    const overlappingArea = getOverlappingArea(nodeRect, area);\n    const partiallyVisible = partially && overlappingArea > 0;\n    return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n  }, []);\n  return useMemo(() => {\n    return {\n      ...viewportHelper,\n      getNodes,\n      getNode,\n      getEdges,\n      getEdge,\n      setNodes,\n      setEdges,\n      addNodes,\n      addEdges,\n      toObject,\n      deleteElements,\n      getIntersectingNodes,\n      isNodeIntersecting\n    };\n  }, [viewportHelper, getNodes, getNode, getEdges, getEdge, setNodes, setEdges, addNodes, addEdges, toObject, deleteElements, getIntersectingNodes, isNodeIntersecting]);\n}\nvar useGlobalKeyHandler = ({\n  deleteKeyCode,\n  multiSelectionKeyCode\n}) => {\n  const store = useStoreApi();\n  const {\n    deleteElements\n  } = useReactFlow();\n  const deleteKeyPressed = useKeyPress(deleteKeyCode);\n  const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n  useEffect(() => {\n    if (deleteKeyPressed) {\n      const {\n        edges,\n        getNodes\n      } = store.getState();\n      const selectedNodes = getNodes().filter(node => node.selected);\n      const selectedEdges = edges.filter(edge => edge.selected);\n      deleteElements({\n        nodes: selectedNodes,\n        edges: selectedEdges\n      });\n      store.setState({\n        nodesSelectionActive: false\n      });\n    }\n  }, [deleteKeyPressed]);\n  useEffect(() => {\n    store.setState({\n      multiSelectionActive: multiSelectionKeyPressed\n    });\n  }, [multiSelectionKeyPressed]);\n};\nfunction useResizeHandler(rendererNode) {\n  const store = useStoreApi();\n  useEffect(() => {\n    let resizeObserver;\n    const updateDimensions = () => {\n      if (!rendererNode.current) {\n        return;\n      }\n      const size = getDimensions(rendererNode.current);\n      if (size.height === 0 || size.width === 0) {\n        store.getState().onError?.('004', errorMessages['error004']());\n      }\n      store.setState({\n        width: size.width || 500,\n        height: size.height || 500\n      });\n    };\n    updateDimensions();\n    window.addEventListener('resize', updateDimensions);\n    if (rendererNode.current) {\n      resizeObserver = new ResizeObserver(() => updateDimensions());\n      resizeObserver.observe(rendererNode.current);\n    }\n    return () => {\n      window.removeEventListener('resize', updateDimensions);\n      if (resizeObserver && rendererNode.current) {\n        resizeObserver.unobserve(rendererNode.current);\n      }\n    };\n  }, []);\n}\nconst containerStyle = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0\n};\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = eventTransform => ({\n  x: eventTransform.x,\n  y: eventTransform.y,\n  zoom: eventTransform.k\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = event => {\n  const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = s => ({\n  d3Zoom: s.d3Zoom,\n  d3Selection: s.d3Selection,\n  d3ZoomHandler: s.d3ZoomHandler,\n  userSelectionActive: s.userSelectionActive\n});\nconst ZoomPane = ({\n  onMove,\n  onMoveStart,\n  onMoveEnd,\n  onPaneContextMenu,\n  zoomOnScroll = true,\n  zoomOnPinch = true,\n  panOnScroll = false,\n  panOnScrollSpeed = 0.5,\n  panOnScrollMode = PanOnScrollMode.Free,\n  zoomOnDoubleClick = true,\n  elementsSelectable,\n  panOnDrag = true,\n  defaultViewport,\n  translateExtent,\n  minZoom,\n  maxZoom,\n  zoomActivationKeyCode,\n  preventScrolling = true,\n  children,\n  noWheelClassName,\n  noPanClassName\n}) => {\n  const timerId = useRef();\n  const store = useStoreApi();\n  const isZoomingOrPanning = useRef(false);\n  const zoomedWithRightMouseButton = useRef(false);\n  const zoomPane = useRef(null);\n  const prevTransform = useRef({\n    x: 0,\n    y: 0,\n    zoom: 0\n  });\n  const {\n    d3Zoom,\n    d3Selection,\n    d3ZoomHandler,\n    userSelectionActive\n  } = useStore(selector$a, shallow);\n  const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n  const mouseButton = useRef(0);\n  const isPanScrolling = useRef(false);\n  const panScrollTimeout = useRef();\n  useResizeHandler(zoomPane);\n  useEffect(() => {\n    if (zoomPane.current) {\n      const bbox = zoomPane.current.getBoundingClientRect();\n      const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n      const selection = select(zoomPane.current).call(d3ZoomInstance);\n      const updatedTransform = zoomIdentity.translate(defaultViewport.x, defaultViewport.y).scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n      const extent = [[0, 0], [bbox.width, bbox.height]];\n      const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n      d3ZoomInstance.transform(selection, constrainedTransform);\n      d3ZoomInstance.wheelDelta(wheelDelta);\n      store.setState({\n        d3Zoom: d3ZoomInstance,\n        d3Selection: selection,\n        d3ZoomHandler: selection.on('wheel.zoom'),\n        // we need to pass transform because zoom handler is not registered when we set the initial transform\n        transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n        domNode: zoomPane.current.closest('.react-flow')\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (d3Selection && d3Zoom) {\n      if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n        d3Selection.on('wheel.zoom', event => {\n          if (isWrappedWithClass(event, noWheelClassName)) {\n            return false;\n          }\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          const currentZoom = d3Selection.property('__zoom').k || 1;\n          const _isMacOs = isMacOs();\n          // macos sets ctrlKey=true for pinch gesture on a trackpad\n          if (event.ctrlKey && zoomOnPinch && _isMacOs) {\n            const point = pointer(event);\n            const pinchDelta = wheelDelta(event);\n            const zoom = currentZoom * Math.pow(2, pinchDelta);\n            // @ts-ignore\n            d3Zoom.scaleTo(d3Selection, zoom, point, event);\n            return;\n          }\n          // increase scroll speed in firefox\n          // firefox: deltaMode === 1; chrome: deltaMode === 0\n          const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n          let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n          let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n          // this enables vertical scrolling with shift + scroll on windows\n          if (!_isMacOs && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n            deltaX = event.deltaY * deltaNormalize;\n            deltaY = 0;\n          }\n          d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed,\n          // @ts-ignore\n          {\n            internal: true\n          });\n          const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n          const {\n            onViewportChangeStart,\n            onViewportChange,\n            onViewportChangeEnd\n          } = store.getState();\n          clearTimeout(panScrollTimeout.current);\n          // for pan on scroll we need to handle the event calls on our own\n          // we can't use the start, zoom and end events from d3-zoom\n          // because start and move gets called on every scroll event and not once at the beginning\n          if (!isPanScrolling.current) {\n            isPanScrolling.current = true;\n            onMoveStart?.(event, nextViewport);\n            onViewportChangeStart?.(nextViewport);\n          }\n          if (isPanScrolling.current) {\n            onMove?.(event, nextViewport);\n            onViewportChange?.(nextViewport);\n            panScrollTimeout.current = setTimeout(() => {\n              onMoveEnd?.(event, nextViewport);\n              onViewportChangeEnd?.(nextViewport);\n              isPanScrolling.current = false;\n            }, 150);\n          }\n        }, {\n          passive: false\n        });\n      } else if (typeof d3ZoomHandler !== 'undefined') {\n        d3Selection.on('wheel.zoom', function (event, d) {\n          if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n            return null;\n          }\n          event.preventDefault();\n          d3ZoomHandler.call(this, event, d);\n        }, {\n          passive: false\n        });\n      }\n    }\n  }, [userSelectionActive, panOnScroll, panOnScrollMode, d3Selection, d3Zoom, d3ZoomHandler, zoomActivationKeyPressed, zoomOnPinch, preventScrolling, noWheelClassName, onMoveStart, onMove, onMoveEnd]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('start', event => {\n        if (!event.sourceEvent || event.sourceEvent.internal) {\n          return null;\n        }\n        // we need to remember it here, because it's always 0 in the \"zoom\" event\n        mouseButton.current = event.sourceEvent?.button;\n        const {\n          onViewportChangeStart\n        } = store.getState();\n        const flowTransform = eventToFlowTransform(event.transform);\n        isZoomingOrPanning.current = true;\n        prevTransform.current = flowTransform;\n        if (event.sourceEvent?.type === 'mousedown') {\n          store.setState({\n            paneDragging: true\n          });\n        }\n        onViewportChangeStart?.(flowTransform);\n        onMoveStart?.(event.sourceEvent, flowTransform);\n      });\n    }\n  }, [d3Zoom, onMoveStart]);\n  useEffect(() => {\n    if (d3Zoom) {\n      if (userSelectionActive && !isZoomingOrPanning.current) {\n        d3Zoom.on('zoom', null);\n      } else if (!userSelectionActive) {\n        d3Zoom.on('zoom', event => {\n          const {\n            onViewportChange\n          } = store.getState();\n          store.setState({\n            transform: [event.transform.x, event.transform.y, event.transform.k]\n          });\n          zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n          if ((onMove || onViewportChange) && !event.sourceEvent?.internal) {\n            const flowTransform = eventToFlowTransform(event.transform);\n            onViewportChange?.(flowTransform);\n            onMove?.(event.sourceEvent, flowTransform);\n          }\n        });\n      }\n    }\n  }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.on('end', event => {\n        if (!event.sourceEvent || event.sourceEvent.internal) {\n          return null;\n        }\n        const {\n          onViewportChangeEnd\n        } = store.getState();\n        isZoomingOrPanning.current = false;\n        store.setState({\n          paneDragging: false\n        });\n        if (onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0) && !zoomedWithRightMouseButton.current) {\n          onPaneContextMenu(event.sourceEvent);\n        }\n        zoomedWithRightMouseButton.current = false;\n        if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n          const flowTransform = eventToFlowTransform(event.transform);\n          prevTransform.current = flowTransform;\n          clearTimeout(timerId.current);\n          timerId.current = setTimeout(() => {\n            onViewportChangeEnd?.(flowTransform);\n            onMoveEnd?.(event.sourceEvent, flowTransform);\n          }, panOnScroll ? 150 : 0);\n        }\n      });\n    }\n  }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n  useEffect(() => {\n    if (d3Zoom) {\n      d3Zoom.filter(event => {\n        const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n        const pinchZoom = zoomOnPinch && event.ctrlKey;\n        if (event.button === 1 && event.type === 'mousedown' && (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n          return true;\n        }\n        // if all interactions are disabled, we prevent all zoom events\n        if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n          return false;\n        }\n        // during a selection we prevent all other interactions\n        if (userSelectionActive) {\n          return false;\n        }\n        // if zoom on double click is disabled, we prevent the double click event\n        if (!zoomOnDoubleClick && event.type === 'dblclick') {\n          return false;\n        }\n        // if the target element is inside an element with the nowheel class, we prevent zooming\n        if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n          return false;\n        }\n        // if the target element is inside an element with the nopan class, we prevent panning\n        if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n          return false;\n        }\n        if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n          return false;\n        }\n        // when there is no scroll handling enabled, we prevent all wheel events\n        if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n          return false;\n        }\n        // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n        if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // if the pane is only movable using allowed clicks\n        if (Array.isArray(panOnDrag) && !panOnDrag.includes(event.button) && (event.type === 'mousedown' || event.type === 'touchstart')) {\n          return false;\n        }\n        // We only allow right clicks if pan on drag is set to right click\n        const buttonAllowed = Array.isArray(panOnDrag) && panOnDrag.includes(event.button) || !event.button || event.button <= 1;\n        // default filter for d3-zoom\n        return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n      });\n    }\n  }, [userSelectionActive, d3Zoom, zoomOnScroll, zoomOnPinch, panOnScroll, zoomOnDoubleClick, panOnDrag, elementsSelectable, zoomActivationKeyPressed]);\n  return jsx(\"div\", {\n    className: \"react-flow__renderer\",\n    ref: zoomPane,\n    style: containerStyle,\n    children: children\n  });\n};\nconst selector$9 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  userSelectionRect: s.userSelectionRect\n});\nfunction UserSelection() {\n  const {\n    userSelectionActive,\n    userSelectionRect\n  } = useStore(selector$9, shallow);\n  const isActive = userSelectionActive && userSelectionRect;\n  if (!isActive) {\n    return null;\n  }\n  return jsx(\"div\", {\n    className: \"react-flow__selection react-flow__container\",\n    style: {\n      width: userSelectionRect.width,\n      height: userSelectionRect.height,\n      transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`\n    }\n  });\n}\nfunction handleParentExpand(res, updateItem) {\n  const parent = res.find(e => e.id === updateItem.parentNode);\n  if (parent) {\n    const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n    const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n    if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n      parent.style = {\n        ...parent.style\n      } || {};\n      parent.style.width = parent.style.width ?? parent.width;\n      parent.style.height = parent.style.height ?? parent.height;\n      if (extendWidth > 0) {\n        parent.style.width += extendWidth;\n      }\n      if (extendHeight > 0) {\n        parent.style.height += extendHeight;\n      }\n      if (updateItem.position.x < 0) {\n        const xDiff = Math.abs(updateItem.position.x);\n        parent.position.x = parent.position.x - xDiff;\n        parent.style.width += xDiff;\n        updateItem.position.x = 0;\n      }\n      if (updateItem.position.y < 0) {\n        const yDiff = Math.abs(updateItem.position.y);\n        parent.position.y = parent.position.y - yDiff;\n        parent.style.height += yDiff;\n        updateItem.position.y = 0;\n      }\n      parent.width = parent.style.width;\n      parent.height = parent.style.height;\n    }\n  }\n}\nfunction applyChanges(changes, elements) {\n  // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n  if (changes.some(c => c.type === 'reset')) {\n    return changes.filter(c => c.type === 'reset').map(c => c.item);\n  }\n  const initElements = changes.filter(c => c.type === 'add').map(c => c.item);\n  return elements.reduce((res, item) => {\n    const currentChanges = changes.filter(c => c.id === item.id);\n    if (currentChanges.length === 0) {\n      res.push(item);\n      return res;\n    }\n    const updateItem = {\n      ...item\n    };\n    for (const currentChange of currentChanges) {\n      if (currentChange) {\n        switch (currentChange.type) {\n          case 'select':\n            {\n              updateItem.selected = currentChange.selected;\n              break;\n            }\n          case 'position':\n            {\n              if (typeof currentChange.position !== 'undefined') {\n                updateItem.position = currentChange.position;\n              }\n              if (typeof currentChange.positionAbsolute !== 'undefined') {\n                updateItem.positionAbsolute = currentChange.positionAbsolute;\n              }\n              if (typeof currentChange.dragging !== 'undefined') {\n                updateItem.dragging = currentChange.dragging;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'dimensions':\n            {\n              if (typeof currentChange.dimensions !== 'undefined') {\n                updateItem.width = currentChange.dimensions.width;\n                updateItem.height = currentChange.dimensions.height;\n              }\n              if (typeof currentChange.updateStyle !== 'undefined') {\n                updateItem.style = {\n                  ...(updateItem.style || {}),\n                  ...currentChange.dimensions\n                };\n              }\n              if (typeof currentChange.resizing === 'boolean') {\n                updateItem.resizing = currentChange.resizing;\n              }\n              if (updateItem.expandParent) {\n                handleParentExpand(res, updateItem);\n              }\n              break;\n            }\n          case 'remove':\n            {\n              return res;\n            }\n        }\n      }\n    }\n    res.push(updateItem);\n    return res;\n  }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n  return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n  return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n  id,\n  type: 'select',\n  selected\n});\nfunction getSelectionChanges(items, selectedIds) {\n  return items.reduce((res, item) => {\n    const willBeSelected = selectedIds.includes(item.id);\n    if (!item.selected && willBeSelected) {\n      item.selected = true;\n      res.push(createSelectionChange(item.id, true));\n    } else if (item.selected && !willBeSelected) {\n      item.selected = false;\n      res.push(createSelectionChange(item.id, false));\n    }\n    return res;\n  }, []);\n}\nconst wrapHandler = (handler, containerRef) => {\n  return event => {\n    if (event.target !== containerRef.current) {\n      return;\n    }\n    handler?.(event);\n  };\n};\nconst selector$8 = s => ({\n  userSelectionActive: s.userSelectionActive,\n  elementsSelectable: s.elementsSelectable,\n  dragging: s.paneDragging\n});\nconst Pane = memo(({\n  isSelecting,\n  selectionMode = SelectionMode.Full,\n  panOnDrag,\n  onSelectionStart,\n  onSelectionEnd,\n  onPaneClick,\n  onPaneContextMenu,\n  onPaneScroll,\n  onPaneMouseEnter,\n  onPaneMouseMove,\n  onPaneMouseLeave,\n  children\n}) => {\n  const container = useRef(null);\n  const store = useStoreApi();\n  const prevSelectedNodesCount = useRef(0);\n  const prevSelectedEdgesCount = useRef(0);\n  const containerBounds = useRef();\n  const {\n    userSelectionActive,\n    elementsSelectable,\n    dragging\n  } = useStore(selector$8, shallow);\n  const resetUserSelection = () => {\n    store.setState({\n      userSelectionActive: false,\n      userSelectionRect: null\n    });\n    prevSelectedNodesCount.current = 0;\n    prevSelectedEdgesCount.current = 0;\n  };\n  const onClick = event => {\n    onPaneClick?.(event);\n    store.getState().resetSelectedElements();\n    store.setState({\n      nodesSelectionActive: false\n    });\n  };\n  const onContextMenu = event => {\n    if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n      event.preventDefault();\n      return;\n    }\n    onPaneContextMenu?.(event);\n  };\n  const onWheel = onPaneScroll ? event => onPaneScroll(event) : undefined;\n  const onMouseDown = event => {\n    const {\n      resetSelectedElements,\n      domNode\n    } = store.getState();\n    containerBounds.current = domNode?.getBoundingClientRect();\n    if (!elementsSelectable || !isSelecting || event.button !== 0 || event.target !== container.current || !containerBounds.current) {\n      return;\n    }\n    const {\n      x,\n      y\n    } = getEventPosition(event, containerBounds.current);\n    resetSelectedElements();\n    store.setState({\n      userSelectionRect: {\n        width: 0,\n        height: 0,\n        startX: x,\n        startY: y,\n        x,\n        y\n      }\n    });\n    onSelectionStart?.(event);\n  };\n  const onMouseMove = event => {\n    const {\n      userSelectionRect,\n      nodeInternals,\n      edges,\n      transform,\n      onNodesChange,\n      onEdgesChange,\n      nodeOrigin,\n      getNodes\n    } = store.getState();\n    if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n      return;\n    }\n    store.setState({\n      userSelectionActive: true,\n      nodesSelectionActive: false\n    });\n    const mousePos = getEventPosition(event, containerBounds.current);\n    const startX = userSelectionRect.startX ?? 0;\n    const startY = userSelectionRect.startY ?? 0;\n    const nextUserSelectRect = {\n      ...userSelectionRect,\n      x: mousePos.x < startX ? mousePos.x : startX,\n      y: mousePos.y < startY ? mousePos.y : startY,\n      width: Math.abs(mousePos.x - startX),\n      height: Math.abs(mousePos.y - startY)\n    };\n    const nodes = getNodes();\n    const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n    const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map(e => e.id);\n    const selectedNodeIds = selectedNodes.map(n => n.id);\n    if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n      prevSelectedNodesCount.current = selectedNodeIds.length;\n      const changes = getSelectionChanges(nodes, selectedNodeIds);\n      if (changes.length) {\n        onNodesChange?.(changes);\n      }\n    }\n    if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n      prevSelectedEdgesCount.current = selectedEdgeIds.length;\n      const changes = getSelectionChanges(edges, selectedEdgeIds);\n      if (changes.length) {\n        onEdgesChange?.(changes);\n      }\n    }\n    store.setState({\n      userSelectionRect: nextUserSelectRect\n    });\n  };\n  const onMouseUp = event => {\n    if (event.button !== 0) {\n      return;\n    }\n    const {\n      userSelectionRect\n    } = store.getState();\n    // We only want to trigger click functions when in selection mode if\n    // the user did not move the mouse.\n    if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n      onClick?.(event);\n    }\n    store.setState({\n      nodesSelectionActive: prevSelectedNodesCount.current > 0\n    });\n    resetUserSelection();\n    onSelectionEnd?.(event);\n  };\n  const onMouseLeave = event => {\n    if (userSelectionActive) {\n      store.setState({\n        nodesSelectionActive: prevSelectedNodesCount.current > 0\n      });\n      onSelectionEnd?.(event);\n    }\n    resetUserSelection();\n  };\n  const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n  return jsxs(\"div\", {\n    className: cc(['react-flow__pane', {\n      dragging,\n      selection: isSelecting\n    }]),\n    onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container),\n    onContextMenu: wrapHandler(onContextMenu, container),\n    onWheel: wrapHandler(onWheel, container),\n    onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter,\n    onMouseDown: hasActiveSelection ? onMouseDown : undefined,\n    onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove,\n    onMouseUp: hasActiveSelection ? onMouseUp : undefined,\n    onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave,\n    ref: container,\n    style: containerStyle,\n    children: [children, jsx(UserSelection, {})]\n  });\n});\nPane.displayName = 'Pane';\nfunction isParentSelected(node, nodeInternals) {\n  if (!node.parentNode) {\n    return false;\n  }\n  const parentNode = nodeInternals.get(node.parentNode);\n  if (!parentNode) {\n    return false;\n  }\n  if (parentNode.selected) {\n    return true;\n  }\n  return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n  let current = target;\n  do {\n    if (current?.matches(selector)) return true;\n    if (current === nodeRef.current) return false;\n    current = current.parentElement;\n  } while (current);\n  return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n  return Array.from(nodeInternals.values()).filter(n => (n.selected || n.id === nodeId) && (!n.parentNode || !isParentSelected(n, nodeInternals)) && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined')).map(n => ({\n    id: n.id,\n    position: n.position || {\n      x: 0,\n      y: 0\n    },\n    positionAbsolute: n.positionAbsolute || {\n      x: 0,\n      y: 0\n    },\n    distance: {\n      x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n      y: mousePos.y - (n.positionAbsolute?.y ?? 0)\n    },\n    delta: {\n      x: 0,\n      y: 0\n    },\n    extent: n.extent,\n    parentNode: n.parentNode,\n    width: n.width,\n    height: n.height\n  }));\n}\nfunction clampNodeExtent(node, extent) {\n  if (!extent || extent === 'parent') {\n    return extent;\n  }\n  return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n  const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n  let currentExtent = clampedNodeExtent;\n  if (node.extent === 'parent') {\n    if (node.parentNode && node.width && node.height) {\n      const parent = nodeInternals.get(node.parentNode);\n      const {\n        x: parentX,\n        y: parentY\n      } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n      currentExtent = parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height) ? [[parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]], [parentX + parent.width - node.width + node.width * nodeOrigin[0], parentY + parent.height - node.height + node.height * nodeOrigin[1]]] : currentExtent;\n    } else {\n      onError?.('005', errorMessages['error005']());\n      currentExtent = clampedNodeExtent;\n    }\n  } else if (node.extent && node.parentNode) {\n    const parent = nodeInternals.get(node.parentNode);\n    const {\n      x: parentX,\n      y: parentY\n    } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n    currentExtent = [[node.extent[0][0] + parentX, node.extent[0][1] + parentY], [node.extent[1][0] + parentX, node.extent[1][1] + parentY]];\n  }\n  let parentPosition = {\n    x: 0,\n    y: 0\n  };\n  if (node.parentNode) {\n    const parentNode = nodeInternals.get(node.parentNode);\n    parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n  }\n  const positionAbsolute = currentExtent && currentExtent !== 'parent' ? clampPosition(nextPosition, currentExtent) : nextPosition;\n  return {\n    position: {\n      x: positionAbsolute.x - parentPosition.x,\n      y: positionAbsolute.y - parentPosition.y\n    },\n    positionAbsolute\n  };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({\n  nodeId,\n  dragItems,\n  nodeInternals\n}) {\n  const extentedDragItems = dragItems.map(n => {\n    const node = nodeInternals.get(n.id);\n    return {\n      ...node,\n      position: n.position,\n      positionAbsolute: n.positionAbsolute\n    };\n  });\n  return [nodeId ? extentedDragItems.find(n => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n  const handles = nodeElement.querySelectorAll(selector);\n  if (!handles || !handles.length) {\n    return null;\n  }\n  const handlesArray = Array.from(handles);\n  const nodeBounds = nodeElement.getBoundingClientRect();\n  const nodeOffset = {\n    x: nodeBounds.width * nodeOrigin[0],\n    y: nodeBounds.height * nodeOrigin[1]\n  };\n  return handlesArray.map(handle => {\n    const handleBounds = handle.getBoundingClientRect();\n    return {\n      id: handle.getAttribute('data-handleid'),\n      position: handle.getAttribute('data-handlepos'),\n      x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n      y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n      ...getDimensions(handle)\n    };\n  });\n};\nfunction getMouseHandler(id, getState, handler) {\n  return handler === undefined ? handler : event => {\n    const node = getState().nodeInternals.get(id);\n    if (node) {\n      handler(event, {\n        ...node\n      });\n    }\n  };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({\n  id,\n  store,\n  unselect = false,\n  nodeRef\n}) {\n  const {\n    addSelectedNodes,\n    unselectNodesAndEdges,\n    multiSelectionActive,\n    nodeInternals,\n    onError\n  } = store.getState();\n  const node = nodeInternals.get(id);\n  if (!node) {\n    onError?.('012', errorMessages['error012'](id));\n    return;\n  }\n  store.setState({\n    nodesSelectionActive: false\n  });\n  if (!node.selected) {\n    addSelectedNodes([id]);\n  } else if (unselect || node.selected && multiSelectionActive) {\n    unselectNodesAndEdges({\n      nodes: [node]\n    });\n    requestAnimationFrame(() => nodeRef?.current?.blur());\n  }\n}\nfunction useGetPointerPosition() {\n  const store = useStoreApi();\n  // returns the pointer position projected to the RF coordinate system\n  const getPointerPosition = useCallback(({\n    sourceEvent\n  }) => {\n    const {\n      transform,\n      snapGrid,\n      snapToGrid\n    } = store.getState();\n    const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n    const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n    const pointerPos = {\n      x: (x - transform[0]) / transform[2],\n      y: (y - transform[1]) / transform[2]\n    };\n    // we need the snapped position in order to be able to skip unnecessary drag events\n    return {\n      xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n      ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n      ...pointerPos\n    };\n  }, []);\n  return getPointerPosition;\n}\nfunction wrapSelectionDragFunc(selectionFunc) {\n  return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({\n  nodeRef,\n  disabled = false,\n  noDragClassName,\n  handleSelector,\n  nodeId,\n  isSelectable,\n  selectNodesOnDrag\n}) {\n  const store = useStoreApi();\n  const [dragging, setDragging] = useState(false);\n  const dragItems = useRef([]);\n  const lastPos = useRef({\n    x: null,\n    y: null\n  });\n  const autoPanId = useRef(0);\n  const containerBounds = useRef(null);\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const dragEvent = useRef(null);\n  const autoPanStarted = useRef(false);\n  const getPointerPosition = useGetPointerPosition();\n  useEffect(() => {\n    if (nodeRef?.current) {\n      const selection = select(nodeRef.current);\n      const updateNodes = ({\n        x,\n        y\n      }) => {\n        const {\n          nodeInternals,\n          onNodeDrag,\n          onSelectionDrag,\n          updateNodePositions,\n          nodeExtent,\n          snapGrid,\n          snapToGrid,\n          nodeOrigin,\n          onError\n        } = store.getState();\n        lastPos.current = {\n          x,\n          y\n        };\n        let hasChange = false;\n        let nodesBox = {\n          x: 0,\n          y: 0,\n          x2: 0,\n          y2: 0\n        };\n        if (dragItems.current.length > 1 && nodeExtent) {\n          const rect = getRectOfNodes(dragItems.current, nodeOrigin);\n          nodesBox = rectToBox(rect);\n        }\n        dragItems.current = dragItems.current.map(n => {\n          const nextPosition = {\n            x: x - n.distance.x,\n            y: y - n.distance.y\n          };\n          if (snapToGrid) {\n            nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n            nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n          }\n          // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n          // based on its position so that the node stays at it's position relative to the selection.\n          const adjustedNodeExtent = [[nodeExtent[0][0], nodeExtent[0][1]], [nodeExtent[1][0], nodeExtent[1][1]]];\n          if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n            adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n            adjustedNodeExtent[1][0] = n.positionAbsolute.x + (n.width ?? 0) - nodesBox.x2 + nodeExtent[1][0];\n            adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n            adjustedNodeExtent[1][1] = n.positionAbsolute.y + (n.height ?? 0) - nodesBox.y2 + nodeExtent[1][1];\n          }\n          const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n          // we want to make sure that we only fire a change event when there is a change\n          hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n          n.position = updatedPos.position;\n          n.positionAbsolute = updatedPos.positionAbsolute;\n          return n;\n        });\n        if (!hasChange) {\n          return;\n        }\n        updateNodePositions(dragItems.current, true, true);\n        setDragging(true);\n        const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n        if (onDrag && dragEvent.current) {\n          const [currentNode, nodes] = getEventHandlerParams({\n            nodeId,\n            dragItems: dragItems.current,\n            nodeInternals\n          });\n          onDrag(dragEvent.current, currentNode, nodes);\n        }\n      };\n      const autoPan = () => {\n        if (!containerBounds.current) {\n          return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n        if (xMovement !== 0 || yMovement !== 0) {\n          const {\n            transform,\n            panBy\n          } = store.getState();\n          lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n          lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n          if (panBy({\n            x: xMovement,\n            y: yMovement\n          })) {\n            updateNodes(lastPos.current);\n          }\n        }\n        autoPanId.current = requestAnimationFrame(autoPan);\n      };\n      if (disabled) {\n        selection.on('.drag', null);\n      } else {\n        const dragHandler = drag().on('start', event => {\n          const {\n            nodeInternals,\n            multiSelectionActive,\n            domNode,\n            nodesDraggable,\n            unselectNodesAndEdges,\n            onNodeDragStart,\n            onSelectionDragStart\n          } = store.getState();\n          const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n          if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n            if (!nodeInternals.get(nodeId)?.selected) {\n              // we need to reset selected nodes when selectNodesOnDrag=false\n              unselectNodesAndEdges();\n            }\n          }\n          if (nodeId && isSelectable && selectNodesOnDrag) {\n            handleNodeClick({\n              id: nodeId,\n              store,\n              nodeRef: nodeRef\n            });\n          }\n          const pointerPos = getPointerPosition(event);\n          lastPos.current = pointerPos;\n          dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n          if (onStart && dragItems.current) {\n            const [currentNode, nodes] = getEventHandlerParams({\n              nodeId,\n              dragItems: dragItems.current,\n              nodeInternals\n            });\n            onStart(event.sourceEvent, currentNode, nodes);\n          }\n          containerBounds.current = domNode?.getBoundingClientRect() || null;\n          mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n        }).on('drag', event => {\n          const pointerPos = getPointerPosition(event);\n          const {\n            autoPanOnNodeDrag\n          } = store.getState();\n          if (!autoPanStarted.current && autoPanOnNodeDrag) {\n            autoPanStarted.current = true;\n            autoPan();\n          }\n          // skip events without movement\n          if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) && dragItems.current) {\n            dragEvent.current = event.sourceEvent;\n            mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n            updateNodes(pointerPos);\n          }\n        }).on('end', event => {\n          setDragging(false);\n          autoPanStarted.current = false;\n          cancelAnimationFrame(autoPanId.current);\n          if (dragItems.current) {\n            const {\n              updateNodePositions,\n              nodeInternals,\n              onNodeDragStop,\n              onSelectionDragStop\n            } = store.getState();\n            const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n            updateNodePositions(dragItems.current, false, false);\n            if (onStop) {\n              const [currentNode, nodes] = getEventHandlerParams({\n                nodeId,\n                dragItems: dragItems.current,\n                nodeInternals\n              });\n              onStop(event.sourceEvent, currentNode, nodes);\n            }\n          }\n        }).filter(event => {\n          const target = event.target;\n          const isDraggable = !event.button && (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) && (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n          return isDraggable;\n        });\n        selection.call(dragHandler);\n        return () => {\n          selection.on('.drag', null);\n        };\n      }\n    }\n  }, [nodeRef, disabled, noDragClassName, handleSelector, isSelectable, store, nodeId, selectNodesOnDrag, getPointerPosition]);\n  return dragging;\n}\nfunction useUpdateNodePositions() {\n  const store = useStoreApi();\n  const updatePositions = useCallback(params => {\n    const {\n      nodeInternals,\n      nodeExtent,\n      updateNodePositions,\n      getNodes,\n      snapToGrid,\n      snapGrid,\n      onError,\n      nodesDraggable\n    } = store.getState();\n    const selectedNodes = getNodes().filter(n => n.selected && (n.draggable || nodesDraggable && typeof n.draggable === 'undefined'));\n    // by default a node moves 5px on each key press, or 20px if shift is pressed\n    // if snap grid is enabled, we use that for the velocity.\n    const xVelo = snapToGrid ? snapGrid[0] : 5;\n    const yVelo = snapToGrid ? snapGrid[1] : 5;\n    const factor = params.isShiftPressed ? 4 : 1;\n    const positionDiffX = params.x * xVelo * factor;\n    const positionDiffY = params.y * yVelo * factor;\n    const nodeUpdates = selectedNodes.map(n => {\n      if (n.positionAbsolute) {\n        const nextPosition = {\n          x: n.positionAbsolute.x + positionDiffX,\n          y: n.positionAbsolute.y + positionDiffY\n        };\n        if (snapToGrid) {\n          nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n          nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n        }\n        const {\n          positionAbsolute,\n          position\n        } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n        n.position = position;\n        n.positionAbsolute = positionAbsolute;\n      }\n      return n;\n    });\n    updateNodePositions(nodeUpdates, true, false);\n  }, []);\n  return updatePositions;\n}\nconst arrowKeyDiffs = {\n  ArrowUp: {\n    x: 0,\n    y: -1\n  },\n  ArrowDown: {\n    x: 0,\n    y: 1\n  },\n  ArrowLeft: {\n    x: -1,\n    y: 0\n  },\n  ArrowRight: {\n    x: 1,\n    y: 0\n  }\n};\nvar wrapNode = NodeComponent => {\n  const NodeWrapper = ({\n    id,\n    type,\n    data,\n    xPos,\n    yPos,\n    xPosOrigin,\n    yPosOrigin,\n    selected,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onContextMenu,\n    onDoubleClick,\n    style,\n    className,\n    isDraggable,\n    isSelectable,\n    isConnectable,\n    isFocusable,\n    selectNodesOnDrag,\n    sourcePosition,\n    targetPosition,\n    hidden,\n    resizeObserver,\n    dragHandle,\n    zIndex,\n    isParent,\n    noDragClassName,\n    noPanClassName,\n    initialized,\n    disableKeyboardA11y,\n    ariaLabel,\n    rfId\n  }) => {\n    const store = useStoreApi();\n    const nodeRef = useRef(null);\n    const prevSourcePosition = useRef(sourcePosition);\n    const prevTargetPosition = useRef(targetPosition);\n    const prevType = useRef(type);\n    const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n    const updatePositions = useUpdateNodePositions();\n    const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n    const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n    const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n    const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n    const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n    const onSelectNodeHandler = event => {\n      if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n        // this handler gets called within the drag start event when selectNodesOnDrag=true\n        handleNodeClick({\n          id,\n          store,\n          nodeRef\n        });\n      }\n      if (onClick) {\n        const node = store.getState().nodeInternals.get(id);\n        if (node) {\n          onClick(event, {\n            ...node\n          });\n        }\n      }\n    };\n    const onKeyDown = event => {\n      if (isInputDOMNode(event)) {\n        return;\n      }\n      if (elementSelectionKeys.includes(event.key) && isSelectable) {\n        const unselect = event.key === 'Escape';\n        handleNodeClick({\n          id,\n          store,\n          unselect,\n          nodeRef\n        });\n      } else if (!disableKeyboardA11y && isDraggable && selected && Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n        store.setState({\n          ariaLiveMessage: `Moved selected node ${event.key.replace('Arrow', '').toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`\n        });\n        updatePositions({\n          x: arrowKeyDiffs[event.key].x,\n          y: arrowKeyDiffs[event.key].y,\n          isShiftPressed: event.shiftKey\n        });\n      }\n    };\n    useEffect(() => {\n      if (nodeRef.current && !hidden) {\n        const currNode = nodeRef.current;\n        resizeObserver?.observe(currNode);\n        return () => resizeObserver?.unobserve(currNode);\n      }\n    }, [hidden]);\n    useEffect(() => {\n      // when the user programmatically changes the source or handle position, we re-initialize the node\n      const typeChanged = prevType.current !== type;\n      const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n      const targetPosChanged = prevTargetPosition.current !== targetPosition;\n      if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n        if (typeChanged) {\n          prevType.current = type;\n        }\n        if (sourcePosChanged) {\n          prevSourcePosition.current = sourcePosition;\n        }\n        if (targetPosChanged) {\n          prevTargetPosition.current = targetPosition;\n        }\n        store.getState().updateNodeDimensions([{\n          id,\n          nodeElement: nodeRef.current,\n          forceUpdate: true\n        }]);\n      }\n    }, [id, type, sourcePosition, targetPosition]);\n    const dragging = useDrag({\n      nodeRef,\n      disabled: hidden || !isDraggable,\n      noDragClassName,\n      handleSelector: dragHandle,\n      nodeId: id,\n      isSelectable,\n      selectNodesOnDrag\n    });\n    if (hidden) {\n      return null;\n    }\n    return jsx(\"div\", {\n      className: cc(['react-flow__node', `react-flow__node-${type}`, {\n        // this is overwritable by passing `nopan` as a class name\n        [noPanClassName]: isDraggable\n      }, className, {\n        selected,\n        selectable: isSelectable,\n        parent: isParent,\n        dragging\n      }]),\n      ref: nodeRef,\n      style: {\n        zIndex,\n        transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n        pointerEvents: hasPointerEvents ? 'all' : 'none',\n        visibility: initialized ? 'visible' : 'hidden',\n        ...style\n      },\n      \"data-id\": id,\n      \"data-testid\": `rf__node-${id}`,\n      onMouseEnter: onMouseEnterHandler,\n      onMouseMove: onMouseMoveHandler,\n      onMouseLeave: onMouseLeaveHandler,\n      onContextMenu: onContextMenuHandler,\n      onClick: onSelectNodeHandler,\n      onDoubleClick: onDoubleClickHandler,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : undefined,\n      \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`,\n      \"aria-label\": ariaLabel,\n      children: jsx(Provider, {\n        value: id,\n        children: jsx(NodeComponent, {\n          id: id,\n          data: data,\n          type: type,\n          xPos: xPos,\n          yPos: yPos,\n          selected: selected,\n          isConnectable: isConnectable,\n          sourcePosition: sourcePosition,\n          targetPosition: targetPosition,\n          dragging: dragging,\n          dragHandle: dragHandle,\n          zIndex: zIndex\n        })\n      })\n    });\n  };\n  NodeWrapper.displayName = 'NodeWrapper';\n  return memo(NodeWrapper);\n};\nconst selector$7 = s => {\n  const selectedNodes = s.getNodes().filter(n => n.selected);\n  return {\n    ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n    transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n    userSelectionActive: s.userSelectionActive\n  };\n};\nfunction NodesSelection({\n  onSelectionContextMenu,\n  noPanClassName,\n  disableKeyboardA11y\n}) {\n  const store = useStoreApi();\n  const {\n    width,\n    height,\n    x: left,\n    y: top,\n    transformString,\n    userSelectionActive\n  } = useStore(selector$7, shallow);\n  const updatePositions = useUpdateNodePositions();\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    if (!disableKeyboardA11y) {\n      nodeRef.current?.focus({\n        preventScroll: true\n      });\n    }\n  }, [disableKeyboardA11y]);\n  useDrag({\n    nodeRef\n  });\n  if (userSelectionActive || !width || !height) {\n    return null;\n  }\n  const onContextMenu = onSelectionContextMenu ? event => {\n    const selectedNodes = store.getState().getNodes().filter(n => n.selected);\n    onSelectionContextMenu(event, selectedNodes);\n  } : undefined;\n  const onKeyDown = event => {\n    if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n      updatePositions({\n        x: arrowKeyDiffs[event.key].x,\n        y: arrowKeyDiffs[event.key].y,\n        isShiftPressed: event.shiftKey\n      });\n    }\n  };\n  return jsx(\"div\", {\n    className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]),\n    style: {\n      transform: transformString\n    },\n    children: jsx(\"div\", {\n      ref: nodeRef,\n      className: \"react-flow__nodesselection-rect\",\n      onContextMenu: onContextMenu,\n      tabIndex: disableKeyboardA11y ? undefined : -1,\n      onKeyDown: disableKeyboardA11y ? undefined : onKeyDown,\n      style: {\n        width,\n        height,\n        top,\n        left\n      }\n    })\n  });\n}\nvar NodesSelection$1 = memo(NodesSelection);\nconst selector$6 = s => s.nodesSelectionActive;\nconst FlowRenderer = ({\n  children,\n  onPaneClick,\n  onPaneMouseEnter,\n  onPaneMouseMove,\n  onPaneMouseLeave,\n  onPaneContextMenu,\n  onPaneScroll,\n  deleteKeyCode,\n  onMove,\n  onMoveStart,\n  onMoveEnd,\n  selectionKeyCode,\n  selectionOnDrag,\n  selectionMode,\n  onSelectionStart,\n  onSelectionEnd,\n  multiSelectionKeyCode,\n  panActivationKeyCode,\n  zoomActivationKeyCode,\n  elementsSelectable,\n  zoomOnScroll,\n  zoomOnPinch,\n  panOnScroll,\n  panOnScrollSpeed,\n  panOnScrollMode,\n  zoomOnDoubleClick,\n  panOnDrag: _panOnDrag,\n  defaultViewport,\n  translateExtent,\n  minZoom,\n  maxZoom,\n  preventScrolling,\n  onSelectionContextMenu,\n  noWheelClassName,\n  noPanClassName,\n  disableKeyboardA11y\n}) => {\n  const nodesSelectionActive = useStore(selector$6);\n  const selectionKeyPressed = useKeyPress(selectionKeyCode);\n  const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n  const panOnDrag = panActivationKeyPressed || _panOnDrag;\n  const isSelecting = selectionKeyPressed || selectionOnDrag && panOnDrag !== true;\n  useGlobalKeyHandler({\n    deleteKeyCode,\n    multiSelectionKeyCode\n  });\n  return jsx(ZoomPane, {\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    onPaneContextMenu: onPaneContextMenu,\n    elementsSelectable: elementsSelectable,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnDrag: !selectionKeyPressed && panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    preventScrolling: preventScrolling,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    children: jsxs(Pane, {\n      onSelectionStart: onSelectionStart,\n      onSelectionEnd: onSelectionEnd,\n      onPaneClick: onPaneClick,\n      onPaneMouseEnter: onPaneMouseEnter,\n      onPaneMouseMove: onPaneMouseMove,\n      onPaneMouseLeave: onPaneMouseLeave,\n      onPaneContextMenu: onPaneContextMenu,\n      onPaneScroll: onPaneScroll,\n      panOnDrag: panOnDrag,\n      isSelecting: !!isSelecting,\n      selectionMode: selectionMode,\n      children: [children, nodesSelectionActive && jsx(NodesSelection$1, {\n        onSelectionContextMenu: onSelectionContextMenu,\n        noPanClassName: noPanClassName,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\nfunction useVisibleNodes(onlyRenderVisible) {\n  const nodes = useStore(useCallback(s => onlyRenderVisible ? getNodesInside(s.nodeInternals, {\n    x: 0,\n    y: 0,\n    width: s.width,\n    height: s.height\n  }, s.transform, true) : s.getNodes(), [onlyRenderVisible]));\n  return nodes;\n}\nfunction createNodeTypes(nodeTypes) {\n  const standardTypes = {\n    input: wrapNode(nodeTypes.input || InputNode$1),\n    default: wrapNode(nodeTypes.default || DefaultNode$1),\n    output: wrapNode(nodeTypes.output || OutputNode$1),\n    group: wrapNode(nodeTypes.group || GroupNode)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(nodeTypes).filter(k => !['input', 'default', 'output', 'group'].includes(k)).reduce((res, key) => {\n    res[key] = wrapNode(nodeTypes[key] || DefaultNode$1);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nconst getPositionWithOrigin = ({\n  x,\n  y,\n  width,\n  height,\n  origin\n}) => {\n  if (!width || !height) {\n    return {\n      x,\n      y\n    };\n  }\n  if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n    return {\n      x,\n      y\n    };\n  }\n  return {\n    x: x - width * origin[0],\n    y: y - height * origin[1]\n  };\n};\nconst selector$5 = s => ({\n  nodesDraggable: s.nodesDraggable,\n  nodesConnectable: s.nodesConnectable,\n  nodesFocusable: s.nodesFocusable,\n  elementsSelectable: s.elementsSelectable,\n  updateNodeDimensions: s.updateNodeDimensions,\n  onError: s.onError\n});\nconst NodeRenderer = props => {\n  const {\n    nodesDraggable,\n    nodesConnectable,\n    nodesFocusable,\n    elementsSelectable,\n    updateNodeDimensions,\n    onError\n  } = useStore(selector$5, shallow);\n  const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n  const resizeObserverRef = useRef();\n  const resizeObserver = useMemo(() => {\n    if (typeof ResizeObserver === 'undefined') {\n      return null;\n    }\n    const observer = new ResizeObserver(entries => {\n      const updates = entries.map(entry => ({\n        id: entry.target.getAttribute('data-id'),\n        nodeElement: entry.target,\n        forceUpdate: true\n      }));\n      updateNodeDimensions(updates);\n    });\n    resizeObserverRef.current = observer;\n    return observer;\n  }, []);\n  useEffect(() => {\n    return () => {\n      resizeObserverRef?.current?.disconnect();\n    };\n  }, []);\n  return jsx(\"div\", {\n    className: \"react-flow__nodes\",\n    style: containerStyle,\n    children: nodes.map(node => {\n      let nodeType = node.type || 'default';\n      if (!props.nodeTypes[nodeType]) {\n        onError?.('003', errorMessages['error003'](nodeType));\n        nodeType = 'default';\n      }\n      const NodeComponent = props.nodeTypes[nodeType] || props.nodeTypes.default;\n      const isDraggable = !!(node.draggable || nodesDraggable && typeof node.draggable === 'undefined');\n      const isSelectable = !!(node.selectable || elementsSelectable && typeof node.selectable === 'undefined');\n      const isConnectable = !!(node.connectable || nodesConnectable && typeof node.connectable === 'undefined');\n      const isFocusable = !!(node.focusable || nodesFocusable && typeof node.focusable === 'undefined');\n      const clampedPosition = props.nodeExtent ? clampPosition(node.positionAbsolute, props.nodeExtent) : node.positionAbsolute;\n      const posX = clampedPosition?.x ?? 0;\n      const posY = clampedPosition?.y ?? 0;\n      const posOrigin = getPositionWithOrigin({\n        x: posX,\n        y: posY,\n        width: node.width ?? 0,\n        height: node.height ?? 0,\n        origin: props.nodeOrigin\n      });\n      return jsx(NodeComponent, {\n        id: node.id,\n        className: node.className,\n        style: node.style,\n        type: nodeType,\n        data: node.data,\n        sourcePosition: node.sourcePosition || Position.Bottom,\n        targetPosition: node.targetPosition || Position.Top,\n        hidden: node.hidden,\n        xPos: posX,\n        yPos: posY,\n        xPosOrigin: posOrigin.x,\n        yPosOrigin: posOrigin.y,\n        selectNodesOnDrag: props.selectNodesOnDrag,\n        onClick: props.onNodeClick,\n        onMouseEnter: props.onNodeMouseEnter,\n        onMouseMove: props.onNodeMouseMove,\n        onMouseLeave: props.onNodeMouseLeave,\n        onContextMenu: props.onNodeContextMenu,\n        onDoubleClick: props.onNodeDoubleClick,\n        selected: !!node.selected,\n        isDraggable: isDraggable,\n        isSelectable: isSelectable,\n        isConnectable: isConnectable,\n        isFocusable: isFocusable,\n        resizeObserver: resizeObserver,\n        dragHandle: node.dragHandle,\n        zIndex: node[internalsSymbol]?.z ?? 0,\n        isParent: !!node[internalsSymbol]?.isParent,\n        noDragClassName: props.noDragClassName,\n        noPanClassName: props.noPanClassName,\n        initialized: !!node.width && !!node.height,\n        rfId: props.rfId,\n        disableKeyboardA11y: props.disableKeyboardA11y,\n        ariaLabel: node.ariaLabel\n      }, node.id);\n    })\n  });\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\nconst shiftX = (x, shift, position) => {\n  if (position === Position.Left) return x - shift;\n  if (position === Position.Right) return x + shift;\n  return x;\n};\nconst shiftY = (y, shift, position) => {\n  if (position === Position.Top) return y - shift;\n  if (position === Position.Bottom) return y + shift;\n  return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({\n  position,\n  centerX,\n  centerY,\n  radius = 10,\n  onMouseDown,\n  onMouseEnter,\n  onMouseOut,\n  type\n}) => jsx(\"circle\", {\n  onMouseDown: onMouseDown,\n  onMouseEnter: onMouseEnter,\n  onMouseOut: onMouseOut,\n  className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]),\n  cx: shiftX(centerX, radius, position),\n  cy: shiftY(centerY, radius, position),\n  r: radius,\n  stroke: \"transparent\",\n  fill: \"transparent\"\n});\nconst alwaysValidConnection = () => true;\nvar wrapEdge = EdgeComponent => {\n  const EdgeWrapper = ({\n    id,\n    className,\n    type,\n    data,\n    onClick,\n    onEdgeDoubleClick,\n    selected,\n    animated,\n    label,\n    labelStyle,\n    labelShowBg,\n    labelBgStyle,\n    labelBgPadding,\n    labelBgBorderRadius,\n    style,\n    source,\n    target,\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n    sourcePosition,\n    targetPosition,\n    elementsSelectable,\n    hidden,\n    sourceHandleId,\n    targetHandleId,\n    onContextMenu,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    edgeUpdaterRadius,\n    onEdgeUpdate,\n    onEdgeUpdateStart,\n    onEdgeUpdateEnd,\n    markerEnd,\n    markerStart,\n    rfId,\n    ariaLabel,\n    isFocusable,\n    isUpdatable,\n    pathOptions,\n    interactionWidth\n  }) => {\n    const edgeRef = useRef(null);\n    const [updateHover, setUpdateHover] = useState(false);\n    const [updating, setUpdating] = useState(false);\n    const store = useStoreApi();\n    const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n    const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n    if (hidden) {\n      return null;\n    }\n    const onEdgeClick = event => {\n      const {\n        edges,\n        addSelectedEdges\n      } = store.getState();\n      if (elementsSelectable) {\n        store.setState({\n          nodesSelectionActive: false\n        });\n        addSelectedEdges([id]);\n      }\n      if (onClick) {\n        const edge = edges.find(e => e.id === id);\n        onClick(event, edge);\n      }\n    };\n    const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n    const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n    const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n    const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n    const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n    const handleEdgeUpdater = (event, isSourceHandle) => {\n      // avoid triggering edge updater if mouse btn is not left\n      if (event.button !== 0) {\n        return;\n      }\n      const {\n        edges,\n        isValidConnection: isValidConnectionStore\n      } = store.getState();\n      const nodeId = isSourceHandle ? target : source;\n      const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n      const handleType = isSourceHandle ? 'target' : 'source';\n      const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n      const isTarget = isSourceHandle;\n      const edge = edges.find(e => e.id === id);\n      setUpdating(true);\n      onEdgeUpdateStart?.(event, edge, handleType);\n      const _onEdgeUpdateEnd = evt => {\n        setUpdating(false);\n        onEdgeUpdateEnd?.(evt, edge, handleType);\n      };\n      const onConnectEdge = connection => onEdgeUpdate?.(edge, connection);\n      handlePointerDown({\n        event,\n        handleId,\n        nodeId,\n        onConnect: onConnectEdge,\n        isTarget,\n        getState: store.getState,\n        setState: store.setState,\n        isValidConnection,\n        edgeUpdaterType: handleType,\n        onEdgeUpdateEnd: _onEdgeUpdateEnd\n      });\n    };\n    const onEdgeUpdaterSourceMouseDown = event => handleEdgeUpdater(event, true);\n    const onEdgeUpdaterTargetMouseDown = event => handleEdgeUpdater(event, false);\n    const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n    const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n    const inactive = !elementsSelectable && !onClick;\n    const onKeyDown = event => {\n      if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n        const {\n          unselectNodesAndEdges,\n          addSelectedEdges,\n          edges\n        } = store.getState();\n        const unselect = event.key === 'Escape';\n        if (unselect) {\n          edgeRef.current?.blur();\n          unselectNodesAndEdges({\n            edges: [edges.find(e => e.id === id)]\n          });\n        } else {\n          addSelectedEdges([id]);\n        }\n      }\n    };\n    return jsxs(\"g\", {\n      className: cc(['react-flow__edge', `react-flow__edge-${type}`, className, {\n        selected,\n        animated,\n        inactive,\n        updating: updateHover\n      }]),\n      onClick: onEdgeClick,\n      onDoubleClick: onEdgeDoubleClickHandler,\n      onContextMenu: onEdgeContextMenu,\n      onMouseEnter: onEdgeMouseEnter,\n      onMouseMove: onEdgeMouseMove,\n      onMouseLeave: onEdgeMouseLeave,\n      onKeyDown: isFocusable ? onKeyDown : undefined,\n      tabIndex: isFocusable ? 0 : undefined,\n      role: isFocusable ? 'button' : 'img',\n      \"data-testid\": `rf__edge-${id}`,\n      \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`,\n      \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined,\n      ref: edgeRef,\n      children: [!updating && jsx(EdgeComponent, {\n        id: id,\n        source: source,\n        target: target,\n        selected: selected,\n        animated: animated,\n        label: label,\n        labelStyle: labelStyle,\n        labelShowBg: labelShowBg,\n        labelBgStyle: labelBgStyle,\n        labelBgPadding: labelBgPadding,\n        labelBgBorderRadius: labelBgBorderRadius,\n        data: data,\n        style: style,\n        sourceX: sourceX,\n        sourceY: sourceY,\n        targetX: targetX,\n        targetY: targetY,\n        sourcePosition: sourcePosition,\n        targetPosition: targetPosition,\n        sourceHandleId: sourceHandleId,\n        targetHandleId: targetHandleId,\n        markerStart: markerStartUrl,\n        markerEnd: markerEndUrl,\n        pathOptions: pathOptions,\n        interactionWidth: interactionWidth\n      }), isUpdatable && jsxs(Fragment, {\n        children: [(isUpdatable === 'source' || isUpdatable === true) && jsx(EdgeAnchor, {\n          position: sourcePosition,\n          centerX: sourceX,\n          centerY: sourceY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterSourceMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"source\"\n        }), (isUpdatable === 'target' || isUpdatable === true) && jsx(EdgeAnchor, {\n          position: targetPosition,\n          centerX: targetX,\n          centerY: targetY,\n          radius: edgeUpdaterRadius,\n          onMouseDown: onEdgeUpdaterTargetMouseDown,\n          onMouseEnter: onEdgeUpdaterMouseEnter,\n          onMouseOut: onEdgeUpdaterMouseOut,\n          type: \"target\"\n        })]\n      })]\n    });\n  };\n  EdgeWrapper.displayName = 'EdgeWrapper';\n  return memo(EdgeWrapper);\n};\nfunction createEdgeTypes(edgeTypes) {\n  const standardTypes = {\n    default: wrapEdge(edgeTypes.default || BezierEdge),\n    straight: wrapEdge(edgeTypes.bezier || StraightEdge),\n    step: wrapEdge(edgeTypes.step || StepEdge),\n    smoothstep: wrapEdge(edgeTypes.step || SmoothStepEdge),\n    simplebezier: wrapEdge(edgeTypes.simplebezier || SimpleBezierEdge)\n  };\n  const wrappedTypes = {};\n  const specialTypes = Object.keys(edgeTypes).filter(k => !['default', 'bezier'].includes(k)).reduce((res, key) => {\n    res[key] = wrapEdge(edgeTypes[key] || BezierEdge);\n    return res;\n  }, wrappedTypes);\n  return {\n    ...standardTypes,\n    ...specialTypes\n  };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n  const x = (handle?.x || 0) + nodeRect.x;\n  const y = (handle?.y || 0) + nodeRect.y;\n  const width = handle?.width || nodeRect.width;\n  const height = handle?.height || nodeRect.height;\n  switch (position) {\n    case Position.Top:\n      return {\n        x: x + width / 2,\n        y\n      };\n    case Position.Right:\n      return {\n        x: x + width,\n        y: y + height / 2\n      };\n    case Position.Bottom:\n      return {\n        x: x + width / 2,\n        y: y + height\n      };\n    case Position.Left:\n      return {\n        x,\n        y: y + height / 2\n      };\n  }\n}\nfunction getHandle(bounds, handleId) {\n  if (!bounds) {\n    return null;\n  }\n  if (bounds.length === 1 || !handleId) {\n    return bounds[0];\n  } else if (handleId) {\n    return bounds.find(d => d.id === handleId) || null;\n  }\n  return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n  const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n  const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n  return {\n    sourceX: sourceHandlePos.x,\n    sourceY: sourceHandlePos.y,\n    targetX: targetHandlePos.x,\n    targetY: targetHandlePos.y\n  };\n};\nfunction isEdgeVisible({\n  sourcePos,\n  targetPos,\n  sourceWidth,\n  sourceHeight,\n  targetWidth,\n  targetHeight,\n  width,\n  height,\n  transform\n}) {\n  const edgeBox = {\n    x: Math.min(sourcePos.x, targetPos.x),\n    y: Math.min(sourcePos.y, targetPos.y),\n    x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n    y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight)\n  };\n  if (edgeBox.x === edgeBox.x2) {\n    edgeBox.x2 += 1;\n  }\n  if (edgeBox.y === edgeBox.y2) {\n    edgeBox.y2 += 1;\n  }\n  const viewBox = rectToBox({\n    x: (0 - transform[0]) / transform[2],\n    y: (0 - transform[1]) / transform[2],\n    width: width / transform[2],\n    height: height / transform[2]\n  });\n  const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n  const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n  const overlappingArea = Math.ceil(xOverlap * yOverlap);\n  return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n  const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n  const isValid = handleBounds && node?.width && node?.height && typeof node?.positionAbsolute?.x !== 'undefined' && typeof node?.positionAbsolute?.y !== 'undefined';\n  return [{\n    x: node?.positionAbsolute?.x || 0,\n    y: node?.positionAbsolute?.y || 0,\n    width: node?.width || 0,\n    height: node?.height || 0\n  }, handleBounds, !!isValid];\n}\nconst defaultEdgeTree = [{\n  level: 0,\n  isMaxLevel: true,\n  edges: []\n}];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n  let maxLevel = -1;\n  const levelLookup = edges.reduce((tree, edge) => {\n    const hasZIndex = isNumeric(edge.zIndex);\n    let z = hasZIndex ? edge.zIndex : 0;\n    if (elevateEdgesOnSelect) {\n      const targetNode = nodeInternals.get(edge.target);\n      const sourceNode = nodeInternals.get(edge.source);\n      const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n      const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n      z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n    }\n    if (tree[z]) {\n      tree[z].push(edge);\n    } else {\n      tree[z] = [edge];\n    }\n    maxLevel = z > maxLevel ? z : maxLevel;\n    return tree;\n  }, {});\n  const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n    const level = +key;\n    return {\n      edges,\n      level,\n      isMaxLevel: level === maxLevel\n    };\n  });\n  if (edgeTree.length === 0) {\n    return defaultEdgeTree;\n  }\n  return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n  const edges = useStore(useCallback(s => {\n    if (!onlyRenderVisible) {\n      return s.edges;\n    }\n    return s.edges.filter(e => {\n      const sourceNode = nodeInternals.get(e.source);\n      const targetNode = nodeInternals.get(e.target);\n      return sourceNode?.width && sourceNode?.height && targetNode?.width && targetNode?.height && isEdgeVisible({\n        sourcePos: sourceNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        targetPos: targetNode.positionAbsolute || {\n          x: 0,\n          y: 0\n        },\n        sourceWidth: sourceNode.width,\n        sourceHeight: sourceNode.height,\n        targetWidth: targetNode.width,\n        targetHeight: targetNode.height,\n        width: s.width,\n        height: s.height,\n        transform: s.transform\n      });\n    });\n  }, [onlyRenderVisible, nodeInternals]));\n  return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\nconst ArrowSymbol = ({\n  color = 'none',\n  strokeWidth = 1\n}) => {\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: \"none\",\n    points: \"-5,-4 0,0 -5,4\"\n  });\n};\nconst ArrowClosedSymbol = ({\n  color = 'none',\n  strokeWidth = 1\n}) => {\n  return jsx(\"polyline\", {\n    stroke: color,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: strokeWidth,\n    fill: color,\n    points: \"-5,-4 0,0 -5,4 -5,-4\"\n  });\n};\nconst MarkerSymbols = {\n  [MarkerType.Arrow]: ArrowSymbol,\n  [MarkerType.ArrowClosed]: ArrowClosedSymbol\n};\nfunction useMarkerSymbol(type) {\n  const store = useStoreApi();\n  const symbol = useMemo(() => {\n    const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n    if (!symbolExists) {\n      store.getState().onError?.('009', errorMessages['error009'](type));\n      return null;\n    }\n    return MarkerSymbols[type];\n  }, [type]);\n  return symbol;\n}\nconst Marker = ({\n  id,\n  type,\n  color,\n  width = 12.5,\n  height = 12.5,\n  markerUnits = 'strokeWidth',\n  strokeWidth,\n  orient = 'auto-start-reverse'\n}) => {\n  const Symbol = useMarkerSymbol(type);\n  if (!Symbol) {\n    return null;\n  }\n  return jsx(\"marker\", {\n    className: \"react-flow__arrowhead\",\n    id: id,\n    markerWidth: `${width}`,\n    markerHeight: `${height}`,\n    viewBox: \"-10 -10 20 20\",\n    markerUnits: markerUnits,\n    orient: orient,\n    refX: \"0\",\n    refY: \"0\",\n    children: jsx(Symbol, {\n      color: color,\n      strokeWidth: strokeWidth\n    })\n  });\n};\nconst markerSelector = ({\n  defaultColor,\n  rfId\n}) => s => {\n  const ids = [];\n  return s.edges.reduce((markers, edge) => {\n    [edge.markerStart, edge.markerEnd].forEach(marker => {\n      if (marker && typeof marker === 'object') {\n        const markerId = getMarkerId(marker, rfId);\n        if (!ids.includes(markerId)) {\n          markers.push({\n            id: markerId,\n            color: marker.color || defaultColor,\n            ...marker\n          });\n          ids.push(markerId);\n        }\n      }\n    });\n    return markers;\n  }, []).sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({\n  defaultColor,\n  rfId\n}) => {\n  const markers = useStore(useCallback(markerSelector({\n    defaultColor,\n    rfId\n  }), [defaultColor, rfId]),\n  // the id includes all marker options, so we just need to look at that part of the marker\n  (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n  return jsx(\"defs\", {\n    children: markers.map(marker => jsx(Marker, {\n      id: marker.id,\n      type: marker.type,\n      color: marker.color,\n      width: marker.width,\n      height: marker.height,\n      markerUnits: marker.markerUnits,\n      strokeWidth: marker.strokeWidth,\n      orient: marker.orient\n    }, marker.id))\n  });\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\nconst selector$4 = s => ({\n  nodesConnectable: s.nodesConnectable,\n  edgesFocusable: s.edgesFocusable,\n  edgesUpdatable: s.edgesUpdatable,\n  elementsSelectable: s.elementsSelectable,\n  width: s.width,\n  height: s.height,\n  connectionMode: s.connectionMode,\n  nodeInternals: s.nodeInternals,\n  onError: s.onError\n});\nconst EdgeRenderer = ({\n  defaultMarkerColor,\n  onlyRenderVisibleElements,\n  elevateEdgesOnSelect,\n  rfId,\n  edgeTypes,\n  noPanClassName,\n  onEdgeUpdate,\n  onEdgeContextMenu,\n  onEdgeMouseEnter,\n  onEdgeMouseMove,\n  onEdgeMouseLeave,\n  onEdgeClick,\n  edgeUpdaterRadius,\n  onEdgeDoubleClick,\n  onEdgeUpdateStart,\n  onEdgeUpdateEnd,\n  children\n}) => {\n  const {\n    edgesFocusable,\n    edgesUpdatable,\n    elementsSelectable,\n    width,\n    height,\n    connectionMode,\n    nodeInternals,\n    onError\n  } = useStore(selector$4, shallow);\n  const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n  if (!width) {\n    return null;\n  }\n  return jsxs(Fragment, {\n    children: [edgeTree.map(({\n      level,\n      edges,\n      isMaxLevel\n    }) => jsxs(\"svg\", {\n      style: {\n        zIndex: level\n      },\n      width: width,\n      height: height,\n      className: \"react-flow__edges react-flow__container\",\n      children: [isMaxLevel && jsx(MarkerDefinitions$1, {\n        defaultColor: defaultMarkerColor,\n        rfId: rfId\n      }), jsx(\"g\", {\n        children: edges.map(edge => {\n          const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n          const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n          if (!sourceIsValid || !targetIsValid) {\n            return null;\n          }\n          let edgeType = edge.type || 'default';\n          if (!edgeTypes[edgeType]) {\n            onError?.('011', errorMessages['error011'](edgeType));\n            edgeType = 'default';\n          }\n          const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n          // when connection type is loose we can define all handles as sources and connect source -> source\n          const targetNodeHandles = connectionMode === ConnectionMode.Strict ? targetHandleBounds.target : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n          const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n          const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n          const sourcePosition = sourceHandle?.position || Position.Bottom;\n          const targetPosition = targetHandle?.position || Position.Top;\n          const isFocusable = !!(edge.focusable || edgesFocusable && typeof edge.focusable === 'undefined');\n          const isUpdatable = typeof onEdgeUpdate !== 'undefined' && (edge.updatable || edgesUpdatable && typeof edge.updatable === 'undefined');\n          if (!sourceHandle || !targetHandle) {\n            onError?.('008', errorMessages['error008'](sourceHandle, edge));\n            return null;\n          }\n          const {\n            sourceX,\n            sourceY,\n            targetX,\n            targetY\n          } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n          return jsx(EdgeComponent, {\n            id: edge.id,\n            className: cc([edge.className, noPanClassName]),\n            type: edgeType,\n            data: edge.data,\n            selected: !!edge.selected,\n            animated: !!edge.animated,\n            hidden: !!edge.hidden,\n            label: edge.label,\n            labelStyle: edge.labelStyle,\n            labelShowBg: edge.labelShowBg,\n            labelBgStyle: edge.labelBgStyle,\n            labelBgPadding: edge.labelBgPadding,\n            labelBgBorderRadius: edge.labelBgBorderRadius,\n            style: edge.style,\n            source: edge.source,\n            target: edge.target,\n            sourceHandleId: edge.sourceHandle,\n            targetHandleId: edge.targetHandle,\n            markerEnd: edge.markerEnd,\n            markerStart: edge.markerStart,\n            sourceX: sourceX,\n            sourceY: sourceY,\n            targetX: targetX,\n            targetY: targetY,\n            sourcePosition: sourcePosition,\n            targetPosition: targetPosition,\n            elementsSelectable: elementsSelectable,\n            onEdgeUpdate: onEdgeUpdate,\n            onContextMenu: onEdgeContextMenu,\n            onMouseEnter: onEdgeMouseEnter,\n            onMouseMove: onEdgeMouseMove,\n            onMouseLeave: onEdgeMouseLeave,\n            onClick: onEdgeClick,\n            edgeUpdaterRadius: edgeUpdaterRadius,\n            onEdgeDoubleClick: onEdgeDoubleClick,\n            onEdgeUpdateStart: onEdgeUpdateStart,\n            onEdgeUpdateEnd: onEdgeUpdateEnd,\n            rfId: rfId,\n            ariaLabel: edge.ariaLabel,\n            isFocusable: isFocusable,\n            isUpdatable: isUpdatable,\n            pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined,\n            interactionWidth: edge.interactionWidth\n          }, edge.id);\n        })\n      })]\n    }, level)), children]\n  });\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\nconst selector$3 = s => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({\n  children\n}) {\n  const transform = useStore(selector$3);\n  return jsx(\"div\", {\n    className: \"react-flow__viewport react-flow__container\",\n    style: {\n      transform\n    },\n    children: children\n  });\n}\nfunction useOnInitHandler(onInit) {\n  const rfInstance = useReactFlow();\n  const isInitialized = useRef(false);\n  useEffect(() => {\n    if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n      setTimeout(() => onInit(rfInstance), 1);\n      isInitialized.current = true;\n    }\n  }, [onInit, rfInstance.viewportInitialized]);\n}\nconst oppositePosition = {\n  [Position.Left]: Position.Right,\n  [Position.Right]: Position.Left,\n  [Position.Top]: Position.Bottom,\n  [Position.Bottom]: Position.Top\n};\nconst ConnectionLine = ({\n  nodeId,\n  handleType,\n  style,\n  type = ConnectionLineType.Bezier,\n  CustomComponent,\n  connectionStatus\n}) => {\n  const {\n    fromNode,\n    handleId,\n    toX,\n    toY,\n    connectionMode\n  } = useStore(useCallback(s => ({\n    fromNode: s.nodeInternals.get(nodeId),\n    handleId: s.connectionHandleId,\n    toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n    toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n    connectionMode: s.connectionMode\n  }), [nodeId]), shallow);\n  const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n  let handleBounds = fromHandleBounds?.[handleType];\n  if (connectionMode === ConnectionMode.Loose) {\n    handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n  }\n  if (!fromNode || !handleBounds) {\n    return null;\n  }\n  const fromHandle = handleId ? handleBounds.find(d => d.id === handleId) : handleBounds[0];\n  const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n  const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n  const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n  const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n  const fromPosition = fromHandle?.position;\n  const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n  if (!fromPosition || !toPosition) {\n    return null;\n  }\n  if (CustomComponent) {\n    return jsx(CustomComponent, {\n      connectionLineType: type,\n      connectionLineStyle: style,\n      fromNode: fromNode,\n      fromHandle: fromHandle,\n      fromX: fromX,\n      fromY: fromY,\n      toX: toX,\n      toY: toY,\n      fromPosition: fromPosition,\n      toPosition: toPosition,\n      connectionStatus: connectionStatus\n    });\n  }\n  let dAttr = '';\n  const pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: toPosition\n  };\n  if (type === ConnectionLineType.Bezier) {\n    // we assume the destination position is opposite to the source position\n    [dAttr] = getBezierPath(pathParams);\n  } else if (type === ConnectionLineType.Step) {\n    [dAttr] = getSmoothStepPath({\n      ...pathParams,\n      borderRadius: 0\n    });\n  } else if (type === ConnectionLineType.SmoothStep) {\n    [dAttr] = getSmoothStepPath(pathParams);\n  } else if (type === ConnectionLineType.SimpleBezier) {\n    [dAttr] = getSimpleBezierPath(pathParams);\n  } else {\n    dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n  }\n  return jsx(\"path\", {\n    d: dAttr,\n    fill: \"none\",\n    className: \"react-flow__connection-path\",\n    style: style\n  });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = s => ({\n  nodeId: s.connectionNodeId,\n  handleType: s.connectionHandleType,\n  nodesConnectable: s.nodesConnectable,\n  connectionStatus: s.connectionStatus,\n  width: s.width,\n  height: s.height\n});\nfunction ConnectionLineWrapper({\n  containerStyle,\n  style,\n  type,\n  component\n}) {\n  const {\n    nodeId,\n    handleType,\n    nodesConnectable,\n    width,\n    height,\n    connectionStatus\n  } = useStore(selector$2, shallow);\n  const isValid = !!(nodeId && handleType && width && nodesConnectable);\n  if (!isValid) {\n    return null;\n  }\n  return jsx(\"svg\", {\n    style: containerStyle,\n    width: width,\n    height: height,\n    className: \"react-flow__edges react-flow__connectionline react-flow__container\",\n    children: jsx(\"g\", {\n      className: cc(['react-flow__connection', connectionStatus]),\n      children: jsx(ConnectionLine, {\n        nodeId: nodeId,\n        handleType: handleType,\n        style: style,\n        type: type,\n        CustomComponent: component,\n        connectionStatus: connectionStatus\n      })\n    })\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n  const typesKeysRef = useRef(null);\n  const store = useStoreApi();\n  const typesParsed = useMemo(() => {\n    if (process.env.NODE_ENV === 'development') {\n      const typeKeys = Object.keys(nodeOrEdgeTypes);\n      if (shallow(typesKeysRef.current, typeKeys)) {\n        store.getState().onError?.('002', errorMessages['error002']());\n      }\n      typesKeysRef.current = typeKeys;\n    }\n    return createTypes(nodeOrEdgeTypes);\n  }, [nodeOrEdgeTypes]);\n  return typesParsed;\n}\nconst GraphView = ({\n  nodeTypes,\n  edgeTypes,\n  onMove,\n  onMoveStart,\n  onMoveEnd,\n  onInit,\n  onNodeClick,\n  onEdgeClick,\n  onNodeDoubleClick,\n  onEdgeDoubleClick,\n  onNodeMouseEnter,\n  onNodeMouseMove,\n  onNodeMouseLeave,\n  onNodeContextMenu,\n  onSelectionContextMenu,\n  onSelectionStart,\n  onSelectionEnd,\n  connectionLineType,\n  connectionLineStyle,\n  connectionLineComponent,\n  connectionLineContainerStyle,\n  selectionKeyCode,\n  selectionOnDrag,\n  selectionMode,\n  multiSelectionKeyCode,\n  panActivationKeyCode,\n  zoomActivationKeyCode,\n  deleteKeyCode,\n  onlyRenderVisibleElements,\n  elementsSelectable,\n  selectNodesOnDrag,\n  defaultViewport,\n  translateExtent,\n  minZoom,\n  maxZoom,\n  preventScrolling,\n  defaultMarkerColor,\n  zoomOnScroll,\n  zoomOnPinch,\n  panOnScroll,\n  panOnScrollSpeed,\n  panOnScrollMode,\n  zoomOnDoubleClick,\n  panOnDrag,\n  onPaneClick,\n  onPaneMouseEnter,\n  onPaneMouseMove,\n  onPaneMouseLeave,\n  onPaneScroll,\n  onPaneContextMenu,\n  onEdgeUpdate,\n  onEdgeContextMenu,\n  onEdgeMouseEnter,\n  onEdgeMouseMove,\n  onEdgeMouseLeave,\n  edgeUpdaterRadius,\n  onEdgeUpdateStart,\n  onEdgeUpdateEnd,\n  noDragClassName,\n  noWheelClassName,\n  noPanClassName,\n  elevateEdgesOnSelect,\n  disableKeyboardA11y,\n  nodeOrigin,\n  nodeExtent,\n  rfId\n}) => {\n  const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n  const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n  useOnInitHandler(onInit);\n  return jsx(FlowRenderer$1, {\n    onPaneClick: onPaneClick,\n    onPaneMouseEnter: onPaneMouseEnter,\n    onPaneMouseMove: onPaneMouseMove,\n    onPaneMouseLeave: onPaneMouseLeave,\n    onPaneContextMenu: onPaneContextMenu,\n    onPaneScroll: onPaneScroll,\n    deleteKeyCode: deleteKeyCode,\n    selectionKeyCode: selectionKeyCode,\n    selectionOnDrag: selectionOnDrag,\n    selectionMode: selectionMode,\n    onSelectionStart: onSelectionStart,\n    onSelectionEnd: onSelectionEnd,\n    multiSelectionKeyCode: multiSelectionKeyCode,\n    panActivationKeyCode: panActivationKeyCode,\n    zoomActivationKeyCode: zoomActivationKeyCode,\n    elementsSelectable: elementsSelectable,\n    onMove: onMove,\n    onMoveStart: onMoveStart,\n    onMoveEnd: onMoveEnd,\n    zoomOnScroll: zoomOnScroll,\n    zoomOnPinch: zoomOnPinch,\n    zoomOnDoubleClick: zoomOnDoubleClick,\n    panOnScroll: panOnScroll,\n    panOnScrollSpeed: panOnScrollSpeed,\n    panOnScrollMode: panOnScrollMode,\n    panOnDrag: panOnDrag,\n    defaultViewport: defaultViewport,\n    translateExtent: translateExtent,\n    minZoom: minZoom,\n    maxZoom: maxZoom,\n    onSelectionContextMenu: onSelectionContextMenu,\n    preventScrolling: preventScrolling,\n    noDragClassName: noDragClassName,\n    noWheelClassName: noWheelClassName,\n    noPanClassName: noPanClassName,\n    disableKeyboardA11y: disableKeyboardA11y,\n    children: jsxs(Viewport, {\n      children: [jsx(EdgeRenderer$1, {\n        edgeTypes: edgeTypesWrapped,\n        onEdgeClick: onEdgeClick,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeUpdate: onEdgeUpdate,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: !!elevateEdgesOnSelect,\n        disableKeyboardA11y: disableKeyboardA11y,\n        rfId: rfId,\n        children: jsx(ConnectionLineWrapper, {\n          style: connectionLineStyle,\n          type: connectionLineType,\n          component: connectionLineComponent,\n          containerStyle: connectionLineContainerStyle\n        })\n      }), jsx(\"div\", {\n        className: \"react-flow__edgelabel-renderer\"\n      }), jsx(NodeRenderer$1, {\n        nodeTypes: nodeTypesWrapped,\n        onNodeClick: onNodeClick,\n        onNodeDoubleClick: onNodeDoubleClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        selectNodesOnDrag: selectNodesOnDrag,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        noPanClassName: noPanClassName,\n        noDragClassName: noDragClassName,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent,\n        rfId: rfId\n      })]\n    })\n  });\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\nconst infiniteExtent = [[Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY], [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY]];\nconst initialState = {\n  rfId: '1',\n  width: 0,\n  height: 0,\n  transform: [0, 0, 1],\n  nodeInternals: new Map(),\n  edges: [],\n  onNodesChange: null,\n  onEdgesChange: null,\n  hasDefaultNodes: false,\n  hasDefaultEdges: false,\n  d3Zoom: null,\n  d3Selection: null,\n  d3ZoomHandler: undefined,\n  minZoom: 0.5,\n  maxZoom: 2,\n  translateExtent: infiniteExtent,\n  nodeExtent: infiniteExtent,\n  nodesSelectionActive: false,\n  userSelectionActive: false,\n  userSelectionRect: null,\n  connectionNodeId: null,\n  connectionHandleId: null,\n  connectionHandleType: 'source',\n  connectionPosition: {\n    x: 0,\n    y: 0\n  },\n  connectionStatus: null,\n  connectionMode: ConnectionMode.Strict,\n  domNode: null,\n  paneDragging: false,\n  noPanClassName: 'nopan',\n  nodeOrigin: [0, 0],\n  snapGrid: [15, 15],\n  snapToGrid: false,\n  nodesDraggable: true,\n  nodesConnectable: true,\n  nodesFocusable: true,\n  edgesFocusable: true,\n  edgesUpdatable: true,\n  elementsSelectable: true,\n  elevateNodesOnSelect: true,\n  fitViewOnInit: false,\n  fitViewOnInitDone: false,\n  fitViewOnInitOptions: undefined,\n  multiSelectionActive: false,\n  connectionStartHandle: null,\n  connectionEndHandle: null,\n  connectionClickStartHandle: null,\n  connectOnClick: true,\n  ariaLiveMessage: '',\n  autoPanOnConnect: true,\n  autoPanOnNodeDrag: true,\n  connectionRadius: 20,\n  onError: devWarn,\n  isValidConnection: undefined\n};\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n  ...initialState,\n  setNodes: nodes => {\n    const {\n      nodeInternals,\n      nodeOrigin,\n      elevateNodesOnSelect\n    } = get();\n    set({\n      nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect)\n    });\n  },\n  getNodes: () => {\n    return Array.from(get().nodeInternals.values());\n  },\n  setEdges: edges => {\n    const {\n      defaultEdgeOptions = {}\n    } = get();\n    set({\n      edges: edges.map(e => ({\n        ...defaultEdgeOptions,\n        ...e\n      }))\n    });\n  },\n  setDefaultNodesAndEdges: (nodes, edges) => {\n    const hasDefaultNodes = typeof nodes !== 'undefined';\n    const hasDefaultEdges = typeof edges !== 'undefined';\n    const nodeInternals = hasDefaultNodes ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect) : new Map();\n    const nextEdges = hasDefaultEdges ? edges : [];\n    set({\n      nodeInternals,\n      edges: nextEdges,\n      hasDefaultNodes,\n      hasDefaultEdges\n    });\n  },\n  updateNodeDimensions: updates => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      fitViewOnInit,\n      fitViewOnInitDone,\n      fitViewOnInitOptions,\n      domNode,\n      nodeOrigin\n    } = get();\n    const viewportNode = domNode?.querySelector('.react-flow__viewport');\n    if (!viewportNode) {\n      return;\n    }\n    const style = window.getComputedStyle(viewportNode);\n    const {\n      m22: zoom\n    } = new window.DOMMatrixReadOnly(style.transform);\n    const changes = updates.reduce((res, update) => {\n      const node = nodeInternals.get(update.id);\n      if (node) {\n        const dimensions = getDimensions(update.nodeElement);\n        const doUpdate = !!(dimensions.width && dimensions.height && (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n        if (doUpdate) {\n          nodeInternals.set(node.id, {\n            ...node,\n            [internalsSymbol]: {\n              ...node[internalsSymbol],\n              handleBounds: {\n                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin)\n              }\n            },\n            ...dimensions\n          });\n          res.push({\n            id: node.id,\n            type: 'dimensions',\n            dimensions\n          });\n        }\n      }\n      return res;\n    }, []);\n    updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n    const nextFitViewOnInitDone = fitViewOnInitDone || fitViewOnInit && !fitViewOnInitDone && fitView(get, {\n      initial: true,\n      ...fitViewOnInitOptions\n    });\n    set({\n      nodeInternals: new Map(nodeInternals),\n      fitViewOnInitDone: nextFitViewOnInitDone\n    });\n    if (changes?.length > 0) {\n      onNodesChange?.(changes);\n    }\n  },\n  updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n    const {\n      triggerNodeChanges\n    } = get();\n    const changes = nodeDragItems.map(node => {\n      const change = {\n        id: node.id,\n        type: 'position',\n        dragging\n      };\n      if (positionChanged) {\n        change.positionAbsolute = node.positionAbsolute;\n        change.position = node.position;\n      }\n      return change;\n    });\n    triggerNodeChanges(changes);\n  },\n  triggerNodeChanges: changes => {\n    const {\n      onNodesChange,\n      nodeInternals,\n      hasDefaultNodes,\n      nodeOrigin,\n      getNodes,\n      elevateNodesOnSelect\n    } = get();\n    if (changes?.length) {\n      if (hasDefaultNodes) {\n        const nodes = applyNodeChanges(changes, getNodes());\n        const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n        set({\n          nodeInternals: nextNodeInternals\n        });\n      }\n      onNodesChange?.(changes);\n    }\n  },\n  addSelectedNodes: selectedNodeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedNodes;\n    let changedEdges = null;\n    if (multiSelectionActive) {\n      changedNodes = selectedNodeIds.map(nodeId => createSelectionChange(nodeId, true));\n    } else {\n      changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n      changedEdges = getSelectionChanges(edges, []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  addSelectedEdges: selectedEdgeIds => {\n    const {\n      multiSelectionActive,\n      edges,\n      getNodes\n    } = get();\n    let changedEdges;\n    let changedNodes = null;\n    if (multiSelectionActive) {\n      changedEdges = selectedEdgeIds.map(edgeId => createSelectionChange(edgeId, true));\n    } else {\n      changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n      changedNodes = getSelectionChanges(getNodes(), []);\n    }\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  unselectNodesAndEdges: ({\n    nodes,\n    edges\n  } = {}) => {\n    const {\n      edges: storeEdges,\n      getNodes\n    } = get();\n    const nodesToUnselect = nodes ? nodes : getNodes();\n    const edgesToUnselect = edges ? edges : storeEdges;\n    const changedNodes = nodesToUnselect.map(n => {\n      n.selected = false;\n      return createSelectionChange(n.id, false);\n    });\n    const changedEdges = edgesToUnselect.map(edge => createSelectionChange(edge.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes,\n      changedEdges,\n      get,\n      set\n    });\n  },\n  setMinZoom: minZoom => {\n    const {\n      d3Zoom,\n      maxZoom\n    } = get();\n    d3Zoom?.scaleExtent([minZoom, maxZoom]);\n    set({\n      minZoom\n    });\n  },\n  setMaxZoom: maxZoom => {\n    const {\n      d3Zoom,\n      minZoom\n    } = get();\n    d3Zoom?.scaleExtent([minZoom, maxZoom]);\n    set({\n      maxZoom\n    });\n  },\n  setTranslateExtent: translateExtent => {\n    get().d3Zoom?.translateExtent(translateExtent);\n    set({\n      translateExtent\n    });\n  },\n  resetSelectedElements: () => {\n    const {\n      edges,\n      getNodes\n    } = get();\n    const nodes = getNodes();\n    const nodesToUnselect = nodes.filter(e => e.selected).map(n => createSelectionChange(n.id, false));\n    const edgesToUnselect = edges.filter(e => e.selected).map(e => createSelectionChange(e.id, false));\n    updateNodesAndEdgesSelections({\n      changedNodes: nodesToUnselect,\n      changedEdges: edgesToUnselect,\n      get,\n      set\n    });\n  },\n  setNodeExtent: nodeExtent => {\n    const {\n      nodeInternals\n    } = get();\n    nodeInternals.forEach(node => {\n      node.positionAbsolute = clampPosition(node.position, nodeExtent);\n    });\n    set({\n      nodeExtent,\n      nodeInternals: new Map(nodeInternals)\n    });\n  },\n  panBy: delta => {\n    const {\n      transform,\n      width,\n      height,\n      d3Zoom,\n      d3Selection,\n      translateExtent\n    } = get();\n    if (!d3Zoom || !d3Selection || !delta.x && !delta.y) {\n      return false;\n    }\n    const nextTransform = zoomIdentity.translate(transform[0] + delta.x, transform[1] + delta.y).scale(transform[2]);\n    const extent = [[0, 0], [width, height]];\n    const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n    d3Zoom.transform(d3Selection, constrainedTransform);\n    const transformChanged = transform[0] !== constrainedTransform.x || transform[1] !== constrainedTransform.y || transform[2] !== constrainedTransform.k;\n    return transformChanged;\n  },\n  cancelConnection: () => set({\n    connectionNodeId: initialState.connectionNodeId,\n    connectionHandleId: initialState.connectionHandleId,\n    connectionHandleType: initialState.connectionHandleType,\n    connectionStatus: initialState.connectionStatus,\n    connectionStartHandle: initialState.connectionStartHandle,\n    connectionEndHandle: initialState.connectionEndHandle\n  }),\n  reset: () => set({\n    ...initialState\n  })\n}), Object.is);\nconst ReactFlowProvider = ({\n  children\n}) => {\n  const storeRef = useRef(null);\n  if (!storeRef.current) {\n    storeRef.current = createRFStore();\n  }\n  return jsx(Provider$1, {\n    value: storeRef.current,\n    children: children\n  });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\nconst Wrapper = ({\n  children\n}) => {\n  const isWrapped = useContext(StoreContext);\n  if (isWrapped) {\n    // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n    return jsx(Fragment, {\n      children: children\n    });\n  }\n  return jsx(ReactFlowProvider, {\n    children: children\n  });\n};\nWrapper.displayName = 'ReactFlowWrapper';\nconst defaultNodeTypes = {\n  input: InputNode$1,\n  default: DefaultNode$1,\n  output: OutputNode$1,\n  group: GroupNode\n};\nconst defaultEdgeTypes = {\n  default: BezierEdge,\n  straight: StraightEdge,\n  step: StepEdge,\n  smoothstep: SmoothStepEdge,\n  simplebezier: SimpleBezierEdge\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = {\n  x: 0,\n  y: 0,\n  zoom: 1\n};\nconst wrapperStyle = {\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden',\n  position: 'relative',\n  zIndex: 0\n};\nconst ReactFlow = forwardRef(({\n  nodes,\n  edges,\n  defaultNodes,\n  defaultEdges,\n  className,\n  nodeTypes = defaultNodeTypes,\n  edgeTypes = defaultEdgeTypes,\n  onNodeClick,\n  onEdgeClick,\n  onInit,\n  onMove,\n  onMoveStart,\n  onMoveEnd,\n  onConnect,\n  onConnectStart,\n  onConnectEnd,\n  onClickConnectStart,\n  onClickConnectEnd,\n  onNodeMouseEnter,\n  onNodeMouseMove,\n  onNodeMouseLeave,\n  onNodeContextMenu,\n  onNodeDoubleClick,\n  onNodeDragStart,\n  onNodeDrag,\n  onNodeDragStop,\n  onNodesDelete,\n  onEdgesDelete,\n  onSelectionChange,\n  onSelectionDragStart,\n  onSelectionDrag,\n  onSelectionDragStop,\n  onSelectionContextMenu,\n  onSelectionStart,\n  onSelectionEnd,\n  connectionMode = ConnectionMode.Strict,\n  connectionLineType = ConnectionLineType.Bezier,\n  connectionLineStyle,\n  connectionLineComponent,\n  connectionLineContainerStyle,\n  deleteKeyCode = 'Backspace',\n  selectionKeyCode = 'Shift',\n  selectionOnDrag = false,\n  selectionMode = SelectionMode.Full,\n  panActivationKeyCode = 'Space',\n  multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control',\n  zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control',\n  snapToGrid = false,\n  snapGrid = initSnapGrid,\n  onlyRenderVisibleElements = false,\n  selectNodesOnDrag = true,\n  nodesDraggable,\n  nodesConnectable,\n  nodesFocusable,\n  nodeOrigin = initNodeOrigin,\n  edgesFocusable,\n  edgesUpdatable,\n  elementsSelectable,\n  defaultViewport = initDefaultViewport,\n  minZoom = 0.5,\n  maxZoom = 2,\n  translateExtent = infiniteExtent,\n  preventScrolling = true,\n  nodeExtent,\n  defaultMarkerColor = '#b1b1b7',\n  zoomOnScroll = true,\n  zoomOnPinch = true,\n  panOnScroll = false,\n  panOnScrollSpeed = 0.5,\n  panOnScrollMode = PanOnScrollMode.Free,\n  zoomOnDoubleClick = true,\n  panOnDrag = true,\n  onPaneClick,\n  onPaneMouseEnter,\n  onPaneMouseMove,\n  onPaneMouseLeave,\n  onPaneScroll,\n  onPaneContextMenu,\n  children,\n  onEdgeUpdate,\n  onEdgeContextMenu,\n  onEdgeDoubleClick,\n  onEdgeMouseEnter,\n  onEdgeMouseMove,\n  onEdgeMouseLeave,\n  onEdgeUpdateStart,\n  onEdgeUpdateEnd,\n  edgeUpdaterRadius = 10,\n  onNodesChange,\n  onEdgesChange,\n  noDragClassName = 'nodrag',\n  noWheelClassName = 'nowheel',\n  noPanClassName = 'nopan',\n  fitView = false,\n  fitViewOptions,\n  connectOnClick = true,\n  attributionPosition,\n  proOptions,\n  defaultEdgeOptions,\n  elevateNodesOnSelect = true,\n  elevateEdgesOnSelect = false,\n  disableKeyboardA11y = false,\n  autoPanOnConnect = true,\n  autoPanOnNodeDrag = true,\n  connectionRadius = 20,\n  isValidConnection,\n  onError,\n  style,\n  id,\n  ...rest\n}, ref) => {\n  const rfId = id || '1';\n  return jsx(\"div\", {\n    ...rest,\n    style: {\n      ...style,\n      ...wrapperStyle\n    },\n    ref: ref,\n    className: cc(['react-flow', className]),\n    \"data-testid\": \"rf__wrapper\",\n    id: id,\n    children: jsxs(Wrapper, {\n      children: [jsx(GraphView$1, {\n        onInit: onInit,\n        onMove: onMove,\n        onMoveStart: onMoveStart,\n        onMoveEnd: onMoveEnd,\n        onNodeClick: onNodeClick,\n        onEdgeClick: onEdgeClick,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseMove: onNodeMouseMove,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeContextMenu: onNodeContextMenu,\n        onNodeDoubleClick: onNodeDoubleClick,\n        nodeTypes: nodeTypes,\n        edgeTypes: edgeTypes,\n        connectionLineType: connectionLineType,\n        connectionLineStyle: connectionLineStyle,\n        connectionLineComponent: connectionLineComponent,\n        connectionLineContainerStyle: connectionLineContainerStyle,\n        selectionKeyCode: selectionKeyCode,\n        selectionOnDrag: selectionOnDrag,\n        selectionMode: selectionMode,\n        deleteKeyCode: deleteKeyCode,\n        multiSelectionKeyCode: multiSelectionKeyCode,\n        panActivationKeyCode: panActivationKeyCode,\n        zoomActivationKeyCode: zoomActivationKeyCode,\n        onlyRenderVisibleElements: onlyRenderVisibleElements,\n        selectNodesOnDrag: selectNodesOnDrag,\n        defaultViewport: defaultViewport,\n        translateExtent: translateExtent,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        preventScrolling: preventScrolling,\n        zoomOnScroll: zoomOnScroll,\n        zoomOnPinch: zoomOnPinch,\n        zoomOnDoubleClick: zoomOnDoubleClick,\n        panOnScroll: panOnScroll,\n        panOnScrollSpeed: panOnScrollSpeed,\n        panOnScrollMode: panOnScrollMode,\n        panOnDrag: panOnDrag,\n        onPaneClick: onPaneClick,\n        onPaneMouseEnter: onPaneMouseEnter,\n        onPaneMouseMove: onPaneMouseMove,\n        onPaneMouseLeave: onPaneMouseLeave,\n        onPaneScroll: onPaneScroll,\n        onPaneContextMenu: onPaneContextMenu,\n        onSelectionContextMenu: onSelectionContextMenu,\n        onSelectionStart: onSelectionStart,\n        onSelectionEnd: onSelectionEnd,\n        onEdgeUpdate: onEdgeUpdate,\n        onEdgeContextMenu: onEdgeContextMenu,\n        onEdgeDoubleClick: onEdgeDoubleClick,\n        onEdgeMouseEnter: onEdgeMouseEnter,\n        onEdgeMouseMove: onEdgeMouseMove,\n        onEdgeMouseLeave: onEdgeMouseLeave,\n        onEdgeUpdateStart: onEdgeUpdateStart,\n        onEdgeUpdateEnd: onEdgeUpdateEnd,\n        edgeUpdaterRadius: edgeUpdaterRadius,\n        defaultMarkerColor: defaultMarkerColor,\n        noDragClassName: noDragClassName,\n        noWheelClassName: noWheelClassName,\n        noPanClassName: noPanClassName,\n        elevateEdgesOnSelect: elevateEdgesOnSelect,\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y,\n        nodeOrigin: nodeOrigin,\n        nodeExtent: nodeExtent\n      }), jsx(StoreUpdater, {\n        nodes: nodes,\n        edges: edges,\n        defaultNodes: defaultNodes,\n        defaultEdges: defaultEdges,\n        onConnect: onConnect,\n        onConnectStart: onConnectStart,\n        onConnectEnd: onConnectEnd,\n        onClickConnectStart: onClickConnectStart,\n        onClickConnectEnd: onClickConnectEnd,\n        nodesDraggable: nodesDraggable,\n        nodesConnectable: nodesConnectable,\n        nodesFocusable: nodesFocusable,\n        edgesFocusable: edgesFocusable,\n        edgesUpdatable: edgesUpdatable,\n        elementsSelectable: elementsSelectable,\n        elevateNodesOnSelect: elevateNodesOnSelect,\n        minZoom: minZoom,\n        maxZoom: maxZoom,\n        nodeExtent: nodeExtent,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        snapToGrid: snapToGrid,\n        snapGrid: snapGrid,\n        connectionMode: connectionMode,\n        translateExtent: translateExtent,\n        connectOnClick: connectOnClick,\n        defaultEdgeOptions: defaultEdgeOptions,\n        fitView: fitView,\n        fitViewOptions: fitViewOptions,\n        onNodesDelete: onNodesDelete,\n        onEdgesDelete: onEdgesDelete,\n        onNodeDragStart: onNodeDragStart,\n        onNodeDrag: onNodeDrag,\n        onNodeDragStop: onNodeDragStop,\n        onSelectionDrag: onSelectionDrag,\n        onSelectionDragStart: onSelectionDragStart,\n        onSelectionDragStop: onSelectionDragStop,\n        noPanClassName: noPanClassName,\n        nodeOrigin: nodeOrigin,\n        rfId: rfId,\n        autoPanOnConnect: autoPanOnConnect,\n        autoPanOnNodeDrag: autoPanOnNodeDrag,\n        onError: onError,\n        connectionRadius: connectionRadius,\n        isValidConnection: isValidConnection\n      }), jsx(Wrapper$1, {\n        onSelectionChange: onSelectionChange\n      }), children, jsx(Attribution, {\n        proOptions: proOptions,\n        position: attributionPosition\n      }), jsx(A11yDescriptions, {\n        rfId: rfId,\n        disableKeyboardA11y: disableKeyboardA11y\n      })]\n    })\n  });\n});\nReactFlow.displayName = 'ReactFlow';\nconst selector$1 = s => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({\n  children\n}) {\n  const edgeLabelRenderer = useStore(selector$1);\n  if (!edgeLabelRenderer) {\n    return null;\n  }\n  return createPortal(children, edgeLabelRenderer);\n}\nfunction useUpdateNodeInternals() {\n  const store = useStoreApi();\n  return useCallback(id => {\n    const {\n      domNode,\n      updateNodeDimensions\n    } = store.getState();\n    const updateIds = Array.isArray(id) ? id : [id];\n    const updates = updateIds.reduce((res, updateId) => {\n      const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n      if (nodeElement) {\n        res.push({\n          id: updateId,\n          nodeElement,\n          forceUpdate: true\n        });\n      }\n      return res;\n    }, []);\n    requestAnimationFrame(() => updateNodeDimensions(updates));\n  }, []);\n}\nconst nodesSelector = state => state.getNodes();\nfunction useNodes() {\n  const nodes = useStore(nodesSelector, shallow);\n  return nodes;\n}\nconst edgesSelector = state => state.edges;\nfunction useEdges() {\n  const edges = useStore(edgesSelector, shallow);\n  return edges;\n}\nconst viewportSelector = state => ({\n  x: state.transform[0],\n  y: state.transform[1],\n  zoom: state.transform[2]\n});\nfunction useViewport() {\n  const viewport = useStore(viewportSelector, shallow);\n  return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n  return initialItems => {\n    const [items, setItems] = useState(initialItems);\n    const onItemsChange = useCallback(changes => setItems(items => applyChanges(changes, items)), []);\n    return [items, setItems, onItemsChange];\n  };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\nfunction useOnViewportChange({\n  onStart,\n  onChange,\n  onEnd\n}) {\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onViewportChangeStart: onStart\n    });\n  }, [onStart]);\n  useEffect(() => {\n    store.setState({\n      onViewportChange: onChange\n    });\n  }, [onChange]);\n  useEffect(() => {\n    store.setState({\n      onViewportChangeEnd: onEnd\n    });\n  }, [onEnd]);\n}\nfunction useOnSelectionChange({\n  onChange\n}) {\n  const store = useStoreApi();\n  useEffect(() => {\n    store.setState({\n      onSelectionChange: onChange\n    });\n  }, [onChange]);\n}\nconst selector = options => s => {\n  if (s.nodeInternals.size === 0) {\n    return false;\n  }\n  return s.getNodes().filter(n => options.includeHiddenNodes ? true : !n.hidden).every(n => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n  includeHiddenNodes: false\n};\nfunction useNodesInitialized(options = defaultOptions) {\n  const initialized = useStore(selector(options));\n  return initialized;\n}\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };","map":{"version":3,"names":["jsx","jsxs","Fragment","createContext","useContext","useMemo","memo","useRef","useState","useEffect","forwardRef","useCallback","cc","useStoreWithEqualityFn","createWithEqualityFn","shallow","zoomIdentity","zoom","select","pointer","drag","createPortal","StoreContext","Provider$1","Provider","errorMessages","error001","error002","error003","nodeType","error004","error005","error006","error007","id","error009","type","error008","sourceHandle","edge","targetHandle","error010","error011","edgeType","error012","zustandErrorMessage","useStore","selector","equalityFn","store","Error","useStoreApi","getState","setState","subscribe","destroy","selector$g","s","userSelectionActive","Panel","position","children","className","style","rest","pointerEvents","positionClasses","split","Attribution","proOptions","hideAttribution","href","target","rel","EdgeText","x","y","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","edgeRef","edgeTextBbox","setEdgeTextBbox","width","height","edgeTextClasses","current","textBbox","getBBox","transform","visibility","rx","ry","dy","ref","EdgeText$1","getDimensions","node","offsetWidth","offsetHeight","clamp","val","min","max","Math","clampPosition","extent","calcAutoPanVelocity","value","abs","calcAutoPan","pos","bounds","xMovement","yMovement","getHostForElement","element","getRootNode","window","document","getBoundsOfBoxes","box1","box2","x2","y2","rectToBox","boxToRect","nodeToRect","positionAbsolute","getBoundsOfRects","rect1","rect2","getOverlappingArea","rectA","rectB","xOverlap","yOverlap","ceil","isRectObject","obj","isNumeric","n","isNaN","isFinite","internalsSymbol","Symbol","for","elementSelectionKeys","devWarn","message","process","env","NODE_ENV","console","warn","isReactKeyboardEvent","event","isInputDOMNode","kbEvent","nativeEvent","composedPath","isInput","includes","nodeName","hasAttribute","closest","isMouseEvent","getEventPosition","isMouseTriggered","evtX","clientX","touches","evtY","clientY","left","top","isMacOs","navigator","userAgent","indexOf","BaseEdge","path","labelX","labelY","markerEnd","markerStart","interactionWidth","d","fill","strokeOpacity","strokeWidth","displayName","getMarkerEnd","markerType","markerEndId","getMouseHandler$1","handler","undefined","edges","find","e","getEdgeCenter","sourceX","sourceY","targetX","targetY","xOffset","centerX","yOffset","centerY","getBezierEdgeCenter","sourceControlX","sourceControlY","targetControlX","targetControlY","offsetX","offsetY","ConnectionMode","PanOnScrollMode","SelectionMode","ConnectionLineType","MarkerType","Position","getControl","x1","y1","Left","Right","getSimpleBezierPath","sourcePosition","Bottom","targetPosition","Top","SimpleBezierEdge","handleDirections","getDirection","source","distance","a","b","sqrt","pow","getPoints","center","offset","sourceDir","targetDir","sourceGapped","targetGapped","dir","dirAccessor","currDir","points","sourceGapOffset","targetGapOffset","defaultCenterX","defaultCenterY","defaultOffsetX","defaultOffsetY","verticalSplit","horizontalSplit","sourceTarget","targetSource","diff","gapOffset","dirAccessorOpposite","isSameDir","sourceGtTargetOppo","sourceLtTargetOppo","flipSourceTarget","sourceGapPoint","targetGapPoint","maxXDistance","maxYDistance","pathPoints","getBend","c","size","bendSize","xDir","yDir","getSmoothStepPath","borderRadius","reduce","res","p","i","segment","length","SmoothStepEdge","pathOptions","StepEdge","props","getStraightPath","StraightEdge","calculateControlOffset","curvature","getControlWithCurvature","getBezierPath","BezierEdge","NodeIdContext","Consumer","useNodeId","nodeId","isEdge","isNode","getOutgoers","nodes","outgoerIds","filter","map","getIncomers","incomersIds","getEdgeId","getMarkerId","marker","rfId","idPrefix","Object","keys","sort","key","join","connectionExists","some","el","addEdge","edgeParams","concat","updateEdge","oldEdge","newConnection","options","shouldReplaceId","oldEdgeId","foundEdge","pointToRendererPoint","tx","ty","tScale","snapToGrid","snapX","snapY","round","rendererPointToPoint","getNodePositionWithOrigin","nodeOrigin","getRectOfNodes","box","currBox","Infinity","getNodesInside","nodeInternals","rect","partially","excludeNonSelectableNodes","paneRect","visibleNodes","forEach","selectable","hidden","nodeRect","overlappingArea","notInitialized","partiallyVisible","area","isVisible","dragging","push","getConnectedEdges","nodeIds","getTransformForBounds","minZoom","maxZoom","padding","xZoom","yZoom","clampedZoom","boundsCenterX","boundsCenterY","getD3Transition","selection","duration","transition","getHandles","handleBounds","currentHandle","h","getClosestHandle","doc","connectionRadius","handles","validator","domNodes","elementsFromPoint","handleBelow","classList","contains","handleNodeId","getAttribute","handleType","getHandleType","handleId","validHandleResult","handle","closestHandles","minDistance","defaultResult","hasValidHandle","isValid","hasTargetHandle","nullConnection","handleDomNode","connection","endHandle","isValidHandle","connectionMode","fromNodeId","fromHandleId","fromType","isValidConnection","isTarget","handleToCheck","querySelector","result","connectable","connectableEnd","isConnectable","Strict","getHandleLookup","sourceHandles","targetHandles","edgeUpdaterType","resetRecentHandle","remove","getConnectionStatus","isInsideConnectionRadius","isHandleValid","connectionStatus","handlePointerDown","onConnect","onEdgeUpdateEnd","domNode","autoPanOnConnect","onConnectStart","panBy","getNodes","cancelConnection","autoPanId","closestHandle","clickedHandle","elementFromPoint","containerBounds","getBoundingClientRect","prevActiveHandle","connectionPosition","autoPanStarted","handleLookup","autoPan","requestAnimationFrame","connectionNodeId","connectionHandleId","connectionHandleType","connectionStartHandle","connectionEndHandle","onPointerMove","add","toggle","onPointerUp","onConnectEnd","cancelAnimationFrame","removeEventListener","addEventListener","alwaysValid","selector$f","connectOnClick","noPanClassName","connectingSelector","state","startHandle","connectionClickStartHandle","clickHandle","connecting","clickConnecting","Handle","isConnectableStart","isConnectableEnd","onMouseDown","onTouchStart","onError","onConnectExtended","params","defaultEdgeOptions","onConnectAction","hasDefaultEdges","setEdges","onPointerDown","button","onClick","onClickConnectStart","onClickConnectEnd","isValidConnectionStore","isValidConnectionHandler","connectablestart","connectableend","connectionindicator","Handle$1","DefaultNode","data","DefaultNode$1","InputNode","InputNode$1","OutputNode","OutputNode$1","GroupNode","selector$e","selectedNodes","selected","selectedEdges","selectId","areEqual","SelectionListener","onSelectionChange","changeSelector","Wrapper$1","storeHasSelectionChange","selector$d","setNodes","setDefaultNodesAndEdges","setMinZoom","setMaxZoom","setTranslateExtent","setNodeExtent","reset","useStoreUpdater","setStoreState","useDirectStoreUpdater","StoreUpdater","defaultNodes","defaultEdges","nodesDraggable","nodesConnectable","nodesFocusable","edgesFocusable","edgesUpdatable","elevateNodesOnSelect","nodeExtent","onNodesChange","onEdgesChange","elementsSelectable","snapGrid","translateExtent","fitView","fitViewOptions","onNodesDelete","onEdgesDelete","onNodeDrag","onNodeDragStart","onNodeDragStop","onSelectionDrag","onSelectionDragStart","onSelectionDragStop","autoPanOnNodeDrag","edgesWithDefaults","display","ariaLiveStyle","margin","border","overflow","clip","clipPath","ARIA_NODE_DESC_KEY","ARIA_EDGE_DESC_KEY","ARIA_LIVE_MESSAGE","selector$c","ariaLiveMessage","AriaLiveMessage","A11yDescriptions","disableKeyboardA11y","useKeyPress","keyCode","keyPressed","setKeyPressed","modifierPressed","pressedKeys","Set","keyCodes","keysToWatch","keyCodeArr","Array","isArray","kc","keysFlat","item","downHandler","ctrlKey","metaKey","shiftKey","keyOrCode","useKeyOrCode","code","isMatchingKey","preventDefault","upHandler","clear","delete","resetHandler","isUp","every","k","has","eventCode","calculateXYZPosition","parentNode","get","parentNodePosition","z","updateAbsoluteNodePositions","parentNodes","isParent","createNodeInternals","nextNodeInternals","Map","selectedNodeZ","zIndex","currInternals","internals","defineProperty","enumerable","set","d3Zoom","d3Selection","fitViewOnInitDone","fitViewOnInit","isInitialFitView","initial","d3initialized","includeHiddenNodes","optionNode","nodesInitialized","nextTransform","translate","scale","handleControlledNodeSelectionChange","nodeChanges","change","handleControlledEdgeSelectionChange","edgeChanges","updateNodesAndEdgesSelections","changedNodes","changedEdges","hasDefaultNodes","noop","initialViewportHelper","zoomIn","zoomOut","zoomTo","getZoom","setViewport","getViewport","setCenter","fitBounds","project","viewportInitialized","selector$b","useViewportHelper","viewportHelperFunctions","scaleBy","zoomLevel","scaleTo","nextZoom","useReactFlow","viewportHelper","getNode","getEdges","getEdge","payload","nextNodes","changes","nextEdges","addNodes","currentNodes","addEdges","toObject","viewport","deleteElements","nodesDeleted","edgesDeleted","edgeIds","nodesToRemove","parentHit","deletable","deletableEdges","initialHitEdges","connectedEdges","edgesToRemove","edgeIdsToRemove","getNodeRect","nodeOrRect","isRect","getIntersectingNodes","currNodeRect","isNodeIntersecting","useGlobalKeyHandler","deleteKeyCode","multiSelectionKeyCode","deleteKeyPressed","multiSelectionKeyPressed","nodesSelectionActive","multiSelectionActive","useResizeHandler","rendererNode","resizeObserver","updateDimensions","ResizeObserver","observe","unobserve","containerStyle","viewChanged","prevViewport","eventTransform","eventToFlowTransform","isWrappedWithClass","isRightClickPan","panOnDrag","usedButton","wheelDelta","factor","deltaY","deltaMode","selector$a","d3ZoomHandler","ZoomPane","onMove","onMoveStart","onMoveEnd","onPaneContextMenu","zoomOnScroll","zoomOnPinch","panOnScroll","panOnScrollSpeed","panOnScrollMode","Free","zoomOnDoubleClick","defaultViewport","zoomActivationKeyCode","preventScrolling","noWheelClassName","timerId","isZoomingOrPanning","zoomedWithRightMouseButton","zoomPane","prevTransform","zoomActivationKeyPressed","mouseButton","isPanScrolling","panScrollTimeout","bbox","d3ZoomInstance","scaleExtent","call","updatedTransform","constrainedTransform","constrain","on","stopImmediatePropagation","currentZoom","property","_isMacOs","point","pinchDelta","deltaNormalize","deltaX","Vertical","Horizontal","translateBy","internal","nextViewport","onViewportChangeStart","onViewportChange","onViewportChangeEnd","clearTimeout","setTimeout","passive","sourceEvent","flowTransform","paneDragging","zoomScroll","pinchZoom","buttonAllowed","selector$9","userSelectionRect","UserSelection","isActive","handleParentExpand","updateItem","parent","extendWidth","extendHeight","xDiff","yDiff","applyChanges","elements","initElements","currentChanges","currentChange","expandParent","dimensions","updateStyle","resizing","applyNodeChanges","applyEdgeChanges","createSelectionChange","getSelectionChanges","items","selectedIds","willBeSelected","wrapHandler","containerRef","selector$8","Pane","isSelecting","selectionMode","Full","onSelectionStart","onSelectionEnd","onPaneClick","onPaneScroll","onPaneMouseEnter","onPaneMouseMove","onPaneMouseLeave","container","prevSelectedNodesCount","prevSelectedEdgesCount","resetUserSelection","resetSelectedElements","onContextMenu","onWheel","startX","startY","onMouseMove","mousePos","nextUserSelectRect","Partial","selectedEdgeIds","selectedNodeIds","onMouseUp","onMouseLeave","hasActiveSelection","onMouseEnter","isParentSelected","hasSelector","nodeRef","matches","parentElement","getDragItems","from","values","draggable","delta","clampNodeExtent","calcNextPosition","nextPosition","clampedNodeExtent","currentExtent","parentX","parentY","parentPosition","getEventHandlerParams","dragItems","extentedDragItems","getHandleBounds","nodeElement","querySelectorAll","handlesArray","nodeBounds","nodeOffset","getMouseHandler","handleNodeClick","unselect","addSelectedNodes","unselectNodesAndEdges","blur","useGetPointerPosition","getPointerPosition","pointerPos","xSnapped","ySnapped","wrapSelectionDragFunc","selectionFunc","_","useDrag","disabled","noDragClassName","handleSelector","isSelectable","selectNodesOnDrag","setDragging","lastPos","mousePosition","dragEvent","updateNodes","updateNodePositions","hasChange","nodesBox","adjustedNodeExtent","updatedPos","onDrag","currentNode","dragHandler","onStart","onStop","isDraggable","useUpdateNodePositions","updatePositions","xVelo","yVelo","isShiftPressed","positionDiffX","positionDiffY","nodeUpdates","arrowKeyDiffs","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","wrapNode","NodeComponent","NodeWrapper","xPos","yPos","xPosOrigin","yPosOrigin","onDoubleClick","isFocusable","dragHandle","initialized","ariaLabel","prevSourcePosition","prevTargetPosition","prevType","hasPointerEvents","onMouseEnterHandler","onMouseMoveHandler","onMouseLeaveHandler","onContextMenuHandler","onDoubleClickHandler","onSelectNodeHandler","onKeyDown","prototype","hasOwnProperty","replace","toLowerCase","currNode","typeChanged","sourcePosChanged","targetPosChanged","updateNodeDimensions","forceUpdate","tabIndex","role","selector$7","transformString","NodesSelection","onSelectionContextMenu","focus","preventScroll","NodesSelection$1","selector$6","FlowRenderer","selectionKeyCode","selectionOnDrag","panActivationKeyCode","_panOnDrag","selectionKeyPressed","panActivationKeyPressed","FlowRenderer$1","useVisibleNodes","onlyRenderVisible","createNodeTypes","nodeTypes","standardTypes","input","default","output","group","wrappedTypes","specialTypes","getPositionWithOrigin","origin","selector$5","NodeRenderer","onlyRenderVisibleElements","resizeObserverRef","observer","entries","updates","entry","disconnect","focusable","clampedPosition","posX","posY","posOrigin","onNodeClick","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeContextMenu","onNodeDoubleClick","NodeRenderer$1","shiftX","shift","shiftY","EdgeUpdaterClassName","EdgeAnchor","radius","onMouseOut","cx","cy","r","stroke","alwaysValidConnection","wrapEdge","EdgeComponent","EdgeWrapper","onEdgeDoubleClick","animated","sourceHandleId","targetHandleId","edgeUpdaterRadius","onEdgeUpdate","onEdgeUpdateStart","isUpdatable","updateHover","setUpdateHover","updating","setUpdating","markerStartUrl","markerEndUrl","onEdgeClick","addSelectedEdges","onEdgeDoubleClickHandler","onEdgeContextMenu","onEdgeMouseEnter","onEdgeMouseMove","onEdgeMouseLeave","handleEdgeUpdater","isSourceHandle","_onEdgeUpdateEnd","evt","onConnectEdge","onEdgeUpdaterSourceMouseDown","onEdgeUpdaterTargetMouseDown","onEdgeUpdaterMouseEnter","onEdgeUpdaterMouseOut","inactive","createEdgeTypes","edgeTypes","straight","bezier","step","smoothstep","simplebezier","getHandlePosition","getHandle","getEdgePositions","sourceNodeRect","targetNodeRect","sourceHandlePos","targetHandlePos","isEdgeVisible","sourcePos","targetPos","sourceWidth","sourceHeight","targetWidth","targetHeight","edgeBox","viewBox","getNodeData","defaultEdgeTree","level","isMaxLevel","groupEdgesByZLevel","elevateEdgesOnSelect","maxLevel","levelLookup","tree","hasZIndex","targetNode","sourceNode","edgeOrConnectedNodeSelected","selectedZIndex","edgeTree","useVisibleEdges","ArrowSymbol","color","strokeLinecap","strokeLinejoin","ArrowClosedSymbol","MarkerSymbols","Arrow","ArrowClosed","useMarkerSymbol","symbol","symbolExists","Marker","markerUnits","orient","markerWidth","markerHeight","refX","refY","markerSelector","defaultColor","ids","markers","markerId","localeCompare","MarkerDefinitions","m","MarkerDefinitions$1","selector$4","EdgeRenderer","defaultMarkerColor","sourceHandleBounds","sourceIsValid","targetHandleBounds","targetIsValid","targetNodeHandles","updatable","EdgeRenderer$1","selector$3","Viewport","useOnInitHandler","onInit","rfInstance","isInitialized","oppositePosition","ConnectionLine","Bezier","CustomComponent","fromNode","toX","toY","fromHandleBounds","Loose","fromHandle","fromHandleX","fromHandleY","fromX","fromY","fromPosition","toPosition","connectionLineType","connectionLineStyle","dAttr","pathParams","Step","SmoothStep","SimpleBezier","selector$2","ConnectionLineWrapper","component","useNodeOrEdgeTypes","nodeOrEdgeTypes","createTypes","typesKeysRef","typesParsed","typeKeys","GraphView","connectionLineComponent","connectionLineContainerStyle","nodeTypesWrapped","edgeTypesWrapped","GraphView$1","infiniteExtent","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","initialState","fitViewOnInitOptions","createRFStore","viewportNode","getComputedStyle","m22","DOMMatrixReadOnly","update","doUpdate","nextFitViewOnInitDone","nodeDragItems","positionChanged","triggerNodeChanges","edgeId","storeEdges","nodesToUnselect","edgesToUnselect","transformChanged","is","ReactFlowProvider","storeRef","Wrapper","isWrapped","defaultNodeTypes","defaultEdgeTypes","initNodeOrigin","initSnapGrid","initDefaultViewport","wrapperStyle","ReactFlow","attributionPosition","selector$1","EdgeLabelRenderer","edgeLabelRenderer","useUpdateNodeInternals","updateIds","updateId","nodesSelector","useNodes","edgesSelector","useEdges","viewportSelector","useViewport","createUseItemsState","initialItems","setItems","onItemsChange","useNodesState","useEdgesState","useOnViewportChange","onChange","onEnd","useOnSelectionChange","defaultOptions","useNodesInitialized"],"sources":["/home/krishna/Desktop/vector/frontend/node_modules/@reactflow/core/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { createContext, useContext, useMemo, memo, useRef, useState, useEffect, forwardRef, useCallback } from 'react';\nimport cc from 'classcat';\nimport { useStoreWithEqualityFn, createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/shallow';\nimport { zoomIdentity, zoom } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { drag } from 'd3-drag';\nimport { createPortal } from 'react-dom';\n\nconst StoreContext = createContext(null);\nconst Provider$1 = StoreContext.Provider;\n\nconst errorMessages = {\n    error001: () => '[React Flow]: Seems like you have not used zustand provider as an ancestor. Help: https://reactflow.dev/error#001',\n    error002: () => \"It looks like you've created a new nodeTypes or edgeTypes object. If this wasn't on purpose please define the nodeTypes/edgeTypes outside of the component or memoize them.\",\n    error003: (nodeType) => `Node type \"${nodeType}\" not found. Using fallback type \"default\".`,\n    error004: () => 'The React Flow parent container needs a width and a height to render the graph.',\n    error005: () => 'Only child nodes can use a parent extent.',\n    error006: () => \"Can't create edge. An edge needs a source and a target.\",\n    error007: (id) => `The old edge with id=${id} does not exist.`,\n    error009: (type) => `Marker type \"${type}\" doesn't exist.`,\n    error008: (sourceHandle, edge) => `Couldn't create edge for ${!sourceHandle ? 'source' : 'target'} handle id: \"${!sourceHandle ? edge.sourceHandle : edge.targetHandle}\", edge id: ${edge.id}.`,\n    error010: () => 'Handle: No node id found. Make sure to only use a Handle inside a custom Node.',\n    error011: (edgeType) => `Edge type \"${edgeType}\" not found. Using fallback type \"default\".`,\n    error012: (id) => `Node with id \"${id}\" does not exist, it may have been removed. This can happen when a node is deleted before the \"onNodeClick\" handler is called.`,\n};\n\nconst zustandErrorMessage = errorMessages['error001']();\nfunction useStore(selector, equalityFn) {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useStoreWithEqualityFn(store, selector, equalityFn);\n}\nconst useStoreApi = () => {\n    const store = useContext(StoreContext);\n    if (store === null) {\n        throw new Error(zustandErrorMessage);\n    }\n    return useMemo(() => ({\n        getState: store.getState,\n        setState: store.setState,\n        subscribe: store.subscribe,\n        destroy: store.destroy,\n    }), [store]);\n};\n\nconst selector$g = (s) => (s.userSelectionActive ? 'none' : 'all');\nfunction Panel({ position, children, className, style, ...rest }) {\n    const pointerEvents = useStore(selector$g);\n    const positionClasses = `${position}`.split('-');\n    return (jsx(\"div\", { className: cc(['react-flow__panel', className, ...positionClasses]), style: { ...style, pointerEvents }, ...rest, children: children }));\n}\n\nfunction Attribution({ proOptions, position = 'bottom-right' }) {\n    if (proOptions?.hideAttribution) {\n        return null;\n    }\n    return (jsx(Panel, { position: position, className: \"react-flow__attribution\", \"data-message\": \"Please only hide this attribution when you are subscribed to React Flow Pro: https://pro.reactflow.dev\", children: jsx(\"a\", { href: \"https://reactflow.dev\", target: \"_blank\", rel: \"noopener noreferrer\", \"aria-label\": \"React Flow attribution\", children: \"React Flow\" }) }));\n}\n\nconst EdgeText = ({ x, y, label, labelStyle = {}, labelShowBg = true, labelBgStyle = {}, labelBgPadding = [2, 4], labelBgBorderRadius = 2, children, className, ...rest }) => {\n    const edgeRef = useRef(null);\n    const [edgeTextBbox, setEdgeTextBbox] = useState({ x: 0, y: 0, width: 0, height: 0 });\n    const edgeTextClasses = cc(['react-flow__edge-textwrapper', className]);\n    useEffect(() => {\n        if (edgeRef.current) {\n            const textBbox = edgeRef.current.getBBox();\n            setEdgeTextBbox({\n                x: textBbox.x,\n                y: textBbox.y,\n                width: textBbox.width,\n                height: textBbox.height,\n            });\n        }\n    }, [label]);\n    if (typeof label === 'undefined' || !label) {\n        return null;\n    }\n    return (jsxs(\"g\", { transform: `translate(${x - edgeTextBbox.width / 2} ${y - edgeTextBbox.height / 2})`, className: edgeTextClasses, visibility: edgeTextBbox.width ? 'visible' : 'hidden', ...rest, children: [labelShowBg && (jsx(\"rect\", { width: edgeTextBbox.width + 2 * labelBgPadding[0], x: -labelBgPadding[0], y: -labelBgPadding[1], height: edgeTextBbox.height + 2 * labelBgPadding[1], className: \"react-flow__edge-textbg\", style: labelBgStyle, rx: labelBgBorderRadius, ry: labelBgBorderRadius })), jsx(\"text\", { className: \"react-flow__edge-text\", y: edgeTextBbox.height / 2, dy: \"0.3em\", ref: edgeRef, style: labelStyle, children: label }), children] }));\n};\nvar EdgeText$1 = memo(EdgeText);\n\nconst getDimensions = (node) => ({\n    width: node.offsetWidth,\n    height: node.offsetHeight,\n});\nconst clamp = (val, min = 0, max = 1) => Math.min(Math.max(val, min), max);\nconst clampPosition = (position = { x: 0, y: 0 }, extent) => ({\n    x: clamp(position.x, extent[0][0], extent[1][0]),\n    y: clamp(position.y, extent[0][1], extent[1][1]),\n});\n// returns a number between 0 and 1 that represents the velocity of the movement\n// when the mouse is close to the edge of the canvas\nconst calcAutoPanVelocity = (value, min, max) => {\n    if (value < min) {\n        return clamp(Math.abs(value - min), 1, 50) / 50;\n    }\n    else if (value > max) {\n        return -clamp(Math.abs(value - max), 1, 50) / 50;\n    }\n    return 0;\n};\nconst calcAutoPan = (pos, bounds) => {\n    const xMovement = calcAutoPanVelocity(pos.x, 35, bounds.width - 35) * 20;\n    const yMovement = calcAutoPanVelocity(pos.y, 35, bounds.height - 35) * 20;\n    return [xMovement, yMovement];\n};\nconst getHostForElement = (element) => element.getRootNode?.() || window?.document;\nconst getBoundsOfBoxes = (box1, box2) => ({\n    x: Math.min(box1.x, box2.x),\n    y: Math.min(box1.y, box2.y),\n    x2: Math.max(box1.x2, box2.x2),\n    y2: Math.max(box1.y2, box2.y2),\n});\nconst rectToBox = ({ x, y, width, height }) => ({\n    x,\n    y,\n    x2: x + width,\n    y2: y + height,\n});\nconst boxToRect = ({ x, y, x2, y2 }) => ({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y,\n});\nconst nodeToRect = (node) => ({\n    ...(node.positionAbsolute || { x: 0, y: 0 }),\n    width: node.width || 0,\n    height: node.height || 0,\n});\nconst getBoundsOfRects = (rect1, rect2) => boxToRect(getBoundsOfBoxes(rectToBox(rect1), rectToBox(rect2)));\nconst getOverlappingArea = (rectA, rectB) => {\n    const xOverlap = Math.max(0, Math.min(rectA.x + rectA.width, rectB.x + rectB.width) - Math.max(rectA.x, rectB.x));\n    const yOverlap = Math.max(0, Math.min(rectA.y + rectA.height, rectB.y + rectB.height) - Math.max(rectA.y, rectB.y));\n    return Math.ceil(xOverlap * yOverlap);\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isRectObject = (obj) => isNumeric(obj.width) && isNumeric(obj.height) && isNumeric(obj.x) && isNumeric(obj.y);\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nconst isNumeric = (n) => !isNaN(n) && isFinite(n);\nconst internalsSymbol = Symbol.for('internals');\n// used for a11y key board controls for nodes and edges\nconst elementSelectionKeys = ['Enter', ' ', 'Escape'];\nconst devWarn = (id, message) => {\n    if (process.env.NODE_ENV === 'development') {\n        console.warn(`[React Flow]: ${message} Help: https://reactflow.dev/error#${id}`);\n    }\n};\nconst isReactKeyboardEvent = (event) => 'nativeEvent' in event;\nfunction isInputDOMNode(event) {\n    const kbEvent = isReactKeyboardEvent(event) ? event.nativeEvent : event;\n    // using composed path for handling shadow dom\n    const target = (kbEvent.composedPath?.()?.[0] || event.target);\n    const isInput = ['INPUT', 'SELECT', 'TEXTAREA'].includes(target?.nodeName) || target?.hasAttribute('contenteditable');\n    // when an input field is focused we don't want to trigger deletion or movement of nodes\n    return isInput || !!target?.closest('.nokey');\n}\nconst isMouseEvent = (event) => 'clientX' in event;\nconst getEventPosition = (event, bounds) => {\n    const isMouseTriggered = isMouseEvent(event);\n    const evtX = isMouseTriggered ? event.clientX : event.touches?.[0].clientX;\n    const evtY = isMouseTriggered ? event.clientY : event.touches?.[0].clientY;\n    return {\n        x: evtX - (bounds?.left ?? 0),\n        y: evtY - (bounds?.top ?? 0),\n    };\n};\nconst isMacOs = () => typeof navigator !== 'undefined' && navigator?.userAgent?.indexOf('Mac') >= 0;\n\nconst BaseEdge = ({ id, path, labelX, labelY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth = 20, }) => {\n    return (jsxs(Fragment, { children: [jsx(\"path\", { id: id, style: style, d: path, fill: \"none\", className: \"react-flow__edge-path\", markerEnd: markerEnd, markerStart: markerStart }), interactionWidth && (jsx(\"path\", { d: path, fill: \"none\", strokeOpacity: 0, strokeWidth: interactionWidth, className: \"react-flow__edge-interaction\" })), label && isNumeric(labelX) && isNumeric(labelY) ? (jsx(EdgeText$1, { x: labelX, y: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius })) : null] }));\n};\nBaseEdge.displayName = 'BaseEdge';\n\nconst getMarkerEnd = (markerType, markerEndId) => {\n    if (typeof markerEndId !== 'undefined' && markerEndId) {\n        return `url(#${markerEndId})`;\n    }\n    return typeof markerType !== 'undefined' ? `url(#react-flow__${markerType})` : 'none';\n};\nfunction getMouseHandler$1(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const edge = getState().edges.find((e) => e.id === id);\n            if (edge) {\n                handler(event, { ...edge });\n            }\n        };\n}\n// this is used for straight edges and simple smoothstep edges (LTR, RTL, BTT, TTB)\nfunction getEdgeCenter({ sourceX, sourceY, targetX, targetY, }) {\n    const xOffset = Math.abs(targetX - sourceX) / 2;\n    const centerX = targetX < sourceX ? targetX + xOffset : targetX - xOffset;\n    const yOffset = Math.abs(targetY - sourceY) / 2;\n    const centerY = targetY < sourceY ? targetY + yOffset : targetY - yOffset;\n    return [centerX, centerY, xOffset, yOffset];\n}\nfunction getBezierEdgeCenter({ sourceX, sourceY, targetX, targetY, sourceControlX, sourceControlY, targetControlX, targetControlY, }) {\n    // cubic bezier t=0.5 mid point, not the actual mid point, but easy to calculate\n    // https://stackoverflow.com/questions/67516101/how-to-find-distance-mid-point-of-bezier-curve\n    const centerX = sourceX * 0.125 + sourceControlX * 0.375 + targetControlX * 0.375 + targetX * 0.125;\n    const centerY = sourceY * 0.125 + sourceControlY * 0.375 + targetControlY * 0.375 + targetY * 0.125;\n    const offsetX = Math.abs(centerX - sourceX);\n    const offsetY = Math.abs(centerY - sourceY);\n    return [centerX, centerY, offsetX, offsetY];\n}\n\nvar ConnectionMode;\n(function (ConnectionMode) {\n    ConnectionMode[\"Strict\"] = \"strict\";\n    ConnectionMode[\"Loose\"] = \"loose\";\n})(ConnectionMode || (ConnectionMode = {}));\nvar PanOnScrollMode;\n(function (PanOnScrollMode) {\n    PanOnScrollMode[\"Free\"] = \"free\";\n    PanOnScrollMode[\"Vertical\"] = \"vertical\";\n    PanOnScrollMode[\"Horizontal\"] = \"horizontal\";\n})(PanOnScrollMode || (PanOnScrollMode = {}));\nvar SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Partial\"] = \"partial\";\n    SelectionMode[\"Full\"] = \"full\";\n})(SelectionMode || (SelectionMode = {}));\n\nvar ConnectionLineType;\n(function (ConnectionLineType) {\n    ConnectionLineType[\"Bezier\"] = \"default\";\n    ConnectionLineType[\"Straight\"] = \"straight\";\n    ConnectionLineType[\"Step\"] = \"step\";\n    ConnectionLineType[\"SmoothStep\"] = \"smoothstep\";\n    ConnectionLineType[\"SimpleBezier\"] = \"simplebezier\";\n})(ConnectionLineType || (ConnectionLineType = {}));\nvar MarkerType;\n(function (MarkerType) {\n    MarkerType[\"Arrow\"] = \"arrow\";\n    MarkerType[\"ArrowClosed\"] = \"arrowclosed\";\n})(MarkerType || (MarkerType = {}));\n\nvar Position;\n(function (Position) {\n    Position[\"Left\"] = \"left\";\n    Position[\"Top\"] = \"top\";\n    Position[\"Right\"] = \"right\";\n    Position[\"Bottom\"] = \"bottom\";\n})(Position || (Position = {}));\n\nfunction getControl({ pos, x1, y1, x2, y2 }) {\n    if (pos === Position.Left || pos === Position.Right) {\n        return [0.5 * (x1 + x2), y1];\n    }\n    return [x1, 0.5 * (y1 + y2)];\n}\nfunction getSimpleBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, }) {\n    const [sourceControlX, sourceControlY] = getControl({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n    });\n    const [targetControlX, targetControlY] = getControl({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst SimpleBezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSimpleBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSimpleBezierEdge.displayName = 'SimpleBezierEdge';\n\nconst handleDirections = {\n    [Position.Left]: { x: -1, y: 0 },\n    [Position.Right]: { x: 1, y: 0 },\n    [Position.Top]: { x: 0, y: -1 },\n    [Position.Bottom]: { x: 0, y: 1 },\n};\nconst getDirection = ({ source, sourcePosition = Position.Bottom, target, }) => {\n    if (sourcePosition === Position.Left || sourcePosition === Position.Right) {\n        return source.x < target.x ? { x: 1, y: 0 } : { x: -1, y: 0 };\n    }\n    return source.y < target.y ? { x: 0, y: 1 } : { x: 0, y: -1 };\n};\nconst distance = (a, b) => Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n// ith this function we try to mimic a orthogonal edge routing behaviour\n// It's not as good as a real orthogonal edge routing but it's faster and good enough as a default for step and smooth step edges\nfunction getPoints({ source, sourcePosition = Position.Bottom, target, targetPosition = Position.Top, center, offset, }) {\n    const sourceDir = handleDirections[sourcePosition];\n    const targetDir = handleDirections[targetPosition];\n    const sourceGapped = { x: source.x + sourceDir.x * offset, y: source.y + sourceDir.y * offset };\n    const targetGapped = { x: target.x + targetDir.x * offset, y: target.y + targetDir.y * offset };\n    const dir = getDirection({\n        source: sourceGapped,\n        sourcePosition,\n        target: targetGapped,\n    });\n    const dirAccessor = dir.x !== 0 ? 'x' : 'y';\n    const currDir = dir[dirAccessor];\n    let points = [];\n    let centerX, centerY;\n    const sourceGapOffset = { x: 0, y: 0 };\n    const targetGapOffset = { x: 0, y: 0 };\n    const [defaultCenterX, defaultCenterY, defaultOffsetX, defaultOffsetY] = getEdgeCenter({\n        sourceX: source.x,\n        sourceY: source.y,\n        targetX: target.x,\n        targetY: target.y,\n    });\n    // opposite handle positions, default case\n    if (sourceDir[dirAccessor] * targetDir[dirAccessor] === -1) {\n        centerX = center.x || defaultCenterX;\n        centerY = center.y || defaultCenterY;\n        //    --->\n        //    |\n        // >---\n        const verticalSplit = [\n            { x: centerX, y: sourceGapped.y },\n            { x: centerX, y: targetGapped.y },\n        ];\n        //    |\n        //  ---\n        //  |\n        const horizontalSplit = [\n            { x: sourceGapped.x, y: centerY },\n            { x: targetGapped.x, y: centerY },\n        ];\n        if (sourceDir[dirAccessor] === currDir) {\n            points = dirAccessor === 'x' ? verticalSplit : horizontalSplit;\n        }\n        else {\n            points = dirAccessor === 'x' ? horizontalSplit : verticalSplit;\n        }\n    }\n    else {\n        // sourceTarget means we take x from source and y from target, targetSource is the opposite\n        const sourceTarget = [{ x: sourceGapped.x, y: targetGapped.y }];\n        const targetSource = [{ x: targetGapped.x, y: sourceGapped.y }];\n        // this handles edges with same handle positions\n        if (dirAccessor === 'x') {\n            points = sourceDir.x === currDir ? targetSource : sourceTarget;\n        }\n        else {\n            points = sourceDir.y === currDir ? sourceTarget : targetSource;\n        }\n        if (sourcePosition === targetPosition) {\n            const diff = Math.abs(source[dirAccessor] - target[dirAccessor]);\n            // if an edge goes from right to right for example (sourcePosition === targetPosition) and the distance between source.x and target.x is less than the offset, the added point and the gapped source/target will overlap. This leads to a weird edge path. To avoid this we add a gapOffset to the source/target\n            if (diff <= offset) {\n                const gapOffset = Math.min(offset - 1, offset - diff);\n                if (sourceDir[dirAccessor] === currDir) {\n                    sourceGapOffset[dirAccessor] = (sourceGapped[dirAccessor] > source[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n                else {\n                    targetGapOffset[dirAccessor] = (targetGapped[dirAccessor] > target[dirAccessor] ? -1 : 1) * gapOffset;\n                }\n            }\n        }\n        // these are conditions for handling mixed handle positions like Right -> Bottom for example\n        if (sourcePosition !== targetPosition) {\n            const dirAccessorOpposite = dirAccessor === 'x' ? 'y' : 'x';\n            const isSameDir = sourceDir[dirAccessor] === targetDir[dirAccessorOpposite];\n            const sourceGtTargetOppo = sourceGapped[dirAccessorOpposite] > targetGapped[dirAccessorOpposite];\n            const sourceLtTargetOppo = sourceGapped[dirAccessorOpposite] < targetGapped[dirAccessorOpposite];\n            const flipSourceTarget = (sourceDir[dirAccessor] === 1 && ((!isSameDir && sourceGtTargetOppo) || (isSameDir && sourceLtTargetOppo))) ||\n                (sourceDir[dirAccessor] !== 1 && ((!isSameDir && sourceLtTargetOppo) || (isSameDir && sourceGtTargetOppo)));\n            if (flipSourceTarget) {\n                points = dirAccessor === 'x' ? sourceTarget : targetSource;\n            }\n        }\n        const sourceGapPoint = { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y };\n        const targetGapPoint = { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y };\n        const maxXDistance = Math.max(Math.abs(sourceGapPoint.x - points[0].x), Math.abs(targetGapPoint.x - points[0].x));\n        const maxYDistance = Math.max(Math.abs(sourceGapPoint.y - points[0].y), Math.abs(targetGapPoint.y - points[0].y));\n        // we want to place the label on the longest segment of the edge\n        if (maxXDistance >= maxYDistance) {\n            centerX = (sourceGapPoint.x + targetGapPoint.x) / 2;\n            centerY = points[0].y;\n        }\n        else {\n            centerX = points[0].x;\n            centerY = (sourceGapPoint.y + targetGapPoint.y) / 2;\n        }\n    }\n    const pathPoints = [\n        source,\n        { x: sourceGapped.x + sourceGapOffset.x, y: sourceGapped.y + sourceGapOffset.y },\n        ...points,\n        { x: targetGapped.x + targetGapOffset.x, y: targetGapped.y + targetGapOffset.y },\n        target,\n    ];\n    return [pathPoints, centerX, centerY, defaultOffsetX, defaultOffsetY];\n}\nfunction getBend(a, b, c, size) {\n    const bendSize = Math.min(distance(a, b) / 2, distance(b, c) / 2, size);\n    const { x, y } = b;\n    // no bend\n    if ((a.x === x && x === c.x) || (a.y === y && y === c.y)) {\n        return `L${x} ${y}`;\n    }\n    // first segment is horizontal\n    if (a.y === y) {\n        const xDir = a.x < c.x ? -1 : 1;\n        const yDir = a.y < c.y ? 1 : -1;\n        return `L ${x + bendSize * xDir},${y}Q ${x},${y} ${x},${y + bendSize * yDir}`;\n    }\n    const xDir = a.x < c.x ? 1 : -1;\n    const yDir = a.y < c.y ? -1 : 1;\n    return `L ${x},${y + bendSize * yDir}Q ${x},${y} ${x + bendSize * xDir},${y}`;\n}\nfunction getSmoothStepPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, borderRadius = 5, centerX, centerY, offset = 20, }) {\n    const [points, labelX, labelY, offsetX, offsetY] = getPoints({\n        source: { x: sourceX, y: sourceY },\n        sourcePosition,\n        target: { x: targetX, y: targetY },\n        targetPosition,\n        center: { x: centerX, y: centerY },\n        offset,\n    });\n    const path = points.reduce((res, p, i) => {\n        let segment = '';\n        if (i > 0 && i < points.length - 1) {\n            segment = getBend(points[i - 1], p, points[i + 1], borderRadius);\n        }\n        else {\n            segment = `${i === 0 ? 'M' : 'L'}${p.x} ${p.y}`;\n        }\n        res += segment;\n        return res;\n    }, '');\n    return [path, labelX, labelY, offsetX, offsetY];\n}\nconst SmoothStepEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, sourcePosition = Position.Bottom, targetPosition = Position.Top, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getSmoothStepPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        borderRadius: pathOptions?.borderRadius,\n        offset: pathOptions?.offset,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nSmoothStepEdge.displayName = 'SmoothStepEdge';\n\nconst StepEdge = memo((props) => (jsx(SmoothStepEdge, { ...props, pathOptions: useMemo(() => ({ borderRadius: 0, offset: props.pathOptions?.offset }), [props.pathOptions?.offset]) })));\nStepEdge.displayName = 'StepEdge';\n\nfunction getStraightPath({ sourceX, sourceY, targetX, targetY, }) {\n    const [labelX, labelY, offsetX, offsetY] = getEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n    });\n    return [`M ${sourceX},${sourceY}L ${targetX},${targetY}`, labelX, labelY, offsetX, offsetY];\n}\nconst StraightEdge = memo(({ sourceX, sourceY, targetX, targetY, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, interactionWidth, }) => {\n    const [path, labelX, labelY] = getStraightPath({ sourceX, sourceY, targetX, targetY });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nStraightEdge.displayName = 'StraightEdge';\n\nfunction calculateControlOffset(distance, curvature) {\n    if (distance >= 0) {\n        return 0.5 * distance;\n    }\n    return curvature * 25 * Math.sqrt(-distance);\n}\nfunction getControlWithCurvature({ pos, x1, y1, x2, y2, c }) {\n    switch (pos) {\n        case Position.Left:\n            return [x1 - calculateControlOffset(x1 - x2, c), y1];\n        case Position.Right:\n            return [x1 + calculateControlOffset(x2 - x1, c), y1];\n        case Position.Top:\n            return [x1, y1 - calculateControlOffset(y1 - y2, c)];\n        case Position.Bottom:\n            return [x1, y1 + calculateControlOffset(y2 - y1, c)];\n    }\n}\nfunction getBezierPath({ sourceX, sourceY, sourcePosition = Position.Bottom, targetX, targetY, targetPosition = Position.Top, curvature = 0.25, }) {\n    const [sourceControlX, sourceControlY] = getControlWithCurvature({\n        pos: sourcePosition,\n        x1: sourceX,\n        y1: sourceY,\n        x2: targetX,\n        y2: targetY,\n        c: curvature,\n    });\n    const [targetControlX, targetControlY] = getControlWithCurvature({\n        pos: targetPosition,\n        x1: targetX,\n        y1: targetY,\n        x2: sourceX,\n        y2: sourceY,\n        c: curvature,\n    });\n    const [labelX, labelY, offsetX, offsetY] = getBezierEdgeCenter({\n        sourceX,\n        sourceY,\n        targetX,\n        targetY,\n        sourceControlX,\n        sourceControlY,\n        targetControlX,\n        targetControlY,\n    });\n    return [\n        `M${sourceX},${sourceY} C${sourceControlX},${sourceControlY} ${targetControlX},${targetControlY} ${targetX},${targetY}`,\n        labelX,\n        labelY,\n        offsetX,\n        offsetY,\n    ];\n}\nconst BezierEdge = memo(({ sourceX, sourceY, targetX, targetY, sourcePosition = Position.Bottom, targetPosition = Position.Top, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, markerEnd, markerStart, pathOptions, interactionWidth, }) => {\n    const [path, labelX, labelY] = getBezierPath({\n        sourceX,\n        sourceY,\n        sourcePosition,\n        targetX,\n        targetY,\n        targetPosition,\n        curvature: pathOptions?.curvature,\n    });\n    return (jsx(BaseEdge, { path: path, labelX: labelX, labelY: labelY, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, style: style, markerEnd: markerEnd, markerStart: markerStart, interactionWidth: interactionWidth }));\n});\nBezierEdge.displayName = 'BezierEdge';\n\nconst NodeIdContext = createContext(null);\nconst Provider = NodeIdContext.Provider;\nNodeIdContext.Consumer;\nconst useNodeId = () => {\n    const nodeId = useContext(NodeIdContext);\n    return nodeId;\n};\n\nconst isEdge = (element) => 'id' in element && 'source' in element && 'target' in element;\nconst isNode = (element) => 'id' in element && !('source' in element) && !('target' in element);\nconst getOutgoers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const outgoerIds = edges.filter((e) => e.source === node.id).map((e) => e.target);\n    return nodes.filter((n) => outgoerIds.includes(n.id));\n};\nconst getIncomers = (node, nodes, edges) => {\n    if (!isNode(node)) {\n        return [];\n    }\n    const incomersIds = edges.filter((e) => e.target === node.id).map((e) => e.source);\n    return nodes.filter((n) => incomersIds.includes(n.id));\n};\nconst getEdgeId = ({ source, sourceHandle, target, targetHandle }) => `reactflow__edge-${source}${sourceHandle || ''}-${target}${targetHandle || ''}`;\nconst getMarkerId = (marker, rfId) => {\n    if (typeof marker === 'undefined') {\n        return '';\n    }\n    if (typeof marker === 'string') {\n        return marker;\n    }\n    const idPrefix = rfId ? `${rfId}__` : '';\n    return `${idPrefix}${Object.keys(marker)\n        .sort()\n        .map((key) => `${key}=${marker[key]}`)\n        .join('&')}`;\n};\nconst connectionExists = (edge, edges) => {\n    return edges.some((el) => el.source === edge.source &&\n        el.target === edge.target &&\n        (el.sourceHandle === edge.sourceHandle || (!el.sourceHandle && !edge.sourceHandle)) &&\n        (el.targetHandle === edge.targetHandle || (!el.targetHandle && !edge.targetHandle)));\n};\nconst addEdge = (edgeParams, edges) => {\n    if (!edgeParams.source || !edgeParams.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    let edge;\n    if (isEdge(edgeParams)) {\n        edge = { ...edgeParams };\n    }\n    else {\n        edge = {\n            ...edgeParams,\n            id: getEdgeId(edgeParams),\n        };\n    }\n    if (connectionExists(edge, edges)) {\n        return edges;\n    }\n    return edges.concat(edge);\n};\nconst updateEdge = (oldEdge, newConnection, edges, options = { shouldReplaceId: true }) => {\n    const { id: oldEdgeId, ...rest } = oldEdge;\n    if (!newConnection.source || !newConnection.target) {\n        devWarn('006', errorMessages['error006']());\n        return edges;\n    }\n    const foundEdge = edges.find((e) => e.id === oldEdgeId);\n    if (!foundEdge) {\n        devWarn('007', errorMessages['error007'](oldEdgeId));\n        return edges;\n    }\n    // Remove old edge and create the new edge with parameters of old edge.\n    const edge = {\n        ...rest,\n        id: options.shouldReplaceId ? getEdgeId(newConnection) : oldEdgeId,\n        source: newConnection.source,\n        target: newConnection.target,\n        sourceHandle: newConnection.sourceHandle,\n        targetHandle: newConnection.targetHandle,\n    };\n    return edges.filter((e) => e.id !== oldEdgeId).concat(edge);\n};\nconst pointToRendererPoint = ({ x, y }, [tx, ty, tScale], snapToGrid, [snapX, snapY]) => {\n    const position = {\n        x: (x - tx) / tScale,\n        y: (y - ty) / tScale,\n    };\n    if (snapToGrid) {\n        return {\n            x: snapX * Math.round(position.x / snapX),\n            y: snapY * Math.round(position.y / snapY),\n        };\n    }\n    return position;\n};\nconst rendererPointToPoint = ({ x, y }, [tx, ty, tScale]) => {\n    return {\n        x: x * tScale + tx,\n        y: y * tScale + ty,\n    };\n};\nconst getNodePositionWithOrigin = (node, nodeOrigin = [0, 0]) => {\n    if (!node) {\n        return {\n            x: 0,\n            y: 0,\n            positionAbsolute: {\n                x: 0,\n                y: 0,\n            },\n        };\n    }\n    const offsetX = (node.width ?? 0) * nodeOrigin[0];\n    const offsetY = (node.height ?? 0) * nodeOrigin[1];\n    const position = {\n        x: node.position.x - offsetX,\n        y: node.position.y - offsetY,\n    };\n    return {\n        ...position,\n        positionAbsolute: node.positionAbsolute\n            ? {\n                x: node.positionAbsolute.x - offsetX,\n                y: node.positionAbsolute.y - offsetY,\n            }\n            : position,\n    };\n};\nconst getRectOfNodes = (nodes, nodeOrigin = [0, 0]) => {\n    if (nodes.length === 0) {\n        return { x: 0, y: 0, width: 0, height: 0 };\n    }\n    const box = nodes.reduce((currBox, node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return getBoundsOfBoxes(currBox, rectToBox({\n            x,\n            y,\n            width: node.width || 0,\n            height: node.height || 0,\n        }));\n    }, { x: Infinity, y: Infinity, x2: -Infinity, y2: -Infinity });\n    return boxToRect(box);\n};\nconst getNodesInside = (nodeInternals, rect, [tx, ty, tScale] = [0, 0, 1], partially = false, \n// set excludeNonSelectableNodes if you want to pay attention to the nodes \"selectable\" attribute\nexcludeNonSelectableNodes = false, nodeOrigin = [0, 0]) => {\n    const paneRect = {\n        x: (rect.x - tx) / tScale,\n        y: (rect.y - ty) / tScale,\n        width: rect.width / tScale,\n        height: rect.height / tScale,\n    };\n    const visibleNodes = [];\n    nodeInternals.forEach((node) => {\n        const { width, height, selectable = true, hidden = false } = node;\n        if ((excludeNonSelectableNodes && !selectable) || hidden) {\n            return false;\n        }\n        const { positionAbsolute } = getNodePositionWithOrigin(node, nodeOrigin);\n        const nodeRect = {\n            x: positionAbsolute.x,\n            y: positionAbsolute.y,\n            width: width || 0,\n            height: height || 0,\n        };\n        const overlappingArea = getOverlappingArea(paneRect, nodeRect);\n        const notInitialized = typeof width === 'undefined' || typeof height === 'undefined' || width === null || height === null;\n        const partiallyVisible = partially && overlappingArea > 0;\n        const area = (width || 0) * (height || 0);\n        const isVisible = notInitialized || partiallyVisible || overlappingArea >= area;\n        if (isVisible || node.dragging) {\n            visibleNodes.push(node);\n        }\n    });\n    return visibleNodes;\n};\nconst getConnectedEdges = (nodes, edges) => {\n    const nodeIds = nodes.map((node) => node.id);\n    return edges.filter((edge) => nodeIds.includes(edge.source) || nodeIds.includes(edge.target));\n};\nconst getTransformForBounds = (bounds, width, height, minZoom, maxZoom, padding = 0.1) => {\n    const xZoom = width / (bounds.width * (1 + padding));\n    const yZoom = height / (bounds.height * (1 + padding));\n    const zoom = Math.min(xZoom, yZoom);\n    const clampedZoom = clamp(zoom, minZoom, maxZoom);\n    const boundsCenterX = bounds.x + bounds.width / 2;\n    const boundsCenterY = bounds.y + bounds.height / 2;\n    const x = width / 2 - boundsCenterX * clampedZoom;\n    const y = height / 2 - boundsCenterY * clampedZoom;\n    return [x, y, clampedZoom];\n};\nconst getD3Transition = (selection, duration = 0) => {\n    return selection.transition().duration(duration);\n};\n\n// this functions collects all handles and adds an absolute position\n// so that we can later find the closest handle to the mouse position\nfunction getHandles(node, handleBounds, type, currentHandle) {\n    return (handleBounds[type] || []).reduce((res, h) => {\n        if (`${node.id}-${h.id}-${type}` !== currentHandle) {\n            res.push({\n                id: h.id || null,\n                type,\n                nodeId: node.id,\n                x: (node.positionAbsolute?.x ?? 0) + h.x + h.width / 2,\n                y: (node.positionAbsolute?.y ?? 0) + h.y + h.height / 2,\n            });\n        }\n        return res;\n    }, []);\n}\nfunction getClosestHandle(event, doc, pos, connectionRadius, handles, validator) {\n    // we always want to prioritize the handle below the mouse cursor over the closest distance handle,\n    // because it could be that the center of another handle is closer to the mouse pointer than the handle below the cursor\n    const { x, y } = getEventPosition(event);\n    const domNodes = doc.elementsFromPoint(x, y);\n    const handleBelow = domNodes.find((el) => el.classList.contains('react-flow__handle'));\n    if (handleBelow) {\n        const handleNodeId = handleBelow.getAttribute('data-nodeid');\n        if (handleNodeId) {\n            const handleType = getHandleType(undefined, handleBelow);\n            const handleId = handleBelow.getAttribute('data-handleid');\n            const validHandleResult = validator({ nodeId: handleNodeId, id: handleId, type: handleType });\n            if (validHandleResult) {\n                return {\n                    handle: {\n                        id: handleId,\n                        type: handleType,\n                        nodeId: handleNodeId,\n                        x: pos.x,\n                        y: pos.y,\n                    },\n                    validHandleResult,\n                };\n            }\n        }\n    }\n    // if we couldn't find a handle below the mouse cursor we look for the closest distance based on the connectionRadius\n    let closestHandles = [];\n    let minDistance = Infinity;\n    handles.forEach((handle) => {\n        const distance = Math.sqrt((handle.x - pos.x) ** 2 + (handle.y - pos.y) ** 2);\n        if (distance <= connectionRadius) {\n            const validHandleResult = validator(handle);\n            if (distance <= minDistance) {\n                if (distance < minDistance) {\n                    closestHandles = [{ handle, validHandleResult }];\n                }\n                else if (distance === minDistance) {\n                    // when multiple handles are on the same distance we collect all of them\n                    closestHandles.push({\n                        handle,\n                        validHandleResult,\n                    });\n                }\n                minDistance = distance;\n            }\n        }\n    });\n    if (!closestHandles.length) {\n        return { handle: null, validHandleResult: defaultResult() };\n    }\n    if (closestHandles.length === 1) {\n        return closestHandles[0];\n    }\n    const hasValidHandle = closestHandles.some(({ validHandleResult }) => validHandleResult.isValid);\n    const hasTargetHandle = closestHandles.some(({ handle }) => handle.type === 'target');\n    // if multiple handles are layouted on top of each other we prefer the one with type = target and the one that is valid\n    return (closestHandles.find(({ handle, validHandleResult }) => hasTargetHandle ? handle.type === 'target' : (hasValidHandle ? validHandleResult.isValid : true)) || closestHandles[0]);\n}\nconst nullConnection = { source: null, target: null, sourceHandle: null, targetHandle: null };\nconst defaultResult = () => ({\n    handleDomNode: null,\n    isValid: false,\n    connection: nullConnection,\n    endHandle: null,\n});\n// checks if  and returns connection in fom of an object { source: 123, target: 312 }\nfunction isValidHandle(handle, connectionMode, fromNodeId, fromHandleId, fromType, isValidConnection, doc) {\n    const isTarget = fromType === 'target';\n    const handleToCheck = doc.querySelector(`.react-flow__handle[data-id=\"${handle?.nodeId}-${handle?.id}-${handle?.type}\"]`);\n    const result = {\n        ...defaultResult(),\n        handleDomNode: handleToCheck,\n    };\n    if (handleToCheck) {\n        const handleType = getHandleType(undefined, handleToCheck);\n        const handleNodeId = handleToCheck.getAttribute('data-nodeid');\n        const handleId = handleToCheck.getAttribute('data-handleid');\n        const connectable = handleToCheck.classList.contains('connectable');\n        const connectableEnd = handleToCheck.classList.contains('connectableend');\n        const connection = {\n            source: isTarget ? handleNodeId : fromNodeId,\n            sourceHandle: isTarget ? handleId : fromHandleId,\n            target: isTarget ? fromNodeId : handleNodeId,\n            targetHandle: isTarget ? fromHandleId : handleId,\n        };\n        result.connection = connection;\n        const isConnectable = connectable && connectableEnd;\n        // in strict mode we don't allow target to target or source to source connections\n        const isValid = isConnectable &&\n            (connectionMode === ConnectionMode.Strict\n                ? (isTarget && handleType === 'source') || (!isTarget && handleType === 'target')\n                : handleNodeId !== fromNodeId || handleId !== fromHandleId);\n        if (isValid) {\n            result.endHandle = {\n                nodeId: handleNodeId,\n                handleId,\n                type: handleType,\n            };\n            result.isValid = isValidConnection(connection);\n        }\n    }\n    return result;\n}\nfunction getHandleLookup({ nodes, nodeId, handleId, handleType }) {\n    return nodes.reduce((res, node) => {\n        if (node[internalsSymbol]) {\n            const { handleBounds } = node[internalsSymbol];\n            let sourceHandles = [];\n            let targetHandles = [];\n            if (handleBounds) {\n                sourceHandles = getHandles(node, handleBounds, 'source', `${nodeId}-${handleId}-${handleType}`);\n                targetHandles = getHandles(node, handleBounds, 'target', `${nodeId}-${handleId}-${handleType}`);\n            }\n            res.push(...sourceHandles, ...targetHandles);\n        }\n        return res;\n    }, []);\n}\nfunction getHandleType(edgeUpdaterType, handleDomNode) {\n    if (edgeUpdaterType) {\n        return edgeUpdaterType;\n    }\n    else if (handleDomNode?.classList.contains('target')) {\n        return 'target';\n    }\n    else if (handleDomNode?.classList.contains('source')) {\n        return 'source';\n    }\n    return null;\n}\nfunction resetRecentHandle(handleDomNode) {\n    handleDomNode?.classList.remove('valid', 'connecting', 'react-flow__handle-valid', 'react-flow__handle-connecting');\n}\nfunction getConnectionStatus(isInsideConnectionRadius, isHandleValid) {\n    let connectionStatus = null;\n    if (isHandleValid) {\n        connectionStatus = 'valid';\n    }\n    else if (isInsideConnectionRadius && !isHandleValid) {\n        connectionStatus = 'invalid';\n    }\n    return connectionStatus;\n}\n\nfunction handlePointerDown({ event, handleId, nodeId, onConnect, isTarget, getState, setState, isValidConnection, edgeUpdaterType, onEdgeUpdateEnd, }) {\n    // when react-flow is used inside a shadow root we can't use document\n    const doc = getHostForElement(event.target);\n    const { connectionMode, domNode, autoPanOnConnect, connectionRadius, onConnectStart, panBy, getNodes, cancelConnection, } = getState();\n    let autoPanId = 0;\n    let closestHandle;\n    const { x, y } = getEventPosition(event);\n    const clickedHandle = doc?.elementFromPoint(x, y);\n    const handleType = getHandleType(edgeUpdaterType, clickedHandle);\n    const containerBounds = domNode?.getBoundingClientRect();\n    if (!containerBounds || !handleType) {\n        return;\n    }\n    let prevActiveHandle;\n    let connectionPosition = getEventPosition(event, containerBounds);\n    let autoPanStarted = false;\n    let connection = null;\n    let isValid = false;\n    let handleDomNode = null;\n    const handleLookup = getHandleLookup({\n        nodes: getNodes(),\n        nodeId,\n        handleId,\n        handleType,\n    });\n    // when the user is moving the mouse close to the edge of the canvas while connecting we move the canvas\n    const autoPan = () => {\n        if (!autoPanOnConnect) {\n            return;\n        }\n        const [xMovement, yMovement] = calcAutoPan(connectionPosition, containerBounds);\n        panBy({ x: xMovement, y: yMovement });\n        autoPanId = requestAnimationFrame(autoPan);\n    };\n    setState({\n        connectionPosition,\n        connectionStatus: null,\n        // connectionNodeId etc will be removed in the next major in favor of connectionStartHandle\n        connectionNodeId: nodeId,\n        connectionHandleId: handleId,\n        connectionHandleType: handleType,\n        connectionStartHandle: {\n            nodeId,\n            handleId,\n            type: handleType,\n        },\n        connectionEndHandle: null,\n    });\n    onConnectStart?.(event, { nodeId, handleId, handleType });\n    function onPointerMove(event) {\n        const { transform } = getState();\n        connectionPosition = getEventPosition(event, containerBounds);\n        const { handle, validHandleResult } = getClosestHandle(event, doc, pointToRendererPoint(connectionPosition, transform, false, [1, 1]), connectionRadius, handleLookup, (handle) => isValidHandle(handle, connectionMode, nodeId, handleId, isTarget ? 'target' : 'source', isValidConnection, doc));\n        closestHandle = handle;\n        if (!autoPanStarted) {\n            autoPan();\n            autoPanStarted = true;\n        }\n        handleDomNode = validHandleResult.handleDomNode;\n        connection = validHandleResult.connection;\n        isValid = validHandleResult.isValid;\n        setState({\n            connectionPosition: closestHandle && isValid\n                ? rendererPointToPoint({\n                    x: closestHandle.x,\n                    y: closestHandle.y,\n                }, transform)\n                : connectionPosition,\n            connectionStatus: getConnectionStatus(!!closestHandle, isValid),\n            connectionEndHandle: validHandleResult.endHandle,\n        });\n        if (!closestHandle && !isValid && !handleDomNode) {\n            return resetRecentHandle(prevActiveHandle);\n        }\n        if (connection.source !== connection.target && handleDomNode) {\n            resetRecentHandle(prevActiveHandle);\n            prevActiveHandle = handleDomNode;\n            // @todo: remove the old class names \"react-flow__handle-\" in the next major version\n            handleDomNode.classList.add('connecting', 'react-flow__handle-connecting');\n            handleDomNode.classList.toggle('valid', isValid);\n            handleDomNode.classList.toggle('react-flow__handle-valid', isValid);\n        }\n    }\n    function onPointerUp(event) {\n        if ((closestHandle || handleDomNode) && connection && isValid) {\n            onConnect?.(connection);\n        }\n        // it's important to get a fresh reference from the store here\n        // in order to get the latest state of onConnectEnd\n        getState().onConnectEnd?.(event);\n        if (edgeUpdaterType) {\n            onEdgeUpdateEnd?.(event);\n        }\n        resetRecentHandle(prevActiveHandle);\n        cancelConnection();\n        cancelAnimationFrame(autoPanId);\n        autoPanStarted = false;\n        isValid = false;\n        connection = null;\n        handleDomNode = null;\n        doc.removeEventListener('mousemove', onPointerMove);\n        doc.removeEventListener('mouseup', onPointerUp);\n        doc.removeEventListener('touchmove', onPointerMove);\n        doc.removeEventListener('touchend', onPointerUp);\n    }\n    doc.addEventListener('mousemove', onPointerMove);\n    doc.addEventListener('mouseup', onPointerUp);\n    doc.addEventListener('touchmove', onPointerMove);\n    doc.addEventListener('touchend', onPointerUp);\n}\n\nconst alwaysValid = () => true;\nconst selector$f = (s) => ({\n    connectionStartHandle: s.connectionStartHandle,\n    connectOnClick: s.connectOnClick,\n    noPanClassName: s.noPanClassName,\n});\nconst connectingSelector = (nodeId, handleId, type) => (state) => {\n    const { connectionStartHandle: startHandle, connectionEndHandle: endHandle, connectionClickStartHandle: clickHandle, } = state;\n    return {\n        connecting: (startHandle?.nodeId === nodeId && startHandle?.handleId === handleId && startHandle?.type === type) ||\n            (endHandle?.nodeId === nodeId && endHandle?.handleId === handleId && endHandle?.type === type),\n        clickConnecting: clickHandle?.nodeId === nodeId && clickHandle?.handleId === handleId && clickHandle?.type === type,\n    };\n};\nconst Handle = forwardRef(({ type = 'source', position = Position.Top, isValidConnection, isConnectable = true, isConnectableStart = true, isConnectableEnd = true, id, onConnect, children, className, onMouseDown, onTouchStart, ...rest }, ref) => {\n    const handleId = id || null;\n    const isTarget = type === 'target';\n    const store = useStoreApi();\n    const nodeId = useNodeId();\n    const { connectOnClick, noPanClassName } = useStore(selector$f, shallow);\n    const { connecting, clickConnecting } = useStore(connectingSelector(nodeId, handleId, type), shallow);\n    if (!nodeId) {\n        store.getState().onError?.('010', errorMessages['error010']());\n    }\n    const onConnectExtended = (params) => {\n        const { defaultEdgeOptions, onConnect: onConnectAction, hasDefaultEdges } = store.getState();\n        const edgeParams = {\n            ...defaultEdgeOptions,\n            ...params,\n        };\n        if (hasDefaultEdges) {\n            const { edges, setEdges } = store.getState();\n            setEdges(addEdge(edgeParams, edges));\n        }\n        onConnectAction?.(edgeParams);\n        onConnect?.(edgeParams);\n    };\n    const onPointerDown = (event) => {\n        if (!nodeId) {\n            return;\n        }\n        const isMouseTriggered = isMouseEvent(event);\n        if (isConnectableStart && ((isMouseTriggered && event.button === 0) || !isMouseTriggered)) {\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectExtended,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection: isValidConnection || store.getState().isValidConnection || alwaysValid,\n            });\n        }\n        if (isMouseTriggered) {\n            onMouseDown?.(event);\n        }\n        else {\n            onTouchStart?.(event);\n        }\n    };\n    const onClick = (event) => {\n        const { onClickConnectStart, onClickConnectEnd, connectionClickStartHandle, connectionMode, isValidConnection: isValidConnectionStore, } = store.getState();\n        if (!nodeId || (!connectionClickStartHandle && !isConnectableStart)) {\n            return;\n        }\n        if (!connectionClickStartHandle) {\n            onClickConnectStart?.(event, { nodeId, handleId, handleType: type });\n            store.setState({ connectionClickStartHandle: { nodeId, type, handleId } });\n            return;\n        }\n        const doc = getHostForElement(event.target);\n        const isValidConnectionHandler = isValidConnection || isValidConnectionStore || alwaysValid;\n        const { connection, isValid } = isValidHandle({\n            nodeId,\n            id: handleId,\n            type,\n        }, connectionMode, connectionClickStartHandle.nodeId, connectionClickStartHandle.handleId || null, connectionClickStartHandle.type, isValidConnectionHandler, doc);\n        if (isValid) {\n            onConnectExtended(connection);\n        }\n        onClickConnectEnd?.(event);\n        store.setState({ connectionClickStartHandle: null });\n    };\n    return (jsx(\"div\", { \"data-handleid\": handleId, \"data-nodeid\": nodeId, \"data-handlepos\": position, \"data-id\": `${nodeId}-${handleId}-${type}`, className: cc([\n            'react-flow__handle',\n            `react-flow__handle-${position}`,\n            'nodrag',\n            noPanClassName,\n            className,\n            {\n                source: !isTarget,\n                target: isTarget,\n                connectable: isConnectable,\n                connectablestart: isConnectableStart,\n                connectableend: isConnectableEnd,\n                connecting: clickConnecting,\n                // this class is used to style the handle when the user is connecting\n                connectionindicator: isConnectable && ((isConnectableStart && !connecting) || (isConnectableEnd && connecting)),\n            },\n        ]), onMouseDown: onPointerDown, onTouchStart: onPointerDown, onClick: connectOnClick ? onClick : undefined, ref: ref, ...rest, children: children }));\n});\nHandle.displayName = 'Handle';\nvar Handle$1 = memo(Handle);\n\nconst DefaultNode = ({ data, isConnectable, targetPosition = Position.Top, sourcePosition = Position.Bottom, }) => {\n    return (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\n};\nDefaultNode.displayName = 'DefaultNode';\nvar DefaultNode$1 = memo(DefaultNode);\n\nconst InputNode = ({ data, isConnectable, sourcePosition = Position.Bottom }) => (jsxs(Fragment, { children: [data?.label, jsx(Handle$1, { type: \"source\", position: sourcePosition, isConnectable: isConnectable })] }));\nInputNode.displayName = 'InputNode';\nvar InputNode$1 = memo(InputNode);\n\nconst OutputNode = ({ data, isConnectable, targetPosition = Position.Top }) => (jsxs(Fragment, { children: [jsx(Handle$1, { type: \"target\", position: targetPosition, isConnectable: isConnectable }), data?.label] }));\nOutputNode.displayName = 'OutputNode';\nvar OutputNode$1 = memo(OutputNode);\n\nconst GroupNode = () => null;\nGroupNode.displayName = 'GroupNode';\n\nconst selector$e = (s) => ({\n    selectedNodes: s.getNodes().filter((n) => n.selected),\n    selectedEdges: s.edges.filter((e) => e.selected),\n});\nconst selectId = (obj) => obj.id;\nfunction areEqual(a, b) {\n    return (shallow(a.selectedNodes.map(selectId), b.selectedNodes.map(selectId)) &&\n        shallow(a.selectedEdges.map(selectId), b.selectedEdges.map(selectId)));\n}\n// This is just a helper component for calling the onSelectionChange listener.\n// @TODO: Now that we have the onNodesChange and on EdgesChange listeners, do we still need this component?\nconst SelectionListener = memo(({ onSelectionChange }) => {\n    const store = useStoreApi();\n    const { selectedNodes, selectedEdges } = useStore(selector$e, areEqual);\n    useEffect(() => {\n        const params = { nodes: selectedNodes, edges: selectedEdges };\n        onSelectionChange?.(params);\n        store.getState().onSelectionChange?.(params);\n    }, [selectedNodes, selectedEdges, onSelectionChange]);\n    return null;\n});\nSelectionListener.displayName = 'SelectionListener';\nconst changeSelector = (s) => !!s.onSelectionChange;\nfunction Wrapper$1({ onSelectionChange }) {\n    const storeHasSelectionChange = useStore(changeSelector);\n    if (onSelectionChange || storeHasSelectionChange) {\n        return jsx(SelectionListener, { onSelectionChange: onSelectionChange });\n    }\n    return null;\n}\n\nconst selector$d = (s) => ({\n    setNodes: s.setNodes,\n    setEdges: s.setEdges,\n    setDefaultNodesAndEdges: s.setDefaultNodesAndEdges,\n    setMinZoom: s.setMinZoom,\n    setMaxZoom: s.setMaxZoom,\n    setTranslateExtent: s.setTranslateExtent,\n    setNodeExtent: s.setNodeExtent,\n    reset: s.reset,\n});\nfunction useStoreUpdater(value, setStoreState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setStoreState(value);\n        }\n    }, [value]);\n}\n// updates with values in store that don't have a dedicated setter function\nfunction useDirectStoreUpdater(key, value, setState) {\n    useEffect(() => {\n        if (typeof value !== 'undefined') {\n            setState({ [key]: value });\n        }\n    }, [value]);\n}\nconst StoreUpdater = ({ nodes, edges, defaultNodes, defaultEdges, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, nodesDraggable, nodesConnectable, nodesFocusable, edgesFocusable, edgesUpdatable, elevateNodesOnSelect, minZoom, maxZoom, nodeExtent, onNodesChange, onEdgesChange, elementsSelectable, connectionMode, snapGrid, snapToGrid, translateExtent, connectOnClick, defaultEdgeOptions, fitView, fitViewOptions, onNodesDelete, onEdgesDelete, onNodeDrag, onNodeDragStart, onNodeDragStop, onSelectionDrag, onSelectionDragStart, onSelectionDragStop, noPanClassName, nodeOrigin, rfId, autoPanOnConnect, autoPanOnNodeDrag, onError, connectionRadius, isValidConnection, }) => {\n    const { setNodes, setEdges, setDefaultNodesAndEdges, setMinZoom, setMaxZoom, setTranslateExtent, setNodeExtent, reset, } = useStore(selector$d, shallow);\n    const store = useStoreApi();\n    useEffect(() => {\n        const edgesWithDefaults = defaultEdges?.map((e) => ({ ...e, ...defaultEdgeOptions }));\n        setDefaultNodesAndEdges(defaultNodes, edgesWithDefaults);\n        return () => {\n            reset();\n        };\n    }, []);\n    useDirectStoreUpdater('defaultEdgeOptions', defaultEdgeOptions, store.setState);\n    useDirectStoreUpdater('connectionMode', connectionMode, store.setState);\n    useDirectStoreUpdater('onConnect', onConnect, store.setState);\n    useDirectStoreUpdater('onConnectStart', onConnectStart, store.setState);\n    useDirectStoreUpdater('onConnectEnd', onConnectEnd, store.setState);\n    useDirectStoreUpdater('onClickConnectStart', onClickConnectStart, store.setState);\n    useDirectStoreUpdater('onClickConnectEnd', onClickConnectEnd, store.setState);\n    useDirectStoreUpdater('nodesDraggable', nodesDraggable, store.setState);\n    useDirectStoreUpdater('nodesConnectable', nodesConnectable, store.setState);\n    useDirectStoreUpdater('nodesFocusable', nodesFocusable, store.setState);\n    useDirectStoreUpdater('edgesFocusable', edgesFocusable, store.setState);\n    useDirectStoreUpdater('edgesUpdatable', edgesUpdatable, store.setState);\n    useDirectStoreUpdater('elementsSelectable', elementsSelectable, store.setState);\n    useDirectStoreUpdater('elevateNodesOnSelect', elevateNodesOnSelect, store.setState);\n    useDirectStoreUpdater('snapToGrid', snapToGrid, store.setState);\n    useDirectStoreUpdater('snapGrid', snapGrid, store.setState);\n    useDirectStoreUpdater('onNodesChange', onNodesChange, store.setState);\n    useDirectStoreUpdater('onEdgesChange', onEdgesChange, store.setState);\n    useDirectStoreUpdater('connectOnClick', connectOnClick, store.setState);\n    useDirectStoreUpdater('fitViewOnInit', fitView, store.setState);\n    useDirectStoreUpdater('fitViewOnInitOptions', fitViewOptions, store.setState);\n    useDirectStoreUpdater('onNodesDelete', onNodesDelete, store.setState);\n    useDirectStoreUpdater('onEdgesDelete', onEdgesDelete, store.setState);\n    useDirectStoreUpdater('onNodeDrag', onNodeDrag, store.setState);\n    useDirectStoreUpdater('onNodeDragStart', onNodeDragStart, store.setState);\n    useDirectStoreUpdater('onNodeDragStop', onNodeDragStop, store.setState);\n    useDirectStoreUpdater('onSelectionDrag', onSelectionDrag, store.setState);\n    useDirectStoreUpdater('onSelectionDragStart', onSelectionDragStart, store.setState);\n    useDirectStoreUpdater('onSelectionDragStop', onSelectionDragStop, store.setState);\n    useDirectStoreUpdater('noPanClassName', noPanClassName, store.setState);\n    useDirectStoreUpdater('nodeOrigin', nodeOrigin, store.setState);\n    useDirectStoreUpdater('rfId', rfId, store.setState);\n    useDirectStoreUpdater('autoPanOnConnect', autoPanOnConnect, store.setState);\n    useDirectStoreUpdater('autoPanOnNodeDrag', autoPanOnNodeDrag, store.setState);\n    useDirectStoreUpdater('onError', onError, store.setState);\n    useDirectStoreUpdater('connectionRadius', connectionRadius, store.setState);\n    useDirectStoreUpdater('isValidConnection', isValidConnection, store.setState);\n    useStoreUpdater(nodes, setNodes);\n    useStoreUpdater(edges, setEdges);\n    useStoreUpdater(minZoom, setMinZoom);\n    useStoreUpdater(maxZoom, setMaxZoom);\n    useStoreUpdater(translateExtent, setTranslateExtent);\n    useStoreUpdater(nodeExtent, setNodeExtent);\n    return null;\n};\n\nconst style = { display: 'none' };\nconst ariaLiveStyle = {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    margin: -1,\n    border: 0,\n    padding: 0,\n    overflow: 'hidden',\n    clip: 'rect(0px, 0px, 0px, 0px)',\n    clipPath: 'inset(100%)',\n};\nconst ARIA_NODE_DESC_KEY = 'react-flow__node-desc';\nconst ARIA_EDGE_DESC_KEY = 'react-flow__edge-desc';\nconst ARIA_LIVE_MESSAGE = 'react-flow__aria-live';\nconst selector$c = (s) => s.ariaLiveMessage;\nfunction AriaLiveMessage({ rfId }) {\n    const ariaLiveMessage = useStore(selector$c);\n    return (jsx(\"div\", { id: `${ARIA_LIVE_MESSAGE}-${rfId}`, \"aria-live\": \"assertive\", \"aria-atomic\": \"true\", style: ariaLiveStyle, children: ariaLiveMessage }));\n}\nfunction A11yDescriptions({ rfId, disableKeyboardA11y }) {\n    return (jsxs(Fragment, { children: [jsxs(\"div\", { id: `${ARIA_NODE_DESC_KEY}-${rfId}`, style: style, children: [\"Press enter or space to select a node.\", !disableKeyboardA11y && 'You can then use the arrow keys to move the node around.', \" Press delete to remove it and escape to cancel.\", ' '] }), jsx(\"div\", { id: `${ARIA_EDGE_DESC_KEY}-${rfId}`, style: style, children: \"Press enter or space to select an edge. You can then press delete to remove it or escape to cancel.\" }), !disableKeyboardA11y && jsx(AriaLiveMessage, { rfId: rfId })] }));\n}\n\nconst doc = typeof document !== 'undefined' ? document : null;\n// the keycode can be a string 'a' or an array of strings ['a', 'a+d']\n// a string means a single key 'a' or a combination when '+' is used 'a+d'\n// an array means different possibilities. Explainer: ['a', 'd+s'] here the\n// user can use the single key 'a' or the combination 'd' + 's'\nvar useKeyPress = (keyCode = null, options = { target: doc }) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n    // we need to remember if a modifier key is pressed in order to track it\n    const modifierPressed = useRef(false);\n    // we need to remember the pressed keys in order to support combinations\n    const pressedKeys = useRef(new Set([]));\n    // keyCodes = array with single keys [['a']] or key combinations [['a', 's']]\n    // keysToWatch = array with all keys flattened ['a', 'd', 'ShiftLeft']\n    // used to check if we store event.code or event.key. When the code is in the list of keysToWatch\n    // we use the code otherwise the key. Explainer: When you press the left \"command\" key, the code is \"MetaLeft\"\n    // and the key is \"Meta\". We want users to be able to pass keys and codes so we assume that the key is meant when\n    // we can't find it in the list of keysToWatch.\n    const [keyCodes, keysToWatch] = useMemo(() => {\n        if (keyCode !== null) {\n            const keyCodeArr = Array.isArray(keyCode) ? keyCode : [keyCode];\n            const keys = keyCodeArr.filter((kc) => typeof kc === 'string').map((kc) => kc.split('+'));\n            const keysFlat = keys.reduce((res, item) => res.concat(...item), []);\n            return [keys, keysFlat];\n        }\n        return [[], []];\n    }, [keyCode]);\n    useEffect(() => {\n        if (keyCode !== null) {\n            const downHandler = (event) => {\n                modifierPressed.current = event.ctrlKey || event.metaKey || event.shiftKey;\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                pressedKeys.current.add(event[keyOrCode]);\n                if (isMatchingKey(keyCodes, pressedKeys.current, false)) {\n                    event.preventDefault();\n                    setKeyPressed(true);\n                }\n            };\n            const upHandler = (event) => {\n                if (!modifierPressed.current && isInputDOMNode(event)) {\n                    return false;\n                }\n                const keyOrCode = useKeyOrCode(event.code, keysToWatch);\n                if (isMatchingKey(keyCodes, pressedKeys.current, true)) {\n                    setKeyPressed(false);\n                    pressedKeys.current.clear();\n                }\n                else {\n                    pressedKeys.current.delete(event[keyOrCode]);\n                }\n                // fix for Mac: when cmd key is pressed, keyup is not triggered for any other key, see: https://stackoverflow.com/questions/27380018/when-cmd-key-is-kept-pressed-keyup-is-not-triggered-for-any-other-key\n                if (event.key === 'Meta') {\n                    pressedKeys.current.clear();\n                }\n                modifierPressed.current = false;\n            };\n            const resetHandler = () => {\n                pressedKeys.current.clear();\n                setKeyPressed(false);\n            };\n            options?.target?.addEventListener('keydown', downHandler);\n            options?.target?.addEventListener('keyup', upHandler);\n            window.addEventListener('blur', resetHandler);\n            return () => {\n                options?.target?.removeEventListener('keydown', downHandler);\n                options?.target?.removeEventListener('keyup', upHandler);\n                window.removeEventListener('blur', resetHandler);\n            };\n        }\n    }, [keyCode, setKeyPressed]);\n    return keyPressed;\n};\n// utils\nfunction isMatchingKey(keyCodes, pressedKeys, isUp) {\n    return (keyCodes\n        // we only want to compare same sizes of keyCode definitions\n        // and pressed keys. When the user specified 'Meta' as a key somewhere\n        // this would also be truthy without this filter when user presses 'Meta' + 'r'\n        .filter((keys) => isUp || keys.length === pressedKeys.size)\n        // since we want to support multiple possibilities only one of the\n        // combinations need to be part of the pressed keys\n        .some((keys) => keys.every((k) => pressedKeys.has(k))));\n}\nfunction useKeyOrCode(eventCode, keysToWatch) {\n    return keysToWatch.includes(eventCode) ? 'code' : 'key';\n}\n\nfunction calculateXYZPosition(node, nodeInternals, result, nodeOrigin) {\n    if (!node.parentNode) {\n        return result;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    const parentNodePosition = getNodePositionWithOrigin(parentNode, nodeOrigin);\n    return calculateXYZPosition(parentNode, nodeInternals, {\n        x: (result.x ?? 0) + parentNodePosition.x,\n        y: (result.y ?? 0) + parentNodePosition.y,\n        z: (parentNode[internalsSymbol]?.z ?? 0) > (result.z ?? 0) ? parentNode[internalsSymbol]?.z ?? 0 : result.z ?? 0,\n    }, nodeOrigin);\n}\nfunction updateAbsoluteNodePositions(nodeInternals, nodeOrigin, parentNodes) {\n    nodeInternals.forEach((node) => {\n        if (node.parentNode && !nodeInternals.has(node.parentNode)) {\n            throw new Error(`Parent node ${node.parentNode} not found`);\n        }\n        if (node.parentNode || parentNodes?.[node.id]) {\n            const { x, y, z } = calculateXYZPosition(node, nodeInternals, {\n                ...node.position,\n                z: node[internalsSymbol]?.z ?? 0,\n            }, nodeOrigin);\n            node.positionAbsolute = {\n                x,\n                y,\n            };\n            node[internalsSymbol].z = z;\n            if (parentNodes?.[node.id]) {\n                node[internalsSymbol].isParent = true;\n            }\n        }\n    });\n}\nfunction createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) {\n    const nextNodeInternals = new Map();\n    const parentNodes = {};\n    const selectedNodeZ = elevateNodesOnSelect ? 1000 : 0;\n    nodes.forEach((node) => {\n        const z = (isNumeric(node.zIndex) ? node.zIndex : 0) + (node.selected ? selectedNodeZ : 0);\n        const currInternals = nodeInternals.get(node.id);\n        const internals = {\n            width: currInternals?.width,\n            height: currInternals?.height,\n            ...node,\n            positionAbsolute: {\n                x: node.position.x,\n                y: node.position.y,\n            },\n        };\n        if (node.parentNode) {\n            internals.parentNode = node.parentNode;\n            parentNodes[node.parentNode] = true;\n        }\n        Object.defineProperty(internals, internalsSymbol, {\n            enumerable: false,\n            value: {\n                handleBounds: currInternals?.[internalsSymbol]?.handleBounds,\n                z,\n            },\n        });\n        nextNodeInternals.set(node.id, internals);\n    });\n    updateAbsoluteNodePositions(nextNodeInternals, nodeOrigin, parentNodes);\n    return nextNodeInternals;\n}\nfunction fitView(get, options = {}) {\n    const { getNodes, width, height, minZoom, maxZoom, d3Zoom, d3Selection, fitViewOnInitDone, fitViewOnInit, nodeOrigin, } = get();\n    const isInitialFitView = options.initial && !fitViewOnInitDone && fitViewOnInit;\n    const d3initialized = d3Zoom && d3Selection;\n    if (d3initialized && (isInitialFitView || !options.initial)) {\n        const nodes = getNodes().filter((n) => {\n            const isVisible = options.includeHiddenNodes ? n.width && n.height : !n.hidden;\n            if (options.nodes?.length) {\n                return isVisible && options.nodes.some((optionNode) => optionNode.id === n.id);\n            }\n            return isVisible;\n        });\n        const nodesInitialized = nodes.every((n) => n.width && n.height);\n        if (nodes.length > 0 && nodesInitialized) {\n            const bounds = getRectOfNodes(nodes, nodeOrigin);\n            const [x, y, zoom] = getTransformForBounds(bounds, width, height, options.minZoom ?? minZoom, options.maxZoom ?? maxZoom, options.padding ?? 0.1);\n            const nextTransform = zoomIdentity.translate(x, y).scale(zoom);\n            if (typeof options.duration === 'number' && options.duration > 0) {\n                d3Zoom.transform(getD3Transition(d3Selection, options.duration), nextTransform);\n            }\n            else {\n                d3Zoom.transform(d3Selection, nextTransform);\n            }\n            return true;\n        }\n    }\n    return false;\n}\nfunction handleControlledNodeSelectionChange(nodeChanges, nodeInternals) {\n    nodeChanges.forEach((change) => {\n        const node = nodeInternals.get(change.id);\n        if (node) {\n            nodeInternals.set(node.id, {\n                ...node,\n                [internalsSymbol]: node[internalsSymbol],\n                selected: change.selected,\n            });\n        }\n    });\n    return new Map(nodeInternals);\n}\nfunction handleControlledEdgeSelectionChange(edgeChanges, edges) {\n    return edges.map((e) => {\n        const change = edgeChanges.find((change) => change.id === e.id);\n        if (change) {\n            e.selected = change.selected;\n        }\n        return e;\n    });\n}\nfunction updateNodesAndEdgesSelections({ changedNodes, changedEdges, get, set }) {\n    const { nodeInternals, edges, onNodesChange, onEdgesChange, hasDefaultNodes, hasDefaultEdges } = get();\n    if (changedNodes?.length) {\n        if (hasDefaultNodes) {\n            set({ nodeInternals: handleControlledNodeSelectionChange(changedNodes, nodeInternals) });\n        }\n        onNodesChange?.(changedNodes);\n    }\n    if (changedEdges?.length) {\n        if (hasDefaultEdges) {\n            set({ edges: handleControlledEdgeSelectionChange(changedEdges, edges) });\n        }\n        onEdgesChange?.(changedEdges);\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => { };\nconst initialViewportHelper = {\n    zoomIn: noop,\n    zoomOut: noop,\n    zoomTo: noop,\n    getZoom: () => 1,\n    setViewport: noop,\n    getViewport: () => ({ x: 0, y: 0, zoom: 1 }),\n    fitView: () => false,\n    setCenter: noop,\n    fitBounds: noop,\n    project: (position) => position,\n    viewportInitialized: false,\n};\nconst selector$b = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n});\nconst useViewportHelper = () => {\n    const store = useStoreApi();\n    const { d3Zoom, d3Selection } = useStore(selector$b, shallow);\n    const viewportHelperFunctions = useMemo(() => {\n        if (d3Selection && d3Zoom) {\n            return {\n                zoomIn: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1.2),\n                zoomOut: (options) => d3Zoom.scaleBy(getD3Transition(d3Selection, options?.duration), 1 / 1.2),\n                zoomTo: (zoomLevel, options) => d3Zoom.scaleTo(getD3Transition(d3Selection, options?.duration), zoomLevel),\n                getZoom: () => store.getState().transform[2],\n                setViewport: (transform, options) => {\n                    const [x, y, zoom] = store.getState().transform;\n                    const nextTransform = zoomIdentity\n                        .translate(transform.x ?? x, transform.y ?? y)\n                        .scale(transform.zoom ?? zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), nextTransform);\n                },\n                getViewport: () => {\n                    const [x, y, zoom] = store.getState().transform;\n                    return { x, y, zoom };\n                },\n                fitView: (options) => fitView(store.getState, options),\n                setCenter: (x, y, options) => {\n                    const { width, height, maxZoom } = store.getState();\n                    const nextZoom = typeof options?.zoom !== 'undefined' ? options.zoom : maxZoom;\n                    const centerX = width / 2 - x * nextZoom;\n                    const centerY = height / 2 - y * nextZoom;\n                    const transform = zoomIdentity.translate(centerX, centerY).scale(nextZoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                fitBounds: (bounds, options) => {\n                    const { width, height, minZoom, maxZoom } = store.getState();\n                    const [x, y, zoom] = getTransformForBounds(bounds, width, height, minZoom, maxZoom, options?.padding ?? 0.1);\n                    const transform = zoomIdentity.translate(x, y).scale(zoom);\n                    d3Zoom.transform(getD3Transition(d3Selection, options?.duration), transform);\n                },\n                project: (position) => {\n                    const { transform, snapToGrid, snapGrid } = store.getState();\n                    return pointToRendererPoint(position, transform, snapToGrid, snapGrid);\n                },\n                viewportInitialized: true,\n            };\n        }\n        return initialViewportHelper;\n    }, [d3Zoom, d3Selection]);\n    return viewportHelperFunctions;\n};\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nfunction useReactFlow() {\n    const viewportHelper = useViewportHelper();\n    const store = useStoreApi();\n    const getNodes = useCallback(() => {\n        return store\n            .getState()\n            .getNodes()\n            .map((n) => ({ ...n }));\n    }, []);\n    const getNode = useCallback((id) => {\n        return store.getState().nodeInternals.get(id);\n    }, []);\n    const getEdges = useCallback(() => {\n        const { edges = [] } = store.getState();\n        return edges.map((e) => ({ ...e }));\n    }, []);\n    const getEdge = useCallback((id) => {\n        const { edges = [] } = store.getState();\n        return edges.find((e) => e.id === id);\n    }, []);\n    const setNodes = useCallback((payload) => {\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        const nodes = getNodes();\n        const nextNodes = typeof payload === 'function' ? payload(nodes) : payload;\n        if (hasDefaultNodes) {\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nextNodes.length === 0\n                ? nodes.map((node) => ({ type: 'remove', id: node.id }))\n                : nextNodes.map((node) => ({ item: node, type: 'reset' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const setEdges = useCallback((payload) => {\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        const nextEdges = typeof payload === 'function' ? payload(edges) : payload;\n        if (hasDefaultEdges) {\n            setEdges(nextEdges);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.length === 0\n                ? edges.map((edge) => ({ type: 'remove', id: edge.id }))\n                : nextEdges.map((edge) => ({ item: edge, type: 'reset' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const addNodes = useCallback((payload) => {\n        const nodes = Array.isArray(payload) ? payload : [payload];\n        const { getNodes, setNodes, hasDefaultNodes, onNodesChange } = store.getState();\n        if (hasDefaultNodes) {\n            const currentNodes = getNodes();\n            const nextNodes = [...currentNodes, ...nodes];\n            setNodes(nextNodes);\n        }\n        else if (onNodesChange) {\n            const changes = nodes.map((node) => ({ item: node, type: 'add' }));\n            onNodesChange(changes);\n        }\n    }, []);\n    const addEdges = useCallback((payload) => {\n        const nextEdges = Array.isArray(payload) ? payload : [payload];\n        const { edges = [], setEdges, hasDefaultEdges, onEdgesChange } = store.getState();\n        if (hasDefaultEdges) {\n            setEdges([...edges, ...nextEdges]);\n        }\n        else if (onEdgesChange) {\n            const changes = nextEdges.map((edge) => ({ item: edge, type: 'add' }));\n            onEdgesChange(changes);\n        }\n    }, []);\n    const toObject = useCallback(() => {\n        const { getNodes, edges = [], transform } = store.getState();\n        const [x, y, zoom] = transform;\n        return {\n            nodes: getNodes().map((n) => ({ ...n })),\n            edges: edges.map((e) => ({ ...e })),\n            viewport: {\n                x,\n                y,\n                zoom,\n            },\n        };\n    }, []);\n    const deleteElements = useCallback(({ nodes: nodesDeleted, edges: edgesDeleted }) => {\n        const { nodeInternals, getNodes, edges, hasDefaultNodes, hasDefaultEdges, onNodesDelete, onEdgesDelete, onNodesChange, onEdgesChange, } = store.getState();\n        const nodeIds = (nodesDeleted || []).map((node) => node.id);\n        const edgeIds = (edgesDeleted || []).map((edge) => edge.id);\n        const nodesToRemove = getNodes().reduce((res, node) => {\n            const parentHit = !nodeIds.includes(node.id) && node.parentNode && res.find((n) => n.id === node.parentNode);\n            const deletable = typeof node.deletable === 'boolean' ? node.deletable : true;\n            if (deletable && (nodeIds.includes(node.id) || parentHit)) {\n                res.push(node);\n            }\n            return res;\n        }, []);\n        const deletableEdges = edges.filter((e) => (typeof e.deletable === 'boolean' ? e.deletable : true));\n        const initialHitEdges = deletableEdges.filter((e) => edgeIds.includes(e.id));\n        if (nodesToRemove || initialHitEdges) {\n            const connectedEdges = getConnectedEdges(nodesToRemove, deletableEdges);\n            const edgesToRemove = [...initialHitEdges, ...connectedEdges];\n            const edgeIdsToRemove = edgesToRemove.reduce((res, edge) => {\n                if (!res.includes(edge.id)) {\n                    res.push(edge.id);\n                }\n                return res;\n            }, []);\n            if (hasDefaultEdges || hasDefaultNodes) {\n                if (hasDefaultEdges) {\n                    store.setState({\n                        edges: edges.filter((e) => !edgeIdsToRemove.includes(e.id)),\n                    });\n                }\n                if (hasDefaultNodes) {\n                    nodesToRemove.forEach((node) => {\n                        nodeInternals.delete(node.id);\n                    });\n                    store.setState({\n                        nodeInternals: new Map(nodeInternals),\n                    });\n                }\n            }\n            if (edgeIdsToRemove.length > 0) {\n                onEdgesDelete?.(edgesToRemove);\n                if (onEdgesChange) {\n                    onEdgesChange(edgeIdsToRemove.map((id) => ({\n                        id,\n                        type: 'remove',\n                    })));\n                }\n            }\n            if (nodesToRemove.length > 0) {\n                onNodesDelete?.(nodesToRemove);\n                if (onNodesChange) {\n                    const nodeChanges = nodesToRemove.map((n) => ({ id: n.id, type: 'remove' }));\n                    onNodesChange(nodeChanges);\n                }\n            }\n        }\n    }, []);\n    const getNodeRect = useCallback((nodeOrRect) => {\n        const isRect = isRectObject(nodeOrRect);\n        const node = isRect ? null : store.getState().nodeInternals.get(nodeOrRect.id);\n        const nodeRect = isRect ? nodeOrRect : nodeToRect(node);\n        return [nodeRect, node, isRect];\n    }, []);\n    const getIntersectingNodes = useCallback((nodeOrRect, partially = true, nodes) => {\n        const [nodeRect, node, isRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return [];\n        }\n        return (nodes || store.getState().getNodes()).filter((n) => {\n            if (!isRect && (n.id === node.id || !n.positionAbsolute)) {\n                return false;\n            }\n            const currNodeRect = nodeToRect(n);\n            const overlappingArea = getOverlappingArea(currNodeRect, nodeRect);\n            const partiallyVisible = partially && overlappingArea > 0;\n            return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n        });\n    }, []);\n    const isNodeIntersecting = useCallback((nodeOrRect, area, partially = true) => {\n        const [nodeRect] = getNodeRect(nodeOrRect);\n        if (!nodeRect) {\n            return false;\n        }\n        const overlappingArea = getOverlappingArea(nodeRect, area);\n        const partiallyVisible = partially && overlappingArea > 0;\n        return partiallyVisible || overlappingArea >= nodeOrRect.width * nodeOrRect.height;\n    }, []);\n    return useMemo(() => {\n        return {\n            ...viewportHelper,\n            getNodes,\n            getNode,\n            getEdges,\n            getEdge,\n            setNodes,\n            setEdges,\n            addNodes,\n            addEdges,\n            toObject,\n            deleteElements,\n            getIntersectingNodes,\n            isNodeIntersecting,\n        };\n    }, [\n        viewportHelper,\n        getNodes,\n        getNode,\n        getEdges,\n        getEdge,\n        setNodes,\n        setEdges,\n        addNodes,\n        addEdges,\n        toObject,\n        deleteElements,\n        getIntersectingNodes,\n        isNodeIntersecting,\n    ]);\n}\n\nvar useGlobalKeyHandler = ({ deleteKeyCode, multiSelectionKeyCode }) => {\n    const store = useStoreApi();\n    const { deleteElements } = useReactFlow();\n    const deleteKeyPressed = useKeyPress(deleteKeyCode);\n    const multiSelectionKeyPressed = useKeyPress(multiSelectionKeyCode);\n    useEffect(() => {\n        if (deleteKeyPressed) {\n            const { edges, getNodes } = store.getState();\n            const selectedNodes = getNodes().filter((node) => node.selected);\n            const selectedEdges = edges.filter((edge) => edge.selected);\n            deleteElements({ nodes: selectedNodes, edges: selectedEdges });\n            store.setState({ nodesSelectionActive: false });\n        }\n    }, [deleteKeyPressed]);\n    useEffect(() => {\n        store.setState({ multiSelectionActive: multiSelectionKeyPressed });\n    }, [multiSelectionKeyPressed]);\n};\n\nfunction useResizeHandler(rendererNode) {\n    const store = useStoreApi();\n    useEffect(() => {\n        let resizeObserver;\n        const updateDimensions = () => {\n            if (!rendererNode.current) {\n                return;\n            }\n            const size = getDimensions(rendererNode.current);\n            if (size.height === 0 || size.width === 0) {\n                store.getState().onError?.('004', errorMessages['error004']());\n            }\n            store.setState({ width: size.width || 500, height: size.height || 500 });\n        };\n        updateDimensions();\n        window.addEventListener('resize', updateDimensions);\n        if (rendererNode.current) {\n            resizeObserver = new ResizeObserver(() => updateDimensions());\n            resizeObserver.observe(rendererNode.current);\n        }\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n            if (resizeObserver && rendererNode.current) {\n                resizeObserver.unobserve(rendererNode.current);\n            }\n        };\n    }, []);\n}\n\nconst containerStyle = {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n};\n\nconst viewChanged = (prevViewport, eventTransform) => prevViewport.x !== eventTransform.x || prevViewport.y !== eventTransform.y || prevViewport.zoom !== eventTransform.k;\nconst eventToFlowTransform = (eventTransform) => ({\n    x: eventTransform.x,\n    y: eventTransform.y,\n    zoom: eventTransform.k,\n});\nconst isWrappedWithClass = (event, className) => event.target.closest(`.${className}`);\nconst isRightClickPan = (panOnDrag, usedButton) => usedButton === 2 && Array.isArray(panOnDrag) && panOnDrag.includes(2);\nconst wheelDelta = (event) => {\n    const factor = event.ctrlKey && isMacOs() ? 10 : 1;\n    return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * factor;\n};\nconst selector$a = (s) => ({\n    d3Zoom: s.d3Zoom,\n    d3Selection: s.d3Selection,\n    d3ZoomHandler: s.d3ZoomHandler,\n    userSelectionActive: s.userSelectionActive,\n});\nconst ZoomPane = ({ onMove, onMoveStart, onMoveEnd, onPaneContextMenu, zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, elementsSelectable, panOnDrag = true, defaultViewport, translateExtent, minZoom, maxZoom, zoomActivationKeyCode, preventScrolling = true, children, noWheelClassName, noPanClassName, }) => {\n    const timerId = useRef();\n    const store = useStoreApi();\n    const isZoomingOrPanning = useRef(false);\n    const zoomedWithRightMouseButton = useRef(false);\n    const zoomPane = useRef(null);\n    const prevTransform = useRef({ x: 0, y: 0, zoom: 0 });\n    const { d3Zoom, d3Selection, d3ZoomHandler, userSelectionActive } = useStore(selector$a, shallow);\n    const zoomActivationKeyPressed = useKeyPress(zoomActivationKeyCode);\n    const mouseButton = useRef(0);\n    const isPanScrolling = useRef(false);\n    const panScrollTimeout = useRef();\n    useResizeHandler(zoomPane);\n    useEffect(() => {\n        if (zoomPane.current) {\n            const bbox = zoomPane.current.getBoundingClientRect();\n            const d3ZoomInstance = zoom().scaleExtent([minZoom, maxZoom]).translateExtent(translateExtent);\n            const selection = select(zoomPane.current).call(d3ZoomInstance);\n            const updatedTransform = zoomIdentity\n                .translate(defaultViewport.x, defaultViewport.y)\n                .scale(clamp(defaultViewport.zoom, minZoom, maxZoom));\n            const extent = [\n                [0, 0],\n                [bbox.width, bbox.height],\n            ];\n            const constrainedTransform = d3ZoomInstance.constrain()(updatedTransform, extent, translateExtent);\n            d3ZoomInstance.transform(selection, constrainedTransform);\n            d3ZoomInstance.wheelDelta(wheelDelta);\n            store.setState({\n                d3Zoom: d3ZoomInstance,\n                d3Selection: selection,\n                d3ZoomHandler: selection.on('wheel.zoom'),\n                // we need to pass transform because zoom handler is not registered when we set the initial transform\n                transform: [constrainedTransform.x, constrainedTransform.y, constrainedTransform.k],\n                domNode: zoomPane.current.closest('.react-flow'),\n            });\n        }\n    }, []);\n    useEffect(() => {\n        if (d3Selection && d3Zoom) {\n            if (panOnScroll && !zoomActivationKeyPressed && !userSelectionActive) {\n                d3Selection.on('wheel.zoom', (event) => {\n                    if (isWrappedWithClass(event, noWheelClassName)) {\n                        return false;\n                    }\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n                    const currentZoom = d3Selection.property('__zoom').k || 1;\n                    const _isMacOs = isMacOs();\n                    // macos sets ctrlKey=true for pinch gesture on a trackpad\n                    if (event.ctrlKey && zoomOnPinch && _isMacOs) {\n                        const point = pointer(event);\n                        const pinchDelta = wheelDelta(event);\n                        const zoom = currentZoom * Math.pow(2, pinchDelta);\n                        // @ts-ignore\n                        d3Zoom.scaleTo(d3Selection, zoom, point, event);\n                        return;\n                    }\n                    // increase scroll speed in firefox\n                    // firefox: deltaMode === 1; chrome: deltaMode === 0\n                    const deltaNormalize = event.deltaMode === 1 ? 20 : 1;\n                    let deltaX = panOnScrollMode === PanOnScrollMode.Vertical ? 0 : event.deltaX * deltaNormalize;\n                    let deltaY = panOnScrollMode === PanOnScrollMode.Horizontal ? 0 : event.deltaY * deltaNormalize;\n                    // this enables vertical scrolling with shift + scroll on windows\n                    if (!_isMacOs && event.shiftKey && panOnScrollMode !== PanOnScrollMode.Vertical) {\n                        deltaX = event.deltaY * deltaNormalize;\n                        deltaY = 0;\n                    }\n                    d3Zoom.translateBy(d3Selection, -(deltaX / currentZoom) * panOnScrollSpeed, -(deltaY / currentZoom) * panOnScrollSpeed, \n                    // @ts-ignore\n                    { internal: true });\n                    const nextViewport = eventToFlowTransform(d3Selection.property('__zoom'));\n                    const { onViewportChangeStart, onViewportChange, onViewportChangeEnd } = store.getState();\n                    clearTimeout(panScrollTimeout.current);\n                    // for pan on scroll we need to handle the event calls on our own\n                    // we can't use the start, zoom and end events from d3-zoom\n                    // because start and move gets called on every scroll event and not once at the beginning\n                    if (!isPanScrolling.current) {\n                        isPanScrolling.current = true;\n                        onMoveStart?.(event, nextViewport);\n                        onViewportChangeStart?.(nextViewport);\n                    }\n                    if (isPanScrolling.current) {\n                        onMove?.(event, nextViewport);\n                        onViewportChange?.(nextViewport);\n                        panScrollTimeout.current = setTimeout(() => {\n                            onMoveEnd?.(event, nextViewport);\n                            onViewportChangeEnd?.(nextViewport);\n                            isPanScrolling.current = false;\n                        }, 150);\n                    }\n                }, { passive: false });\n            }\n            else if (typeof d3ZoomHandler !== 'undefined') {\n                d3Selection.on('wheel.zoom', function (event, d) {\n                    if (!preventScrolling || isWrappedWithClass(event, noWheelClassName)) {\n                        return null;\n                    }\n                    event.preventDefault();\n                    d3ZoomHandler.call(this, event, d);\n                }, { passive: false });\n            }\n        }\n    }, [\n        userSelectionActive,\n        panOnScroll,\n        panOnScrollMode,\n        d3Selection,\n        d3Zoom,\n        d3ZoomHandler,\n        zoomActivationKeyPressed,\n        zoomOnPinch,\n        preventScrolling,\n        noWheelClassName,\n        onMoveStart,\n        onMove,\n        onMoveEnd,\n    ]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('start', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                // we need to remember it here, because it's always 0 in the \"zoom\" event\n                mouseButton.current = event.sourceEvent?.button;\n                const { onViewportChangeStart } = store.getState();\n                const flowTransform = eventToFlowTransform(event.transform);\n                isZoomingOrPanning.current = true;\n                prevTransform.current = flowTransform;\n                if (event.sourceEvent?.type === 'mousedown') {\n                    store.setState({ paneDragging: true });\n                }\n                onViewportChangeStart?.(flowTransform);\n                onMoveStart?.(event.sourceEvent, flowTransform);\n            });\n        }\n    }, [d3Zoom, onMoveStart]);\n    useEffect(() => {\n        if (d3Zoom) {\n            if (userSelectionActive && !isZoomingOrPanning.current) {\n                d3Zoom.on('zoom', null);\n            }\n            else if (!userSelectionActive) {\n                d3Zoom.on('zoom', (event) => {\n                    const { onViewportChange } = store.getState();\n                    store.setState({ transform: [event.transform.x, event.transform.y, event.transform.k] });\n                    zoomedWithRightMouseButton.current = !!(onPaneContextMenu && isRightClickPan(panOnDrag, mouseButton.current ?? 0));\n                    if ((onMove || onViewportChange) && !event.sourceEvent?.internal) {\n                        const flowTransform = eventToFlowTransform(event.transform);\n                        onViewportChange?.(flowTransform);\n                        onMove?.(event.sourceEvent, flowTransform);\n                    }\n                });\n            }\n        }\n    }, [userSelectionActive, d3Zoom, onMove, panOnDrag, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.on('end', (event) => {\n                if (!event.sourceEvent || event.sourceEvent.internal) {\n                    return null;\n                }\n                const { onViewportChangeEnd } = store.getState();\n                isZoomingOrPanning.current = false;\n                store.setState({ paneDragging: false });\n                if (onPaneContextMenu &&\n                    isRightClickPan(panOnDrag, mouseButton.current ?? 0) &&\n                    !zoomedWithRightMouseButton.current) {\n                    onPaneContextMenu(event.sourceEvent);\n                }\n                zoomedWithRightMouseButton.current = false;\n                if ((onMoveEnd || onViewportChangeEnd) && viewChanged(prevTransform.current, event.transform)) {\n                    const flowTransform = eventToFlowTransform(event.transform);\n                    prevTransform.current = flowTransform;\n                    clearTimeout(timerId.current);\n                    timerId.current = setTimeout(() => {\n                        onViewportChangeEnd?.(flowTransform);\n                        onMoveEnd?.(event.sourceEvent, flowTransform);\n                    }, panOnScroll ? 150 : 0);\n                }\n            });\n        }\n    }, [d3Zoom, panOnScroll, panOnDrag, onMoveEnd, onPaneContextMenu]);\n    useEffect(() => {\n        if (d3Zoom) {\n            d3Zoom.filter((event) => {\n                const zoomScroll = zoomActivationKeyPressed || zoomOnScroll;\n                const pinchZoom = zoomOnPinch && event.ctrlKey;\n                if (event.button === 1 &&\n                    event.type === 'mousedown' &&\n                    (isWrappedWithClass(event, 'react-flow__node') || isWrappedWithClass(event, 'react-flow__edge'))) {\n                    return true;\n                }\n                // if all interactions are disabled, we prevent all zoom events\n                if (!panOnDrag && !zoomScroll && !panOnScroll && !zoomOnDoubleClick && !zoomOnPinch) {\n                    return false;\n                }\n                // during a selection we prevent all other interactions\n                if (userSelectionActive) {\n                    return false;\n                }\n                // if zoom on double click is disabled, we prevent the double click event\n                if (!zoomOnDoubleClick && event.type === 'dblclick') {\n                    return false;\n                }\n                // if the target element is inside an element with the nowheel class, we prevent zooming\n                if (isWrappedWithClass(event, noWheelClassName) && event.type === 'wheel') {\n                    return false;\n                }\n                // if the target element is inside an element with the nopan class, we prevent panning\n                if (isWrappedWithClass(event, noPanClassName) && event.type !== 'wheel') {\n                    return false;\n                }\n                if (!zoomOnPinch && event.ctrlKey && event.type === 'wheel') {\n                    return false;\n                }\n                // when there is no scroll handling enabled, we prevent all wheel events\n                if (!zoomScroll && !panOnScroll && !pinchZoom && event.type === 'wheel') {\n                    return false;\n                }\n                // if the pane is not movable, we prevent dragging it with mousestart or touchstart\n                if (!panOnDrag && (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // if the pane is only movable using allowed clicks\n                if (Array.isArray(panOnDrag) &&\n                    !panOnDrag.includes(event.button) &&\n                    (event.type === 'mousedown' || event.type === 'touchstart')) {\n                    return false;\n                }\n                // We only allow right clicks if pan on drag is set to right click\n                const buttonAllowed = (Array.isArray(panOnDrag) && panOnDrag.includes(event.button)) || !event.button || event.button <= 1;\n                // default filter for d3-zoom\n                return (!event.ctrlKey || event.type === 'wheel') && buttonAllowed;\n            });\n        }\n    }, [\n        userSelectionActive,\n        d3Zoom,\n        zoomOnScroll,\n        zoomOnPinch,\n        panOnScroll,\n        zoomOnDoubleClick,\n        panOnDrag,\n        elementsSelectable,\n        zoomActivationKeyPressed,\n    ]);\n    return (jsx(\"div\", { className: \"react-flow__renderer\", ref: zoomPane, style: containerStyle, children: children }));\n};\n\nconst selector$9 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    userSelectionRect: s.userSelectionRect,\n});\nfunction UserSelection() {\n    const { userSelectionActive, userSelectionRect } = useStore(selector$9, shallow);\n    const isActive = userSelectionActive && userSelectionRect;\n    if (!isActive) {\n        return null;\n    }\n    return (jsx(\"div\", { className: \"react-flow__selection react-flow__container\", style: {\n            width: userSelectionRect.width,\n            height: userSelectionRect.height,\n            transform: `translate(${userSelectionRect.x}px, ${userSelectionRect.y}px)`,\n        } }));\n}\n\nfunction handleParentExpand(res, updateItem) {\n    const parent = res.find((e) => e.id === updateItem.parentNode);\n    if (parent) {\n        const extendWidth = updateItem.position.x + updateItem.width - parent.width;\n        const extendHeight = updateItem.position.y + updateItem.height - parent.height;\n        if (extendWidth > 0 || extendHeight > 0 || updateItem.position.x < 0 || updateItem.position.y < 0) {\n            parent.style = { ...parent.style } || {};\n            parent.style.width = parent.style.width ?? parent.width;\n            parent.style.height = parent.style.height ?? parent.height;\n            if (extendWidth > 0) {\n                parent.style.width += extendWidth;\n            }\n            if (extendHeight > 0) {\n                parent.style.height += extendHeight;\n            }\n            if (updateItem.position.x < 0) {\n                const xDiff = Math.abs(updateItem.position.x);\n                parent.position.x = parent.position.x - xDiff;\n                parent.style.width += xDiff;\n                updateItem.position.x = 0;\n            }\n            if (updateItem.position.y < 0) {\n                const yDiff = Math.abs(updateItem.position.y);\n                parent.position.y = parent.position.y - yDiff;\n                parent.style.height += yDiff;\n                updateItem.position.y = 0;\n            }\n            parent.width = parent.style.width;\n            parent.height = parent.style.height;\n        }\n    }\n}\nfunction applyChanges(changes, elements) {\n    // we need this hack to handle the setNodes and setEdges function of the useReactFlow hook for controlled flows\n    if (changes.some((c) => c.type === 'reset')) {\n        return changes.filter((c) => c.type === 'reset').map((c) => c.item);\n    }\n    const initElements = changes.filter((c) => c.type === 'add').map((c) => c.item);\n    return elements.reduce((res, item) => {\n        const currentChanges = changes.filter((c) => c.id === item.id);\n        if (currentChanges.length === 0) {\n            res.push(item);\n            return res;\n        }\n        const updateItem = { ...item };\n        for (const currentChange of currentChanges) {\n            if (currentChange) {\n                switch (currentChange.type) {\n                    case 'select': {\n                        updateItem.selected = currentChange.selected;\n                        break;\n                    }\n                    case 'position': {\n                        if (typeof currentChange.position !== 'undefined') {\n                            updateItem.position = currentChange.position;\n                        }\n                        if (typeof currentChange.positionAbsolute !== 'undefined') {\n                            updateItem.positionAbsolute = currentChange.positionAbsolute;\n                        }\n                        if (typeof currentChange.dragging !== 'undefined') {\n                            updateItem.dragging = currentChange.dragging;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'dimensions': {\n                        if (typeof currentChange.dimensions !== 'undefined') {\n                            updateItem.width = currentChange.dimensions.width;\n                            updateItem.height = currentChange.dimensions.height;\n                        }\n                        if (typeof currentChange.updateStyle !== 'undefined') {\n                            updateItem.style = { ...(updateItem.style || {}), ...currentChange.dimensions };\n                        }\n                        if (typeof currentChange.resizing === 'boolean') {\n                            updateItem.resizing = currentChange.resizing;\n                        }\n                        if (updateItem.expandParent) {\n                            handleParentExpand(res, updateItem);\n                        }\n                        break;\n                    }\n                    case 'remove': {\n                        return res;\n                    }\n                }\n            }\n        }\n        res.push(updateItem);\n        return res;\n    }, initElements);\n}\nfunction applyNodeChanges(changes, nodes) {\n    return applyChanges(changes, nodes);\n}\nfunction applyEdgeChanges(changes, edges) {\n    return applyChanges(changes, edges);\n}\nconst createSelectionChange = (id, selected) => ({\n    id,\n    type: 'select',\n    selected,\n});\nfunction getSelectionChanges(items, selectedIds) {\n    return items.reduce((res, item) => {\n        const willBeSelected = selectedIds.includes(item.id);\n        if (!item.selected && willBeSelected) {\n            item.selected = true;\n            res.push(createSelectionChange(item.id, true));\n        }\n        else if (item.selected && !willBeSelected) {\n            item.selected = false;\n            res.push(createSelectionChange(item.id, false));\n        }\n        return res;\n    }, []);\n}\n\nconst wrapHandler = (handler, containerRef) => {\n    return (event) => {\n        if (event.target !== containerRef.current) {\n            return;\n        }\n        handler?.(event);\n    };\n};\nconst selector$8 = (s) => ({\n    userSelectionActive: s.userSelectionActive,\n    elementsSelectable: s.elementsSelectable,\n    dragging: s.paneDragging,\n});\nconst Pane = memo(({ isSelecting, selectionMode = SelectionMode.Full, panOnDrag, onSelectionStart, onSelectionEnd, onPaneClick, onPaneContextMenu, onPaneScroll, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, children, }) => {\n    const container = useRef(null);\n    const store = useStoreApi();\n    const prevSelectedNodesCount = useRef(0);\n    const prevSelectedEdgesCount = useRef(0);\n    const containerBounds = useRef();\n    const { userSelectionActive, elementsSelectable, dragging } = useStore(selector$8, shallow);\n    const resetUserSelection = () => {\n        store.setState({ userSelectionActive: false, userSelectionRect: null });\n        prevSelectedNodesCount.current = 0;\n        prevSelectedEdgesCount.current = 0;\n    };\n    const onClick = (event) => {\n        onPaneClick?.(event);\n        store.getState().resetSelectedElements();\n        store.setState({ nodesSelectionActive: false });\n    };\n    const onContextMenu = (event) => {\n        if (Array.isArray(panOnDrag) && panOnDrag?.includes(2)) {\n            event.preventDefault();\n            return;\n        }\n        onPaneContextMenu?.(event);\n    };\n    const onWheel = onPaneScroll ? (event) => onPaneScroll(event) : undefined;\n    const onMouseDown = (event) => {\n        const { resetSelectedElements, domNode } = store.getState();\n        containerBounds.current = domNode?.getBoundingClientRect();\n        if (!elementsSelectable ||\n            !isSelecting ||\n            event.button !== 0 ||\n            event.target !== container.current ||\n            !containerBounds.current) {\n            return;\n        }\n        const { x, y } = getEventPosition(event, containerBounds.current);\n        resetSelectedElements();\n        store.setState({\n            userSelectionRect: {\n                width: 0,\n                height: 0,\n                startX: x,\n                startY: y,\n                x,\n                y,\n            },\n        });\n        onSelectionStart?.(event);\n    };\n    const onMouseMove = (event) => {\n        const { userSelectionRect, nodeInternals, edges, transform, onNodesChange, onEdgesChange, nodeOrigin, getNodes } = store.getState();\n        if (!isSelecting || !containerBounds.current || !userSelectionRect) {\n            return;\n        }\n        store.setState({ userSelectionActive: true, nodesSelectionActive: false });\n        const mousePos = getEventPosition(event, containerBounds.current);\n        const startX = userSelectionRect.startX ?? 0;\n        const startY = userSelectionRect.startY ?? 0;\n        const nextUserSelectRect = {\n            ...userSelectionRect,\n            x: mousePos.x < startX ? mousePos.x : startX,\n            y: mousePos.y < startY ? mousePos.y : startY,\n            width: Math.abs(mousePos.x - startX),\n            height: Math.abs(mousePos.y - startY),\n        };\n        const nodes = getNodes();\n        const selectedNodes = getNodesInside(nodeInternals, nextUserSelectRect, transform, selectionMode === SelectionMode.Partial, true, nodeOrigin);\n        const selectedEdgeIds = getConnectedEdges(selectedNodes, edges).map((e) => e.id);\n        const selectedNodeIds = selectedNodes.map((n) => n.id);\n        if (prevSelectedNodesCount.current !== selectedNodeIds.length) {\n            prevSelectedNodesCount.current = selectedNodeIds.length;\n            const changes = getSelectionChanges(nodes, selectedNodeIds);\n            if (changes.length) {\n                onNodesChange?.(changes);\n            }\n        }\n        if (prevSelectedEdgesCount.current !== selectedEdgeIds.length) {\n            prevSelectedEdgesCount.current = selectedEdgeIds.length;\n            const changes = getSelectionChanges(edges, selectedEdgeIds);\n            if (changes.length) {\n                onEdgesChange?.(changes);\n            }\n        }\n        store.setState({\n            userSelectionRect: nextUserSelectRect,\n        });\n    };\n    const onMouseUp = (event) => {\n        if (event.button !== 0) {\n            return;\n        }\n        const { userSelectionRect } = store.getState();\n        // We only want to trigger click functions when in selection mode if\n        // the user did not move the mouse.\n        if (!userSelectionActive && userSelectionRect && event.target === container.current) {\n            onClick?.(event);\n        }\n        store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n        resetUserSelection();\n        onSelectionEnd?.(event);\n    };\n    const onMouseLeave = (event) => {\n        if (userSelectionActive) {\n            store.setState({ nodesSelectionActive: prevSelectedNodesCount.current > 0 });\n            onSelectionEnd?.(event);\n        }\n        resetUserSelection();\n    };\n    const hasActiveSelection = elementsSelectable && (isSelecting || userSelectionActive);\n    return (jsxs(\"div\", { className: cc(['react-flow__pane', { dragging, selection: isSelecting }]), onClick: hasActiveSelection ? undefined : wrapHandler(onClick, container), onContextMenu: wrapHandler(onContextMenu, container), onWheel: wrapHandler(onWheel, container), onMouseEnter: hasActiveSelection ? undefined : onPaneMouseEnter, onMouseDown: hasActiveSelection ? onMouseDown : undefined, onMouseMove: hasActiveSelection ? onMouseMove : onPaneMouseMove, onMouseUp: hasActiveSelection ? onMouseUp : undefined, onMouseLeave: hasActiveSelection ? onMouseLeave : onPaneMouseLeave, ref: container, style: containerStyle, children: [children, jsx(UserSelection, {})] }));\n});\nPane.displayName = 'Pane';\n\nfunction isParentSelected(node, nodeInternals) {\n    if (!node.parentNode) {\n        return false;\n    }\n    const parentNode = nodeInternals.get(node.parentNode);\n    if (!parentNode) {\n        return false;\n    }\n    if (parentNode.selected) {\n        return true;\n    }\n    return isParentSelected(parentNode, nodeInternals);\n}\nfunction hasSelector(target, selector, nodeRef) {\n    let current = target;\n    do {\n        if (current?.matches(selector))\n            return true;\n        if (current === nodeRef.current)\n            return false;\n        current = current.parentElement;\n    } while (current);\n    return false;\n}\n// looks for all selected nodes and created a NodeDragItem for each of them\nfunction getDragItems(nodeInternals, nodesDraggable, mousePos, nodeId) {\n    return Array.from(nodeInternals.values())\n        .filter((n) => (n.selected || n.id === nodeId) &&\n        (!n.parentNode || !isParentSelected(n, nodeInternals)) &&\n        (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')))\n        .map((n) => ({\n        id: n.id,\n        position: n.position || { x: 0, y: 0 },\n        positionAbsolute: n.positionAbsolute || { x: 0, y: 0 },\n        distance: {\n            x: mousePos.x - (n.positionAbsolute?.x ?? 0),\n            y: mousePos.y - (n.positionAbsolute?.y ?? 0),\n        },\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        extent: n.extent,\n        parentNode: n.parentNode,\n        width: n.width,\n        height: n.height,\n    }));\n}\nfunction clampNodeExtent(node, extent) {\n    if (!extent || extent === 'parent') {\n        return extent;\n    }\n    return [extent[0], [extent[1][0] - (node.width || 0), extent[1][1] - (node.height || 0)]];\n}\nfunction calcNextPosition(node, nextPosition, nodeInternals, nodeExtent, nodeOrigin = [0, 0], onError) {\n    const clampedNodeExtent = clampNodeExtent(node, node.extent || nodeExtent);\n    let currentExtent = clampedNodeExtent;\n    if (node.extent === 'parent') {\n        if (node.parentNode && node.width && node.height) {\n            const parent = nodeInternals.get(node.parentNode);\n            const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n            currentExtent =\n                parent && isNumeric(parentX) && isNumeric(parentY) && isNumeric(parent.width) && isNumeric(parent.height)\n                    ? [\n                        [parentX + node.width * nodeOrigin[0], parentY + node.height * nodeOrigin[1]],\n                        [\n                            parentX + parent.width - node.width + node.width * nodeOrigin[0],\n                            parentY + parent.height - node.height + node.height * nodeOrigin[1],\n                        ],\n                    ]\n                    : currentExtent;\n        }\n        else {\n            onError?.('005', errorMessages['error005']());\n            currentExtent = clampedNodeExtent;\n        }\n    }\n    else if (node.extent && node.parentNode) {\n        const parent = nodeInternals.get(node.parentNode);\n        const { x: parentX, y: parentY } = getNodePositionWithOrigin(parent, nodeOrigin).positionAbsolute;\n        currentExtent = [\n            [node.extent[0][0] + parentX, node.extent[0][1] + parentY],\n            [node.extent[1][0] + parentX, node.extent[1][1] + parentY],\n        ];\n    }\n    let parentPosition = { x: 0, y: 0 };\n    if (node.parentNode) {\n        const parentNode = nodeInternals.get(node.parentNode);\n        parentPosition = getNodePositionWithOrigin(parentNode, nodeOrigin).positionAbsolute;\n    }\n    const positionAbsolute = currentExtent && currentExtent !== 'parent'\n        ? clampPosition(nextPosition, currentExtent)\n        : nextPosition;\n    return {\n        position: {\n            x: positionAbsolute.x - parentPosition.x,\n            y: positionAbsolute.y - parentPosition.y,\n        },\n        positionAbsolute,\n    };\n}\n// returns two params:\n// 1. the dragged node (or the first of the list, if we are dragging a node selection)\n// 2. array of selected nodes (for multi selections)\nfunction getEventHandlerParams({ nodeId, dragItems, nodeInternals, }) {\n    const extentedDragItems = dragItems.map((n) => {\n        const node = nodeInternals.get(n.id);\n        return {\n            ...node,\n            position: n.position,\n            positionAbsolute: n.positionAbsolute,\n        };\n    });\n    return [nodeId ? extentedDragItems.find((n) => n.id === nodeId) : extentedDragItems[0], extentedDragItems];\n}\n\nconst getHandleBounds = (selector, nodeElement, zoom, nodeOrigin) => {\n    const handles = nodeElement.querySelectorAll(selector);\n    if (!handles || !handles.length) {\n        return null;\n    }\n    const handlesArray = Array.from(handles);\n    const nodeBounds = nodeElement.getBoundingClientRect();\n    const nodeOffset = {\n        x: nodeBounds.width * nodeOrigin[0],\n        y: nodeBounds.height * nodeOrigin[1],\n    };\n    return handlesArray.map((handle) => {\n        const handleBounds = handle.getBoundingClientRect();\n        return {\n            id: handle.getAttribute('data-handleid'),\n            position: handle.getAttribute('data-handlepos'),\n            x: (handleBounds.left - nodeBounds.left - nodeOffset.x) / zoom,\n            y: (handleBounds.top - nodeBounds.top - nodeOffset.y) / zoom,\n            ...getDimensions(handle),\n        };\n    });\n};\nfunction getMouseHandler(id, getState, handler) {\n    return handler === undefined\n        ? handler\n        : (event) => {\n            const node = getState().nodeInternals.get(id);\n            if (node) {\n                handler(event, { ...node });\n            }\n        };\n}\n// this handler is called by\n// 1. the click handler when node is not draggable or selectNodesOnDrag = false\n// or\n// 2. the on drag start handler when node is draggable and selectNodesOnDrag = true\nfunction handleNodeClick({ id, store, unselect = false, nodeRef, }) {\n    const { addSelectedNodes, unselectNodesAndEdges, multiSelectionActive, nodeInternals, onError } = store.getState();\n    const node = nodeInternals.get(id);\n    if (!node) {\n        onError?.('012', errorMessages['error012'](id));\n        return;\n    }\n    store.setState({ nodesSelectionActive: false });\n    if (!node.selected) {\n        addSelectedNodes([id]);\n    }\n    else if (unselect || (node.selected && multiSelectionActive)) {\n        unselectNodesAndEdges({ nodes: [node] });\n        requestAnimationFrame(() => nodeRef?.current?.blur());\n    }\n}\n\nfunction useGetPointerPosition() {\n    const store = useStoreApi();\n    // returns the pointer position projected to the RF coordinate system\n    const getPointerPosition = useCallback(({ sourceEvent }) => {\n        const { transform, snapGrid, snapToGrid } = store.getState();\n        const x = sourceEvent.touches ? sourceEvent.touches[0].clientX : sourceEvent.clientX;\n        const y = sourceEvent.touches ? sourceEvent.touches[0].clientY : sourceEvent.clientY;\n        const pointerPos = {\n            x: (x - transform[0]) / transform[2],\n            y: (y - transform[1]) / transform[2],\n        };\n        // we need the snapped position in order to be able to skip unnecessary drag events\n        return {\n            xSnapped: snapToGrid ? snapGrid[0] * Math.round(pointerPos.x / snapGrid[0]) : pointerPos.x,\n            ySnapped: snapToGrid ? snapGrid[1] * Math.round(pointerPos.y / snapGrid[1]) : pointerPos.y,\n            ...pointerPos,\n        };\n    }, []);\n    return getPointerPosition;\n}\n\nfunction wrapSelectionDragFunc(selectionFunc) {\n    return (event, _, nodes) => selectionFunc?.(event, nodes);\n}\nfunction useDrag({ nodeRef, disabled = false, noDragClassName, handleSelector, nodeId, isSelectable, selectNodesOnDrag, }) {\n    const store = useStoreApi();\n    const [dragging, setDragging] = useState(false);\n    const dragItems = useRef([]);\n    const lastPos = useRef({ x: null, y: null });\n    const autoPanId = useRef(0);\n    const containerBounds = useRef(null);\n    const mousePosition = useRef({ x: 0, y: 0 });\n    const dragEvent = useRef(null);\n    const autoPanStarted = useRef(false);\n    const getPointerPosition = useGetPointerPosition();\n    useEffect(() => {\n        if (nodeRef?.current) {\n            const selection = select(nodeRef.current);\n            const updateNodes = ({ x, y }) => {\n                const { nodeInternals, onNodeDrag, onSelectionDrag, updateNodePositions, nodeExtent, snapGrid, snapToGrid, nodeOrigin, onError, } = store.getState();\n                lastPos.current = { x, y };\n                let hasChange = false;\n                let nodesBox = { x: 0, y: 0, x2: 0, y2: 0 };\n                if (dragItems.current.length > 1 && nodeExtent) {\n                    const rect = getRectOfNodes(dragItems.current, nodeOrigin);\n                    nodesBox = rectToBox(rect);\n                }\n                dragItems.current = dragItems.current.map((n) => {\n                    const nextPosition = { x: x - n.distance.x, y: y - n.distance.y };\n                    if (snapToGrid) {\n                        nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                        nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                    }\n                    // if there is selection with multiple nodes and a node extent is set, we need to adjust the node extent for each node\n                    // based on its position so that the node stays at it's position relative to the selection.\n                    const adjustedNodeExtent = [\n                        [nodeExtent[0][0], nodeExtent[0][1]],\n                        [nodeExtent[1][0], nodeExtent[1][1]],\n                    ];\n                    if (dragItems.current.length > 1 && nodeExtent && !n.extent) {\n                        adjustedNodeExtent[0][0] = n.positionAbsolute.x - nodesBox.x + nodeExtent[0][0];\n                        adjustedNodeExtent[1][0] = n.positionAbsolute.x + (n.width ?? 0) - nodesBox.x2 + nodeExtent[1][0];\n                        adjustedNodeExtent[0][1] = n.positionAbsolute.y - nodesBox.y + nodeExtent[0][1];\n                        adjustedNodeExtent[1][1] = n.positionAbsolute.y + (n.height ?? 0) - nodesBox.y2 + nodeExtent[1][1];\n                    }\n                    const updatedPos = calcNextPosition(n, nextPosition, nodeInternals, adjustedNodeExtent, nodeOrigin, onError);\n                    // we want to make sure that we only fire a change event when there is a change\n                    hasChange = hasChange || n.position.x !== updatedPos.position.x || n.position.y !== updatedPos.position.y;\n                    n.position = updatedPos.position;\n                    n.positionAbsolute = updatedPos.positionAbsolute;\n                    return n;\n                });\n                if (!hasChange) {\n                    return;\n                }\n                updateNodePositions(dragItems.current, true, true);\n                setDragging(true);\n                const onDrag = nodeId ? onNodeDrag : wrapSelectionDragFunc(onSelectionDrag);\n                if (onDrag && dragEvent.current) {\n                    const [currentNode, nodes] = getEventHandlerParams({\n                        nodeId,\n                        dragItems: dragItems.current,\n                        nodeInternals,\n                    });\n                    onDrag(dragEvent.current, currentNode, nodes);\n                }\n            };\n            const autoPan = () => {\n                if (!containerBounds.current) {\n                    return;\n                }\n                const [xMovement, yMovement] = calcAutoPan(mousePosition.current, containerBounds.current);\n                if (xMovement !== 0 || yMovement !== 0) {\n                    const { transform, panBy } = store.getState();\n                    lastPos.current.x = (lastPos.current.x ?? 0) - xMovement / transform[2];\n                    lastPos.current.y = (lastPos.current.y ?? 0) - yMovement / transform[2];\n                    if (panBy({ x: xMovement, y: yMovement })) {\n                        updateNodes(lastPos.current);\n                    }\n                }\n                autoPanId.current = requestAnimationFrame(autoPan);\n            };\n            if (disabled) {\n                selection.on('.drag', null);\n            }\n            else {\n                const dragHandler = drag()\n                    .on('start', (event) => {\n                    const { nodeInternals, multiSelectionActive, domNode, nodesDraggable, unselectNodesAndEdges, onNodeDragStart, onSelectionDragStart, } = store.getState();\n                    const onStart = nodeId ? onNodeDragStart : wrapSelectionDragFunc(onSelectionDragStart);\n                    if (!selectNodesOnDrag && !multiSelectionActive && nodeId) {\n                        if (!nodeInternals.get(nodeId)?.selected) {\n                            // we need to reset selected nodes when selectNodesOnDrag=false\n                            unselectNodesAndEdges();\n                        }\n                    }\n                    if (nodeId && isSelectable && selectNodesOnDrag) {\n                        handleNodeClick({\n                            id: nodeId,\n                            store,\n                            nodeRef: nodeRef,\n                        });\n                    }\n                    const pointerPos = getPointerPosition(event);\n                    lastPos.current = pointerPos;\n                    dragItems.current = getDragItems(nodeInternals, nodesDraggable, pointerPos, nodeId);\n                    if (onStart && dragItems.current) {\n                        const [currentNode, nodes] = getEventHandlerParams({\n                            nodeId,\n                            dragItems: dragItems.current,\n                            nodeInternals,\n                        });\n                        onStart(event.sourceEvent, currentNode, nodes);\n                    }\n                    containerBounds.current = domNode?.getBoundingClientRect() || null;\n                    mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                })\n                    .on('drag', (event) => {\n                    const pointerPos = getPointerPosition(event);\n                    const { autoPanOnNodeDrag } = store.getState();\n                    if (!autoPanStarted.current && autoPanOnNodeDrag) {\n                        autoPanStarted.current = true;\n                        autoPan();\n                    }\n                    // skip events without movement\n                    if ((lastPos.current.x !== pointerPos.xSnapped || lastPos.current.y !== pointerPos.ySnapped) &&\n                        dragItems.current) {\n                        dragEvent.current = event.sourceEvent;\n                        mousePosition.current = getEventPosition(event.sourceEvent, containerBounds.current);\n                        updateNodes(pointerPos);\n                    }\n                })\n                    .on('end', (event) => {\n                    setDragging(false);\n                    autoPanStarted.current = false;\n                    cancelAnimationFrame(autoPanId.current);\n                    if (dragItems.current) {\n                        const { updateNodePositions, nodeInternals, onNodeDragStop, onSelectionDragStop } = store.getState();\n                        const onStop = nodeId ? onNodeDragStop : wrapSelectionDragFunc(onSelectionDragStop);\n                        updateNodePositions(dragItems.current, false, false);\n                        if (onStop) {\n                            const [currentNode, nodes] = getEventHandlerParams({\n                                nodeId,\n                                dragItems: dragItems.current,\n                                nodeInternals,\n                            });\n                            onStop(event.sourceEvent, currentNode, nodes);\n                        }\n                    }\n                })\n                    .filter((event) => {\n                    const target = event.target;\n                    const isDraggable = !event.button &&\n                        (!noDragClassName || !hasSelector(target, `.${noDragClassName}`, nodeRef)) &&\n                        (!handleSelector || hasSelector(target, handleSelector, nodeRef));\n                    return isDraggable;\n                });\n                selection.call(dragHandler);\n                return () => {\n                    selection.on('.drag', null);\n                };\n            }\n        }\n    }, [\n        nodeRef,\n        disabled,\n        noDragClassName,\n        handleSelector,\n        isSelectable,\n        store,\n        nodeId,\n        selectNodesOnDrag,\n        getPointerPosition,\n    ]);\n    return dragging;\n}\n\nfunction useUpdateNodePositions() {\n    const store = useStoreApi();\n    const updatePositions = useCallback((params) => {\n        const { nodeInternals, nodeExtent, updateNodePositions, getNodes, snapToGrid, snapGrid, onError, nodesDraggable } = store.getState();\n        const selectedNodes = getNodes().filter((n) => n.selected && (n.draggable || (nodesDraggable && typeof n.draggable === 'undefined')));\n        // by default a node moves 5px on each key press, or 20px if shift is pressed\n        // if snap grid is enabled, we use that for the velocity.\n        const xVelo = snapToGrid ? snapGrid[0] : 5;\n        const yVelo = snapToGrid ? snapGrid[1] : 5;\n        const factor = params.isShiftPressed ? 4 : 1;\n        const positionDiffX = params.x * xVelo * factor;\n        const positionDiffY = params.y * yVelo * factor;\n        const nodeUpdates = selectedNodes.map((n) => {\n            if (n.positionAbsolute) {\n                const nextPosition = { x: n.positionAbsolute.x + positionDiffX, y: n.positionAbsolute.y + positionDiffY };\n                if (snapToGrid) {\n                    nextPosition.x = snapGrid[0] * Math.round(nextPosition.x / snapGrid[0]);\n                    nextPosition.y = snapGrid[1] * Math.round(nextPosition.y / snapGrid[1]);\n                }\n                const { positionAbsolute, position } = calcNextPosition(n, nextPosition, nodeInternals, nodeExtent, undefined, onError);\n                n.position = position;\n                n.positionAbsolute = positionAbsolute;\n            }\n            return n;\n        });\n        updateNodePositions(nodeUpdates, true, false);\n    }, []);\n    return updatePositions;\n}\n\nconst arrowKeyDiffs = {\n    ArrowUp: { x: 0, y: -1 },\n    ArrowDown: { x: 0, y: 1 },\n    ArrowLeft: { x: -1, y: 0 },\n    ArrowRight: { x: 1, y: 0 },\n};\nvar wrapNode = (NodeComponent) => {\n    const NodeWrapper = ({ id, type, data, xPos, yPos, xPosOrigin, yPosOrigin, selected, onClick, onMouseEnter, onMouseMove, onMouseLeave, onContextMenu, onDoubleClick, style, className, isDraggable, isSelectable, isConnectable, isFocusable, selectNodesOnDrag, sourcePosition, targetPosition, hidden, resizeObserver, dragHandle, zIndex, isParent, noDragClassName, noPanClassName, initialized, disableKeyboardA11y, ariaLabel, rfId, }) => {\n        const store = useStoreApi();\n        const nodeRef = useRef(null);\n        const prevSourcePosition = useRef(sourcePosition);\n        const prevTargetPosition = useRef(targetPosition);\n        const prevType = useRef(type);\n        const hasPointerEvents = isSelectable || isDraggable || onClick || onMouseEnter || onMouseMove || onMouseLeave;\n        const updatePositions = useUpdateNodePositions();\n        const onMouseEnterHandler = getMouseHandler(id, store.getState, onMouseEnter);\n        const onMouseMoveHandler = getMouseHandler(id, store.getState, onMouseMove);\n        const onMouseLeaveHandler = getMouseHandler(id, store.getState, onMouseLeave);\n        const onContextMenuHandler = getMouseHandler(id, store.getState, onContextMenu);\n        const onDoubleClickHandler = getMouseHandler(id, store.getState, onDoubleClick);\n        const onSelectNodeHandler = (event) => {\n            if (isSelectable && (!selectNodesOnDrag || !isDraggable)) {\n                // this handler gets called within the drag start event when selectNodesOnDrag=true\n                handleNodeClick({\n                    id,\n                    store,\n                    nodeRef,\n                });\n            }\n            if (onClick) {\n                const node = store.getState().nodeInternals.get(id);\n                if (node) {\n                    onClick(event, { ...node });\n                }\n            }\n        };\n        const onKeyDown = (event) => {\n            if (isInputDOMNode(event)) {\n                return;\n            }\n            if (elementSelectionKeys.includes(event.key) && isSelectable) {\n                const unselect = event.key === 'Escape';\n                handleNodeClick({\n                    id,\n                    store,\n                    unselect,\n                    nodeRef,\n                });\n            }\n            else if (!disableKeyboardA11y &&\n                isDraggable &&\n                selected &&\n                Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n                store.setState({\n                    ariaLiveMessage: `Moved selected node ${event.key\n                        .replace('Arrow', '')\n                        .toLowerCase()}. New position, x: ${~~xPos}, y: ${~~yPos}`,\n                });\n                updatePositions({\n                    x: arrowKeyDiffs[event.key].x,\n                    y: arrowKeyDiffs[event.key].y,\n                    isShiftPressed: event.shiftKey,\n                });\n            }\n        };\n        useEffect(() => {\n            if (nodeRef.current && !hidden) {\n                const currNode = nodeRef.current;\n                resizeObserver?.observe(currNode);\n                return () => resizeObserver?.unobserve(currNode);\n            }\n        }, [hidden]);\n        useEffect(() => {\n            // when the user programmatically changes the source or handle position, we re-initialize the node\n            const typeChanged = prevType.current !== type;\n            const sourcePosChanged = prevSourcePosition.current !== sourcePosition;\n            const targetPosChanged = prevTargetPosition.current !== targetPosition;\n            if (nodeRef.current && (typeChanged || sourcePosChanged || targetPosChanged)) {\n                if (typeChanged) {\n                    prevType.current = type;\n                }\n                if (sourcePosChanged) {\n                    prevSourcePosition.current = sourcePosition;\n                }\n                if (targetPosChanged) {\n                    prevTargetPosition.current = targetPosition;\n                }\n                store.getState().updateNodeDimensions([{ id, nodeElement: nodeRef.current, forceUpdate: true }]);\n            }\n        }, [id, type, sourcePosition, targetPosition]);\n        const dragging = useDrag({\n            nodeRef,\n            disabled: hidden || !isDraggable,\n            noDragClassName,\n            handleSelector: dragHandle,\n            nodeId: id,\n            isSelectable,\n            selectNodesOnDrag,\n        });\n        if (hidden) {\n            return null;\n        }\n        return (jsx(\"div\", { className: cc([\n                'react-flow__node',\n                `react-flow__node-${type}`,\n                {\n                    // this is overwritable by passing `nopan` as a class name\n                    [noPanClassName]: isDraggable,\n                },\n                className,\n                {\n                    selected,\n                    selectable: isSelectable,\n                    parent: isParent,\n                    dragging,\n                },\n            ]), ref: nodeRef, style: {\n                zIndex,\n                transform: `translate(${xPosOrigin}px,${yPosOrigin}px)`,\n                pointerEvents: hasPointerEvents ? 'all' : 'none',\n                visibility: initialized ? 'visible' : 'hidden',\n                ...style,\n            }, \"data-id\": id, \"data-testid\": `rf__node-${id}`, onMouseEnter: onMouseEnterHandler, onMouseMove: onMouseMoveHandler, onMouseLeave: onMouseLeaveHandler, onContextMenu: onContextMenuHandler, onClick: onSelectNodeHandler, onDoubleClick: onDoubleClickHandler, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : undefined, \"aria-describedby\": disableKeyboardA11y ? undefined : `${ARIA_NODE_DESC_KEY}-${rfId}`, \"aria-label\": ariaLabel, children: jsx(Provider, { value: id, children: jsx(NodeComponent, { id: id, data: data, type: type, xPos: xPos, yPos: yPos, selected: selected, isConnectable: isConnectable, sourcePosition: sourcePosition, targetPosition: targetPosition, dragging: dragging, dragHandle: dragHandle, zIndex: zIndex }) }) }));\n    };\n    NodeWrapper.displayName = 'NodeWrapper';\n    return memo(NodeWrapper);\n};\n\nconst selector$7 = (s) => {\n    const selectedNodes = s.getNodes().filter((n) => n.selected);\n    return {\n        ...getRectOfNodes(selectedNodes, s.nodeOrigin),\n        transformString: `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`,\n        userSelectionActive: s.userSelectionActive,\n    };\n};\nfunction NodesSelection({ onSelectionContextMenu, noPanClassName, disableKeyboardA11y }) {\n    const store = useStoreApi();\n    const { width, height, x: left, y: top, transformString, userSelectionActive } = useStore(selector$7, shallow);\n    const updatePositions = useUpdateNodePositions();\n    const nodeRef = useRef(null);\n    useEffect(() => {\n        if (!disableKeyboardA11y) {\n            nodeRef.current?.focus({\n                preventScroll: true,\n            });\n        }\n    }, [disableKeyboardA11y]);\n    useDrag({\n        nodeRef,\n    });\n    if (userSelectionActive || !width || !height) {\n        return null;\n    }\n    const onContextMenu = onSelectionContextMenu\n        ? (event) => {\n            const selectedNodes = store\n                .getState()\n                .getNodes()\n                .filter((n) => n.selected);\n            onSelectionContextMenu(event, selectedNodes);\n        }\n        : undefined;\n    const onKeyDown = (event) => {\n        if (Object.prototype.hasOwnProperty.call(arrowKeyDiffs, event.key)) {\n            updatePositions({\n                x: arrowKeyDiffs[event.key].x,\n                y: arrowKeyDiffs[event.key].y,\n                isShiftPressed: event.shiftKey,\n            });\n        }\n    };\n    return (jsx(\"div\", { className: cc(['react-flow__nodesselection', 'react-flow__container', noPanClassName]), style: {\n            transform: transformString,\n        }, children: jsx(\"div\", { ref: nodeRef, className: \"react-flow__nodesselection-rect\", onContextMenu: onContextMenu, tabIndex: disableKeyboardA11y ? undefined : -1, onKeyDown: disableKeyboardA11y ? undefined : onKeyDown, style: {\n                width,\n                height,\n                top,\n                left,\n            } }) }));\n}\nvar NodesSelection$1 = memo(NodesSelection);\n\nconst selector$6 = (s) => s.nodesSelectionActive;\nconst FlowRenderer = ({ children, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneContextMenu, onPaneScroll, deleteKeyCode, onMove, onMoveStart, onMoveEnd, selectionKeyCode, selectionOnDrag, selectionMode, onSelectionStart, onSelectionEnd, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, elementsSelectable, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag: _panOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, onSelectionContextMenu, noWheelClassName, noPanClassName, disableKeyboardA11y, }) => {\n    const nodesSelectionActive = useStore(selector$6);\n    const selectionKeyPressed = useKeyPress(selectionKeyCode);\n    const panActivationKeyPressed = useKeyPress(panActivationKeyCode);\n    const panOnDrag = panActivationKeyPressed || _panOnDrag;\n    const isSelecting = selectionKeyPressed || (selectionOnDrag && panOnDrag !== true);\n    useGlobalKeyHandler({ deleteKeyCode, multiSelectionKeyCode });\n    return (jsx(ZoomPane, { onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onPaneContextMenu: onPaneContextMenu, elementsSelectable: elementsSelectable, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, zoomOnDoubleClick: zoomOnDoubleClick, panOnDrag: !selectionKeyPressed && panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, zoomActivationKeyCode: zoomActivationKeyCode, preventScrolling: preventScrolling, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, children: jsxs(Pane, { onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, panOnDrag: panOnDrag, isSelecting: !!isSelecting, selectionMode: selectionMode, children: [children, nodesSelectionActive && (jsx(NodesSelection$1, { onSelectionContextMenu: onSelectionContextMenu, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y }))] }) }));\n};\nFlowRenderer.displayName = 'FlowRenderer';\nvar FlowRenderer$1 = memo(FlowRenderer);\n\nfunction useVisibleNodes(onlyRenderVisible) {\n    const nodes = useStore(useCallback((s) => onlyRenderVisible\n        ? getNodesInside(s.nodeInternals, { x: 0, y: 0, width: s.width, height: s.height }, s.transform, true)\n        : s.getNodes(), [onlyRenderVisible]));\n    return nodes;\n}\n\nfunction createNodeTypes(nodeTypes) {\n    const standardTypes = {\n        input: wrapNode((nodeTypes.input || InputNode$1)),\n        default: wrapNode((nodeTypes.default || DefaultNode$1)),\n        output: wrapNode((nodeTypes.output || OutputNode$1)),\n        group: wrapNode((nodeTypes.group || GroupNode)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(nodeTypes)\n        .filter((k) => !['input', 'default', 'output', 'group'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapNode((nodeTypes[key] || DefaultNode$1));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nconst getPositionWithOrigin = ({ x, y, width, height, origin, }) => {\n    if (!width || !height) {\n        return { x, y };\n    }\n    if (origin[0] < 0 || origin[1] < 0 || origin[0] > 1 || origin[1] > 1) {\n        return { x, y };\n    }\n    return {\n        x: x - width * origin[0],\n        y: y - height * origin[1],\n    };\n};\n\nconst selector$5 = (s) => ({\n    nodesDraggable: s.nodesDraggable,\n    nodesConnectable: s.nodesConnectable,\n    nodesFocusable: s.nodesFocusable,\n    elementsSelectable: s.elementsSelectable,\n    updateNodeDimensions: s.updateNodeDimensions,\n    onError: s.onError,\n});\nconst NodeRenderer = (props) => {\n    const { nodesDraggable, nodesConnectable, nodesFocusable, elementsSelectable, updateNodeDimensions, onError } = useStore(selector$5, shallow);\n    const nodes = useVisibleNodes(props.onlyRenderVisibleElements);\n    const resizeObserverRef = useRef();\n    const resizeObserver = useMemo(() => {\n        if (typeof ResizeObserver === 'undefined') {\n            return null;\n        }\n        const observer = new ResizeObserver((entries) => {\n            const updates = entries.map((entry) => ({\n                id: entry.target.getAttribute('data-id'),\n                nodeElement: entry.target,\n                forceUpdate: true,\n            }));\n            updateNodeDimensions(updates);\n        });\n        resizeObserverRef.current = observer;\n        return observer;\n    }, []);\n    useEffect(() => {\n        return () => {\n            resizeObserverRef?.current?.disconnect();\n        };\n    }, []);\n    return (jsx(\"div\", { className: \"react-flow__nodes\", style: containerStyle, children: nodes.map((node) => {\n            let nodeType = node.type || 'default';\n            if (!props.nodeTypes[nodeType]) {\n                onError?.('003', errorMessages['error003'](nodeType));\n                nodeType = 'default';\n            }\n            const NodeComponent = (props.nodeTypes[nodeType] || props.nodeTypes.default);\n            const isDraggable = !!(node.draggable || (nodesDraggable && typeof node.draggable === 'undefined'));\n            const isSelectable = !!(node.selectable || (elementsSelectable && typeof node.selectable === 'undefined'));\n            const isConnectable = !!(node.connectable || (nodesConnectable && typeof node.connectable === 'undefined'));\n            const isFocusable = !!(node.focusable || (nodesFocusable && typeof node.focusable === 'undefined'));\n            const clampedPosition = props.nodeExtent\n                ? clampPosition(node.positionAbsolute, props.nodeExtent)\n                : node.positionAbsolute;\n            const posX = clampedPosition?.x ?? 0;\n            const posY = clampedPosition?.y ?? 0;\n            const posOrigin = getPositionWithOrigin({\n                x: posX,\n                y: posY,\n                width: node.width ?? 0,\n                height: node.height ?? 0,\n                origin: props.nodeOrigin,\n            });\n            return (jsx(NodeComponent, { id: node.id, className: node.className, style: node.style, type: nodeType, data: node.data, sourcePosition: node.sourcePosition || Position.Bottom, targetPosition: node.targetPosition || Position.Top, hidden: node.hidden, xPos: posX, yPos: posY, xPosOrigin: posOrigin.x, yPosOrigin: posOrigin.y, selectNodesOnDrag: props.selectNodesOnDrag, onClick: props.onNodeClick, onMouseEnter: props.onNodeMouseEnter, onMouseMove: props.onNodeMouseMove, onMouseLeave: props.onNodeMouseLeave, onContextMenu: props.onNodeContextMenu, onDoubleClick: props.onNodeDoubleClick, selected: !!node.selected, isDraggable: isDraggable, isSelectable: isSelectable, isConnectable: isConnectable, isFocusable: isFocusable, resizeObserver: resizeObserver, dragHandle: node.dragHandle, zIndex: node[internalsSymbol]?.z ?? 0, isParent: !!node[internalsSymbol]?.isParent, noDragClassName: props.noDragClassName, noPanClassName: props.noPanClassName, initialized: !!node.width && !!node.height, rfId: props.rfId, disableKeyboardA11y: props.disableKeyboardA11y, ariaLabel: node.ariaLabel }, node.id));\n        }) }));\n};\nNodeRenderer.displayName = 'NodeRenderer';\nvar NodeRenderer$1 = memo(NodeRenderer);\n\nconst shiftX = (x, shift, position) => {\n    if (position === Position.Left)\n        return x - shift;\n    if (position === Position.Right)\n        return x + shift;\n    return x;\n};\nconst shiftY = (y, shift, position) => {\n    if (position === Position.Top)\n        return y - shift;\n    if (position === Position.Bottom)\n        return y + shift;\n    return y;\n};\nconst EdgeUpdaterClassName = 'react-flow__edgeupdater';\nconst EdgeAnchor = ({ position, centerX, centerY, radius = 10, onMouseDown, onMouseEnter, onMouseOut, type, }) => (jsx(\"circle\", { onMouseDown: onMouseDown, onMouseEnter: onMouseEnter, onMouseOut: onMouseOut, className: cc([EdgeUpdaterClassName, `${EdgeUpdaterClassName}-${type}`]), cx: shiftX(centerX, radius, position), cy: shiftY(centerY, radius, position), r: radius, stroke: \"transparent\", fill: \"transparent\" }));\n\nconst alwaysValidConnection = () => true;\nvar wrapEdge = (EdgeComponent) => {\n    const EdgeWrapper = ({ id, className, type, data, onClick, onEdgeDoubleClick, selected, animated, label, labelStyle, labelShowBg, labelBgStyle, labelBgPadding, labelBgBorderRadius, style, source, target, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, elementsSelectable, hidden, sourceHandleId, targetHandleId, onContextMenu, onMouseEnter, onMouseMove, onMouseLeave, edgeUpdaterRadius, onEdgeUpdate, onEdgeUpdateStart, onEdgeUpdateEnd, markerEnd, markerStart, rfId, ariaLabel, isFocusable, isUpdatable, pathOptions, interactionWidth, }) => {\n        const edgeRef = useRef(null);\n        const [updateHover, setUpdateHover] = useState(false);\n        const [updating, setUpdating] = useState(false);\n        const store = useStoreApi();\n        const markerStartUrl = useMemo(() => `url(#${getMarkerId(markerStart, rfId)})`, [markerStart, rfId]);\n        const markerEndUrl = useMemo(() => `url(#${getMarkerId(markerEnd, rfId)})`, [markerEnd, rfId]);\n        if (hidden) {\n            return null;\n        }\n        const onEdgeClick = (event) => {\n            const { edges, addSelectedEdges } = store.getState();\n            if (elementsSelectable) {\n                store.setState({ nodesSelectionActive: false });\n                addSelectedEdges([id]);\n            }\n            if (onClick) {\n                const edge = edges.find((e) => e.id === id);\n                onClick(event, edge);\n            }\n        };\n        const onEdgeDoubleClickHandler = getMouseHandler$1(id, store.getState, onEdgeDoubleClick);\n        const onEdgeContextMenu = getMouseHandler$1(id, store.getState, onContextMenu);\n        const onEdgeMouseEnter = getMouseHandler$1(id, store.getState, onMouseEnter);\n        const onEdgeMouseMove = getMouseHandler$1(id, store.getState, onMouseMove);\n        const onEdgeMouseLeave = getMouseHandler$1(id, store.getState, onMouseLeave);\n        const handleEdgeUpdater = (event, isSourceHandle) => {\n            // avoid triggering edge updater if mouse btn is not left\n            if (event.button !== 0) {\n                return;\n            }\n            const { edges, isValidConnection: isValidConnectionStore } = store.getState();\n            const nodeId = isSourceHandle ? target : source;\n            const handleId = (isSourceHandle ? targetHandleId : sourceHandleId) || null;\n            const handleType = isSourceHandle ? 'target' : 'source';\n            const isValidConnection = isValidConnectionStore || alwaysValidConnection;\n            const isTarget = isSourceHandle;\n            const edge = edges.find((e) => e.id === id);\n            setUpdating(true);\n            onEdgeUpdateStart?.(event, edge, handleType);\n            const _onEdgeUpdateEnd = (evt) => {\n                setUpdating(false);\n                onEdgeUpdateEnd?.(evt, edge, handleType);\n            };\n            const onConnectEdge = (connection) => onEdgeUpdate?.(edge, connection);\n            handlePointerDown({\n                event,\n                handleId,\n                nodeId,\n                onConnect: onConnectEdge,\n                isTarget,\n                getState: store.getState,\n                setState: store.setState,\n                isValidConnection,\n                edgeUpdaterType: handleType,\n                onEdgeUpdateEnd: _onEdgeUpdateEnd,\n            });\n        };\n        const onEdgeUpdaterSourceMouseDown = (event) => handleEdgeUpdater(event, true);\n        const onEdgeUpdaterTargetMouseDown = (event) => handleEdgeUpdater(event, false);\n        const onEdgeUpdaterMouseEnter = () => setUpdateHover(true);\n        const onEdgeUpdaterMouseOut = () => setUpdateHover(false);\n        const inactive = !elementsSelectable && !onClick;\n        const onKeyDown = (event) => {\n            if (elementSelectionKeys.includes(event.key) && elementsSelectable) {\n                const { unselectNodesAndEdges, addSelectedEdges, edges } = store.getState();\n                const unselect = event.key === 'Escape';\n                if (unselect) {\n                    edgeRef.current?.blur();\n                    unselectNodesAndEdges({ edges: [edges.find((e) => e.id === id)] });\n                }\n                else {\n                    addSelectedEdges([id]);\n                }\n            }\n        };\n        return (jsxs(\"g\", { className: cc([\n                'react-flow__edge',\n                `react-flow__edge-${type}`,\n                className,\n                { selected, animated, inactive, updating: updateHover },\n            ]), onClick: onEdgeClick, onDoubleClick: onEdgeDoubleClickHandler, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onKeyDown: isFocusable ? onKeyDown : undefined, tabIndex: isFocusable ? 0 : undefined, role: isFocusable ? 'button' : 'img', \"data-testid\": `rf__edge-${id}`, \"aria-label\": ariaLabel === null ? undefined : ariaLabel ? ariaLabel : `Edge from ${source} to ${target}`, \"aria-describedby\": isFocusable ? `${ARIA_EDGE_DESC_KEY}-${rfId}` : undefined, ref: edgeRef, children: [!updating && (jsx(EdgeComponent, { id: id, source: source, target: target, selected: selected, animated: animated, label: label, labelStyle: labelStyle, labelShowBg: labelShowBg, labelBgStyle: labelBgStyle, labelBgPadding: labelBgPadding, labelBgBorderRadius: labelBgBorderRadius, data: data, style: style, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, sourceHandleId: sourceHandleId, targetHandleId: targetHandleId, markerStart: markerStartUrl, markerEnd: markerEndUrl, pathOptions: pathOptions, interactionWidth: interactionWidth })), isUpdatable && (jsxs(Fragment, { children: [(isUpdatable === 'source' || isUpdatable === true) && (jsx(EdgeAnchor, { position: sourcePosition, centerX: sourceX, centerY: sourceY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterSourceMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"source\" })), (isUpdatable === 'target' || isUpdatable === true) && (jsx(EdgeAnchor, { position: targetPosition, centerX: targetX, centerY: targetY, radius: edgeUpdaterRadius, onMouseDown: onEdgeUpdaterTargetMouseDown, onMouseEnter: onEdgeUpdaterMouseEnter, onMouseOut: onEdgeUpdaterMouseOut, type: \"target\" }))] }))] }));\n    };\n    EdgeWrapper.displayName = 'EdgeWrapper';\n    return memo(EdgeWrapper);\n};\n\nfunction createEdgeTypes(edgeTypes) {\n    const standardTypes = {\n        default: wrapEdge((edgeTypes.default || BezierEdge)),\n        straight: wrapEdge((edgeTypes.bezier || StraightEdge)),\n        step: wrapEdge((edgeTypes.step || StepEdge)),\n        smoothstep: wrapEdge((edgeTypes.step || SmoothStepEdge)),\n        simplebezier: wrapEdge((edgeTypes.simplebezier || SimpleBezierEdge)),\n    };\n    const wrappedTypes = {};\n    const specialTypes = Object.keys(edgeTypes)\n        .filter((k) => !['default', 'bezier'].includes(k))\n        .reduce((res, key) => {\n        res[key] = wrapEdge((edgeTypes[key] || BezierEdge));\n        return res;\n    }, wrappedTypes);\n    return {\n        ...standardTypes,\n        ...specialTypes,\n    };\n}\nfunction getHandlePosition(position, nodeRect, handle = null) {\n    const x = (handle?.x || 0) + nodeRect.x;\n    const y = (handle?.y || 0) + nodeRect.y;\n    const width = handle?.width || nodeRect.width;\n    const height = handle?.height || nodeRect.height;\n    switch (position) {\n        case Position.Top:\n            return {\n                x: x + width / 2,\n                y,\n            };\n        case Position.Right:\n            return {\n                x: x + width,\n                y: y + height / 2,\n            };\n        case Position.Bottom:\n            return {\n                x: x + width / 2,\n                y: y + height,\n            };\n        case Position.Left:\n            return {\n                x,\n                y: y + height / 2,\n            };\n    }\n}\nfunction getHandle(bounds, handleId) {\n    if (!bounds) {\n        return null;\n    }\n    if (bounds.length === 1 || !handleId) {\n        return bounds[0];\n    }\n    else if (handleId) {\n        return bounds.find((d) => d.id === handleId) || null;\n    }\n    return null;\n}\nconst getEdgePositions = (sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition) => {\n    const sourceHandlePos = getHandlePosition(sourcePosition, sourceNodeRect, sourceHandle);\n    const targetHandlePos = getHandlePosition(targetPosition, targetNodeRect, targetHandle);\n    return {\n        sourceX: sourceHandlePos.x,\n        sourceY: sourceHandlePos.y,\n        targetX: targetHandlePos.x,\n        targetY: targetHandlePos.y,\n    };\n};\nfunction isEdgeVisible({ sourcePos, targetPos, sourceWidth, sourceHeight, targetWidth, targetHeight, width, height, transform, }) {\n    const edgeBox = {\n        x: Math.min(sourcePos.x, targetPos.x),\n        y: Math.min(sourcePos.y, targetPos.y),\n        x2: Math.max(sourcePos.x + sourceWidth, targetPos.x + targetWidth),\n        y2: Math.max(sourcePos.y + sourceHeight, targetPos.y + targetHeight),\n    };\n    if (edgeBox.x === edgeBox.x2) {\n        edgeBox.x2 += 1;\n    }\n    if (edgeBox.y === edgeBox.y2) {\n        edgeBox.y2 += 1;\n    }\n    const viewBox = rectToBox({\n        x: (0 - transform[0]) / transform[2],\n        y: (0 - transform[1]) / transform[2],\n        width: width / transform[2],\n        height: height / transform[2],\n    });\n    const xOverlap = Math.max(0, Math.min(viewBox.x2, edgeBox.x2) - Math.max(viewBox.x, edgeBox.x));\n    const yOverlap = Math.max(0, Math.min(viewBox.y2, edgeBox.y2) - Math.max(viewBox.y, edgeBox.y));\n    const overlappingArea = Math.ceil(xOverlap * yOverlap);\n    return overlappingArea > 0;\n}\nfunction getNodeData(node) {\n    const handleBounds = node?.[internalsSymbol]?.handleBounds || null;\n    const isValid = handleBounds &&\n        node?.width &&\n        node?.height &&\n        typeof node?.positionAbsolute?.x !== 'undefined' &&\n        typeof node?.positionAbsolute?.y !== 'undefined';\n    return [\n        {\n            x: node?.positionAbsolute?.x || 0,\n            y: node?.positionAbsolute?.y || 0,\n            width: node?.width || 0,\n            height: node?.height || 0,\n        },\n        handleBounds,\n        !!isValid,\n    ];\n}\n\nconst defaultEdgeTree = [{ level: 0, isMaxLevel: true, edges: [] }];\nfunction groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect = false) {\n    let maxLevel = -1;\n    const levelLookup = edges.reduce((tree, edge) => {\n        const hasZIndex = isNumeric(edge.zIndex);\n        let z = hasZIndex ? edge.zIndex : 0;\n        if (elevateEdgesOnSelect) {\n            const targetNode = nodeInternals.get(edge.target);\n            const sourceNode = nodeInternals.get(edge.source);\n            const edgeOrConnectedNodeSelected = edge.selected || targetNode?.selected || sourceNode?.selected;\n            const selectedZIndex = Math.max(sourceNode?.[internalsSymbol]?.z || 0, targetNode?.[internalsSymbol]?.z || 0, 1000);\n            z = (hasZIndex ? edge.zIndex : 0) + (edgeOrConnectedNodeSelected ? selectedZIndex : 0);\n        }\n        if (tree[z]) {\n            tree[z].push(edge);\n        }\n        else {\n            tree[z] = [edge];\n        }\n        maxLevel = z > maxLevel ? z : maxLevel;\n        return tree;\n    }, {});\n    const edgeTree = Object.entries(levelLookup).map(([key, edges]) => {\n        const level = +key;\n        return {\n            edges,\n            level,\n            isMaxLevel: level === maxLevel,\n        };\n    });\n    if (edgeTree.length === 0) {\n        return defaultEdgeTree;\n    }\n    return edgeTree;\n}\nfunction useVisibleEdges(onlyRenderVisible, nodeInternals, elevateEdgesOnSelect) {\n    const edges = useStore(useCallback((s) => {\n        if (!onlyRenderVisible) {\n            return s.edges;\n        }\n        return s.edges.filter((e) => {\n            const sourceNode = nodeInternals.get(e.source);\n            const targetNode = nodeInternals.get(e.target);\n            return (sourceNode?.width &&\n                sourceNode?.height &&\n                targetNode?.width &&\n                targetNode?.height &&\n                isEdgeVisible({\n                    sourcePos: sourceNode.positionAbsolute || { x: 0, y: 0 },\n                    targetPos: targetNode.positionAbsolute || { x: 0, y: 0 },\n                    sourceWidth: sourceNode.width,\n                    sourceHeight: sourceNode.height,\n                    targetWidth: targetNode.width,\n                    targetHeight: targetNode.height,\n                    width: s.width,\n                    height: s.height,\n                    transform: s.transform,\n                }));\n        });\n    }, [onlyRenderVisible, nodeInternals]));\n    return groupEdgesByZLevel(edges, nodeInternals, elevateEdgesOnSelect);\n}\n\nconst ArrowSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: \"none\", points: \"-5,-4 0,0 -5,4\" }));\n};\nconst ArrowClosedSymbol = ({ color = 'none', strokeWidth = 1 }) => {\n    return (jsx(\"polyline\", { stroke: color, strokeLinecap: \"round\", strokeLinejoin: \"round\", strokeWidth: strokeWidth, fill: color, points: \"-5,-4 0,0 -5,4 -5,-4\" }));\n};\nconst MarkerSymbols = {\n    [MarkerType.Arrow]: ArrowSymbol,\n    [MarkerType.ArrowClosed]: ArrowClosedSymbol,\n};\nfunction useMarkerSymbol(type) {\n    const store = useStoreApi();\n    const symbol = useMemo(() => {\n        const symbolExists = Object.prototype.hasOwnProperty.call(MarkerSymbols, type);\n        if (!symbolExists) {\n            store.getState().onError?.('009', errorMessages['error009'](type));\n            return null;\n        }\n        return MarkerSymbols[type];\n    }, [type]);\n    return symbol;\n}\n\nconst Marker = ({ id, type, color, width = 12.5, height = 12.5, markerUnits = 'strokeWidth', strokeWidth, orient = 'auto-start-reverse', }) => {\n    const Symbol = useMarkerSymbol(type);\n    if (!Symbol) {\n        return null;\n    }\n    return (jsx(\"marker\", { className: \"react-flow__arrowhead\", id: id, markerWidth: `${width}`, markerHeight: `${height}`, viewBox: \"-10 -10 20 20\", markerUnits: markerUnits, orient: orient, refX: \"0\", refY: \"0\", children: jsx(Symbol, { color: color, strokeWidth: strokeWidth }) }));\n};\nconst markerSelector = ({ defaultColor, rfId }) => (s) => {\n    const ids = [];\n    return s.edges\n        .reduce((markers, edge) => {\n        [edge.markerStart, edge.markerEnd].forEach((marker) => {\n            if (marker && typeof marker === 'object') {\n                const markerId = getMarkerId(marker, rfId);\n                if (!ids.includes(markerId)) {\n                    markers.push({ id: markerId, color: marker.color || defaultColor, ...marker });\n                    ids.push(markerId);\n                }\n            }\n        });\n        return markers;\n    }, [])\n        .sort((a, b) => a.id.localeCompare(b.id));\n};\n// when you have multiple flows on a page and you hide the first one, the other ones have no markers anymore\n// when they do have markers with the same ids. To prevent this the user can pass a unique id to the react flow wrapper\n// that we can then use for creating our unique marker ids\nconst MarkerDefinitions = ({ defaultColor, rfId }) => {\n    const markers = useStore(useCallback(markerSelector({ defaultColor, rfId }), [defaultColor, rfId]), \n    // the id includes all marker options, so we just need to look at that part of the marker\n    (a, b) => !(a.length !== b.length || a.some((m, i) => m.id !== b[i].id)));\n    return (jsx(\"defs\", { children: markers.map((marker) => (jsx(Marker, { id: marker.id, type: marker.type, color: marker.color, width: marker.width, height: marker.height, markerUnits: marker.markerUnits, strokeWidth: marker.strokeWidth, orient: marker.orient }, marker.id))) }));\n};\nMarkerDefinitions.displayName = 'MarkerDefinitions';\nvar MarkerDefinitions$1 = memo(MarkerDefinitions);\n\nconst selector$4 = (s) => ({\n    nodesConnectable: s.nodesConnectable,\n    edgesFocusable: s.edgesFocusable,\n    edgesUpdatable: s.edgesUpdatable,\n    elementsSelectable: s.elementsSelectable,\n    width: s.width,\n    height: s.height,\n    connectionMode: s.connectionMode,\n    nodeInternals: s.nodeInternals,\n    onError: s.onError,\n});\nconst EdgeRenderer = ({ defaultMarkerColor, onlyRenderVisibleElements, elevateEdgesOnSelect, rfId, edgeTypes, noPanClassName, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeClick, edgeUpdaterRadius, onEdgeDoubleClick, onEdgeUpdateStart, onEdgeUpdateEnd, children, }) => {\n    const { edgesFocusable, edgesUpdatable, elementsSelectable, width, height, connectionMode, nodeInternals, onError } = useStore(selector$4, shallow);\n    const edgeTree = useVisibleEdges(onlyRenderVisibleElements, nodeInternals, elevateEdgesOnSelect);\n    if (!width) {\n        return null;\n    }\n    return (jsxs(Fragment, { children: [edgeTree.map(({ level, edges, isMaxLevel }) => (jsxs(\"svg\", { style: { zIndex: level }, width: width, height: height, className: \"react-flow__edges react-flow__container\", children: [isMaxLevel && jsx(MarkerDefinitions$1, { defaultColor: defaultMarkerColor, rfId: rfId }), jsx(\"g\", { children: edges.map((edge) => {\n                            const [sourceNodeRect, sourceHandleBounds, sourceIsValid] = getNodeData(nodeInternals.get(edge.source));\n                            const [targetNodeRect, targetHandleBounds, targetIsValid] = getNodeData(nodeInternals.get(edge.target));\n                            if (!sourceIsValid || !targetIsValid) {\n                                return null;\n                            }\n                            let edgeType = edge.type || 'default';\n                            if (!edgeTypes[edgeType]) {\n                                onError?.('011', errorMessages['error011'](edgeType));\n                                edgeType = 'default';\n                            }\n                            const EdgeComponent = edgeTypes[edgeType] || edgeTypes.default;\n                            // when connection type is loose we can define all handles as sources and connect source -> source\n                            const targetNodeHandles = connectionMode === ConnectionMode.Strict\n                                ? targetHandleBounds.target\n                                : (targetHandleBounds.target ?? []).concat(targetHandleBounds.source ?? []);\n                            const sourceHandle = getHandle(sourceHandleBounds.source, edge.sourceHandle);\n                            const targetHandle = getHandle(targetNodeHandles, edge.targetHandle);\n                            const sourcePosition = sourceHandle?.position || Position.Bottom;\n                            const targetPosition = targetHandle?.position || Position.Top;\n                            const isFocusable = !!(edge.focusable || (edgesFocusable && typeof edge.focusable === 'undefined'));\n                            const isUpdatable = typeof onEdgeUpdate !== 'undefined' &&\n                                (edge.updatable || (edgesUpdatable && typeof edge.updatable === 'undefined'));\n                            if (!sourceHandle || !targetHandle) {\n                                onError?.('008', errorMessages['error008'](sourceHandle, edge));\n                                return null;\n                            }\n                            const { sourceX, sourceY, targetX, targetY } = getEdgePositions(sourceNodeRect, sourceHandle, sourcePosition, targetNodeRect, targetHandle, targetPosition);\n                            return (jsx(EdgeComponent, { id: edge.id, className: cc([edge.className, noPanClassName]), type: edgeType, data: edge.data, selected: !!edge.selected, animated: !!edge.animated, hidden: !!edge.hidden, label: edge.label, labelStyle: edge.labelStyle, labelShowBg: edge.labelShowBg, labelBgStyle: edge.labelBgStyle, labelBgPadding: edge.labelBgPadding, labelBgBorderRadius: edge.labelBgBorderRadius, style: edge.style, source: edge.source, target: edge.target, sourceHandleId: edge.sourceHandle, targetHandleId: edge.targetHandle, markerEnd: edge.markerEnd, markerStart: edge.markerStart, sourceX: sourceX, sourceY: sourceY, targetX: targetX, targetY: targetY, sourcePosition: sourcePosition, targetPosition: targetPosition, elementsSelectable: elementsSelectable, onEdgeUpdate: onEdgeUpdate, onContextMenu: onEdgeContextMenu, onMouseEnter: onEdgeMouseEnter, onMouseMove: onEdgeMouseMove, onMouseLeave: onEdgeMouseLeave, onClick: onEdgeClick, edgeUpdaterRadius: edgeUpdaterRadius, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, rfId: rfId, ariaLabel: edge.ariaLabel, isFocusable: isFocusable, isUpdatable: isUpdatable, pathOptions: 'pathOptions' in edge ? edge.pathOptions : undefined, interactionWidth: edge.interactionWidth }, edge.id));\n                        }) })] }, level))), children] }));\n};\nEdgeRenderer.displayName = 'EdgeRenderer';\nvar EdgeRenderer$1 = memo(EdgeRenderer);\n\nconst selector$3 = (s) => `translate(${s.transform[0]}px,${s.transform[1]}px) scale(${s.transform[2]})`;\nfunction Viewport({ children }) {\n    const transform = useStore(selector$3);\n    return (jsx(\"div\", { className: \"react-flow__viewport react-flow__container\", style: { transform }, children: children }));\n}\n\nfunction useOnInitHandler(onInit) {\n    const rfInstance = useReactFlow();\n    const isInitialized = useRef(false);\n    useEffect(() => {\n        if (!isInitialized.current && rfInstance.viewportInitialized && onInit) {\n            setTimeout(() => onInit(rfInstance), 1);\n            isInitialized.current = true;\n        }\n    }, [onInit, rfInstance.viewportInitialized]);\n}\n\nconst oppositePosition = {\n    [Position.Left]: Position.Right,\n    [Position.Right]: Position.Left,\n    [Position.Top]: Position.Bottom,\n    [Position.Bottom]: Position.Top,\n};\nconst ConnectionLine = ({ nodeId, handleType, style, type = ConnectionLineType.Bezier, CustomComponent, connectionStatus, }) => {\n    const { fromNode, handleId, toX, toY, connectionMode } = useStore(useCallback((s) => ({\n        fromNode: s.nodeInternals.get(nodeId),\n        handleId: s.connectionHandleId,\n        toX: (s.connectionPosition.x - s.transform[0]) / s.transform[2],\n        toY: (s.connectionPosition.y - s.transform[1]) / s.transform[2],\n        connectionMode: s.connectionMode,\n    }), [nodeId]), shallow);\n    const fromHandleBounds = fromNode?.[internalsSymbol]?.handleBounds;\n    let handleBounds = fromHandleBounds?.[handleType];\n    if (connectionMode === ConnectionMode.Loose) {\n        handleBounds = handleBounds ? handleBounds : fromHandleBounds?.[handleType === 'source' ? 'target' : 'source'];\n    }\n    if (!fromNode || !handleBounds) {\n        return null;\n    }\n    const fromHandle = handleId ? handleBounds.find((d) => d.id === handleId) : handleBounds[0];\n    const fromHandleX = fromHandle ? fromHandle.x + fromHandle.width / 2 : (fromNode.width ?? 0) / 2;\n    const fromHandleY = fromHandle ? fromHandle.y + fromHandle.height / 2 : fromNode.height ?? 0;\n    const fromX = (fromNode.positionAbsolute?.x ?? 0) + fromHandleX;\n    const fromY = (fromNode.positionAbsolute?.y ?? 0) + fromHandleY;\n    const fromPosition = fromHandle?.position;\n    const toPosition = fromPosition ? oppositePosition[fromPosition] : null;\n    if (!fromPosition || !toPosition) {\n        return null;\n    }\n    if (CustomComponent) {\n        return (jsx(CustomComponent, { connectionLineType: type, connectionLineStyle: style, fromNode: fromNode, fromHandle: fromHandle, fromX: fromX, fromY: fromY, toX: toX, toY: toY, fromPosition: fromPosition, toPosition: toPosition, connectionStatus: connectionStatus }));\n    }\n    let dAttr = '';\n    const pathParams = {\n        sourceX: fromX,\n        sourceY: fromY,\n        sourcePosition: fromPosition,\n        targetX: toX,\n        targetY: toY,\n        targetPosition: toPosition,\n    };\n    if (type === ConnectionLineType.Bezier) {\n        // we assume the destination position is opposite to the source position\n        [dAttr] = getBezierPath(pathParams);\n    }\n    else if (type === ConnectionLineType.Step) {\n        [dAttr] = getSmoothStepPath({\n            ...pathParams,\n            borderRadius: 0,\n        });\n    }\n    else if (type === ConnectionLineType.SmoothStep) {\n        [dAttr] = getSmoothStepPath(pathParams);\n    }\n    else if (type === ConnectionLineType.SimpleBezier) {\n        [dAttr] = getSimpleBezierPath(pathParams);\n    }\n    else {\n        dAttr = `M${fromX},${fromY} ${toX},${toY}`;\n    }\n    return jsx(\"path\", { d: dAttr, fill: \"none\", className: \"react-flow__connection-path\", style: style });\n};\nConnectionLine.displayName = 'ConnectionLine';\nconst selector$2 = (s) => ({\n    nodeId: s.connectionNodeId,\n    handleType: s.connectionHandleType,\n    nodesConnectable: s.nodesConnectable,\n    connectionStatus: s.connectionStatus,\n    width: s.width,\n    height: s.height,\n});\nfunction ConnectionLineWrapper({ containerStyle, style, type, component }) {\n    const { nodeId, handleType, nodesConnectable, width, height, connectionStatus } = useStore(selector$2, shallow);\n    const isValid = !!(nodeId && handleType && width && nodesConnectable);\n    if (!isValid) {\n        return null;\n    }\n    return (jsx(\"svg\", { style: containerStyle, width: width, height: height, className: \"react-flow__edges react-flow__connectionline react-flow__container\", children: jsx(\"g\", { className: cc(['react-flow__connection', connectionStatus]), children: jsx(ConnectionLine, { nodeId: nodeId, handleType: handleType, style: style, type: type, CustomComponent: component, connectionStatus: connectionStatus }) }) }));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useNodeOrEdgeTypes(nodeOrEdgeTypes, createTypes) {\n    const typesKeysRef = useRef(null);\n    const store = useStoreApi();\n    const typesParsed = useMemo(() => {\n        if (process.env.NODE_ENV === 'development') {\n            const typeKeys = Object.keys(nodeOrEdgeTypes);\n            if (shallow(typesKeysRef.current, typeKeys)) {\n                store.getState().onError?.('002', errorMessages['error002']());\n            }\n            typesKeysRef.current = typeKeys;\n        }\n        return createTypes(nodeOrEdgeTypes);\n    }, [nodeOrEdgeTypes]);\n    return typesParsed;\n}\n\nconst GraphView = ({ nodeTypes, edgeTypes, onMove, onMoveStart, onMoveEnd, onInit, onNodeClick, onEdgeClick, onNodeDoubleClick, onEdgeDoubleClick, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionLineType, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, selectionKeyCode, selectionOnDrag, selectionMode, multiSelectionKeyCode, panActivationKeyCode, zoomActivationKeyCode, deleteKeyCode, onlyRenderVisibleElements, elementsSelectable, selectNodesOnDrag, defaultViewport, translateExtent, minZoom, maxZoom, preventScrolling, defaultMarkerColor, zoomOnScroll, zoomOnPinch, panOnScroll, panOnScrollSpeed, panOnScrollMode, zoomOnDoubleClick, panOnDrag, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, onEdgeUpdate, onEdgeContextMenu, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, edgeUpdaterRadius, onEdgeUpdateStart, onEdgeUpdateEnd, noDragClassName, noWheelClassName, noPanClassName, elevateEdgesOnSelect, disableKeyboardA11y, nodeOrigin, nodeExtent, rfId, }) => {\n    const nodeTypesWrapped = useNodeOrEdgeTypes(nodeTypes, createNodeTypes);\n    const edgeTypesWrapped = useNodeOrEdgeTypes(edgeTypes, createEdgeTypes);\n    useOnInitHandler(onInit);\n    return (jsx(FlowRenderer$1, { onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneContextMenu: onPaneContextMenu, onPaneScroll: onPaneScroll, deleteKeyCode: deleteKeyCode, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, elementsSelectable: elementsSelectable, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, onSelectionContextMenu: onSelectionContextMenu, preventScrolling: preventScrolling, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, disableKeyboardA11y: disableKeyboardA11y, children: jsxs(Viewport, { children: [jsx(EdgeRenderer$1, { edgeTypes: edgeTypesWrapped, onEdgeClick: onEdgeClick, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeUpdate: onEdgeUpdate, onlyRenderVisibleElements: onlyRenderVisibleElements, onEdgeContextMenu: onEdgeContextMenu, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noPanClassName: noPanClassName, elevateEdgesOnSelect: !!elevateEdgesOnSelect, disableKeyboardA11y: disableKeyboardA11y, rfId: rfId, children: jsx(ConnectionLineWrapper, { style: connectionLineStyle, type: connectionLineType, component: connectionLineComponent, containerStyle: connectionLineContainerStyle }) }), jsx(\"div\", { className: \"react-flow__edgelabel-renderer\" }), jsx(NodeRenderer$1, { nodeTypes: nodeTypesWrapped, onNodeClick: onNodeClick, onNodeDoubleClick: onNodeDoubleClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, selectNodesOnDrag: selectNodesOnDrag, onlyRenderVisibleElements: onlyRenderVisibleElements, noPanClassName: noPanClassName, noDragClassName: noDragClassName, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent, rfId: rfId })] }) }));\n};\nGraphView.displayName = 'GraphView';\nvar GraphView$1 = memo(GraphView);\n\nconst infiniteExtent = [\n    [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\n    [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\n];\nconst initialState = {\n    rfId: '1',\n    width: 0,\n    height: 0,\n    transform: [0, 0, 1],\n    nodeInternals: new Map(),\n    edges: [],\n    onNodesChange: null,\n    onEdgesChange: null,\n    hasDefaultNodes: false,\n    hasDefaultEdges: false,\n    d3Zoom: null,\n    d3Selection: null,\n    d3ZoomHandler: undefined,\n    minZoom: 0.5,\n    maxZoom: 2,\n    translateExtent: infiniteExtent,\n    nodeExtent: infiniteExtent,\n    nodesSelectionActive: false,\n    userSelectionActive: false,\n    userSelectionRect: null,\n    connectionNodeId: null,\n    connectionHandleId: null,\n    connectionHandleType: 'source',\n    connectionPosition: { x: 0, y: 0 },\n    connectionStatus: null,\n    connectionMode: ConnectionMode.Strict,\n    domNode: null,\n    paneDragging: false,\n    noPanClassName: 'nopan',\n    nodeOrigin: [0, 0],\n    snapGrid: [15, 15],\n    snapToGrid: false,\n    nodesDraggable: true,\n    nodesConnectable: true,\n    nodesFocusable: true,\n    edgesFocusable: true,\n    edgesUpdatable: true,\n    elementsSelectable: true,\n    elevateNodesOnSelect: true,\n    fitViewOnInit: false,\n    fitViewOnInitDone: false,\n    fitViewOnInitOptions: undefined,\n    multiSelectionActive: false,\n    connectionStartHandle: null,\n    connectionEndHandle: null,\n    connectionClickStartHandle: null,\n    connectOnClick: true,\n    ariaLiveMessage: '',\n    autoPanOnConnect: true,\n    autoPanOnNodeDrag: true,\n    connectionRadius: 20,\n    onError: devWarn,\n    isValidConnection: undefined,\n};\n\nconst createRFStore = () => createWithEqualityFn((set, get) => ({\n    ...initialState,\n    setNodes: (nodes) => {\n        const { nodeInternals, nodeOrigin, elevateNodesOnSelect } = get();\n        set({ nodeInternals: createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect) });\n    },\n    getNodes: () => {\n        return Array.from(get().nodeInternals.values());\n    },\n    setEdges: (edges) => {\n        const { defaultEdgeOptions = {} } = get();\n        set({ edges: edges.map((e) => ({ ...defaultEdgeOptions, ...e })) });\n    },\n    setDefaultNodesAndEdges: (nodes, edges) => {\n        const hasDefaultNodes = typeof nodes !== 'undefined';\n        const hasDefaultEdges = typeof edges !== 'undefined';\n        const nodeInternals = hasDefaultNodes\n            ? createNodeInternals(nodes, new Map(), get().nodeOrigin, get().elevateNodesOnSelect)\n            : new Map();\n        const nextEdges = hasDefaultEdges ? edges : [];\n        set({ nodeInternals, edges: nextEdges, hasDefaultNodes, hasDefaultEdges });\n    },\n    updateNodeDimensions: (updates) => {\n        const { onNodesChange, nodeInternals, fitViewOnInit, fitViewOnInitDone, fitViewOnInitOptions, domNode, nodeOrigin, } = get();\n        const viewportNode = domNode?.querySelector('.react-flow__viewport');\n        if (!viewportNode) {\n            return;\n        }\n        const style = window.getComputedStyle(viewportNode);\n        const { m22: zoom } = new window.DOMMatrixReadOnly(style.transform);\n        const changes = updates.reduce((res, update) => {\n            const node = nodeInternals.get(update.id);\n            if (node) {\n                const dimensions = getDimensions(update.nodeElement);\n                const doUpdate = !!(dimensions.width &&\n                    dimensions.height &&\n                    (node.width !== dimensions.width || node.height !== dimensions.height || update.forceUpdate));\n                if (doUpdate) {\n                    nodeInternals.set(node.id, {\n                        ...node,\n                        [internalsSymbol]: {\n                            ...node[internalsSymbol],\n                            handleBounds: {\n                                source: getHandleBounds('.source', update.nodeElement, zoom, nodeOrigin),\n                                target: getHandleBounds('.target', update.nodeElement, zoom, nodeOrigin),\n                            },\n                        },\n                        ...dimensions,\n                    });\n                    res.push({\n                        id: node.id,\n                        type: 'dimensions',\n                        dimensions,\n                    });\n                }\n            }\n            return res;\n        }, []);\n        updateAbsoluteNodePositions(nodeInternals, nodeOrigin);\n        const nextFitViewOnInitDone = fitViewOnInitDone ||\n            (fitViewOnInit && !fitViewOnInitDone && fitView(get, { initial: true, ...fitViewOnInitOptions }));\n        set({ nodeInternals: new Map(nodeInternals), fitViewOnInitDone: nextFitViewOnInitDone });\n        if (changes?.length > 0) {\n            onNodesChange?.(changes);\n        }\n    },\n    updateNodePositions: (nodeDragItems, positionChanged = true, dragging = false) => {\n        const { triggerNodeChanges } = get();\n        const changes = nodeDragItems.map((node) => {\n            const change = {\n                id: node.id,\n                type: 'position',\n                dragging,\n            };\n            if (positionChanged) {\n                change.positionAbsolute = node.positionAbsolute;\n                change.position = node.position;\n            }\n            return change;\n        });\n        triggerNodeChanges(changes);\n    },\n    triggerNodeChanges: (changes) => {\n        const { onNodesChange, nodeInternals, hasDefaultNodes, nodeOrigin, getNodes, elevateNodesOnSelect } = get();\n        if (changes?.length) {\n            if (hasDefaultNodes) {\n                const nodes = applyNodeChanges(changes, getNodes());\n                const nextNodeInternals = createNodeInternals(nodes, nodeInternals, nodeOrigin, elevateNodesOnSelect);\n                set({ nodeInternals: nextNodeInternals });\n            }\n            onNodesChange?.(changes);\n        }\n    },\n    addSelectedNodes: (selectedNodeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedNodes;\n        let changedEdges = null;\n        if (multiSelectionActive) {\n            changedNodes = selectedNodeIds.map((nodeId) => createSelectionChange(nodeId, true));\n        }\n        else {\n            changedNodes = getSelectionChanges(getNodes(), selectedNodeIds);\n            changedEdges = getSelectionChanges(edges, []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    addSelectedEdges: (selectedEdgeIds) => {\n        const { multiSelectionActive, edges, getNodes } = get();\n        let changedEdges;\n        let changedNodes = null;\n        if (multiSelectionActive) {\n            changedEdges = selectedEdgeIds.map((edgeId) => createSelectionChange(edgeId, true));\n        }\n        else {\n            changedEdges = getSelectionChanges(edges, selectedEdgeIds);\n            changedNodes = getSelectionChanges(getNodes(), []);\n        }\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    unselectNodesAndEdges: ({ nodes, edges } = {}) => {\n        const { edges: storeEdges, getNodes } = get();\n        const nodesToUnselect = nodes ? nodes : getNodes();\n        const edgesToUnselect = edges ? edges : storeEdges;\n        const changedNodes = nodesToUnselect.map((n) => {\n            n.selected = false;\n            return createSelectionChange(n.id, false);\n        });\n        const changedEdges = edgesToUnselect.map((edge) => createSelectionChange(edge.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes,\n            changedEdges,\n            get,\n            set,\n        });\n    },\n    setMinZoom: (minZoom) => {\n        const { d3Zoom, maxZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ minZoom });\n    },\n    setMaxZoom: (maxZoom) => {\n        const { d3Zoom, minZoom } = get();\n        d3Zoom?.scaleExtent([minZoom, maxZoom]);\n        set({ maxZoom });\n    },\n    setTranslateExtent: (translateExtent) => {\n        get().d3Zoom?.translateExtent(translateExtent);\n        set({ translateExtent });\n    },\n    resetSelectedElements: () => {\n        const { edges, getNodes } = get();\n        const nodes = getNodes();\n        const nodesToUnselect = nodes\n            .filter((e) => e.selected)\n            .map((n) => createSelectionChange(n.id, false));\n        const edgesToUnselect = edges\n            .filter((e) => e.selected)\n            .map((e) => createSelectionChange(e.id, false));\n        updateNodesAndEdgesSelections({\n            changedNodes: nodesToUnselect,\n            changedEdges: edgesToUnselect,\n            get,\n            set,\n        });\n    },\n    setNodeExtent: (nodeExtent) => {\n        const { nodeInternals } = get();\n        nodeInternals.forEach((node) => {\n            node.positionAbsolute = clampPosition(node.position, nodeExtent);\n        });\n        set({\n            nodeExtent,\n            nodeInternals: new Map(nodeInternals),\n        });\n    },\n    panBy: (delta) => {\n        const { transform, width, height, d3Zoom, d3Selection, translateExtent } = get();\n        if (!d3Zoom || !d3Selection || (!delta.x && !delta.y)) {\n            return false;\n        }\n        const nextTransform = zoomIdentity\n            .translate(transform[0] + delta.x, transform[1] + delta.y)\n            .scale(transform[2]);\n        const extent = [\n            [0, 0],\n            [width, height],\n        ];\n        const constrainedTransform = d3Zoom?.constrain()(nextTransform, extent, translateExtent);\n        d3Zoom.transform(d3Selection, constrainedTransform);\n        const transformChanged = transform[0] !== constrainedTransform.x ||\n            transform[1] !== constrainedTransform.y ||\n            transform[2] !== constrainedTransform.k;\n        return transformChanged;\n    },\n    cancelConnection: () => set({\n        connectionNodeId: initialState.connectionNodeId,\n        connectionHandleId: initialState.connectionHandleId,\n        connectionHandleType: initialState.connectionHandleType,\n        connectionStatus: initialState.connectionStatus,\n        connectionStartHandle: initialState.connectionStartHandle,\n        connectionEndHandle: initialState.connectionEndHandle,\n    }),\n    reset: () => set({ ...initialState }),\n}), Object.is);\n\nconst ReactFlowProvider = ({ children }) => {\n    const storeRef = useRef(null);\n    if (!storeRef.current) {\n        storeRef.current = createRFStore();\n    }\n    return jsx(Provider$1, { value: storeRef.current, children: children });\n};\nReactFlowProvider.displayName = 'ReactFlowProvider';\n\nconst Wrapper = ({ children }) => {\n    const isWrapped = useContext(StoreContext);\n    if (isWrapped) {\n        // we need to wrap it with a fragment because it's not allowed for children to be a ReactNode\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18051\n        return jsx(Fragment, { children: children });\n    }\n    return jsx(ReactFlowProvider, { children: children });\n};\nWrapper.displayName = 'ReactFlowWrapper';\n\nconst defaultNodeTypes = {\n    input: InputNode$1,\n    default: DefaultNode$1,\n    output: OutputNode$1,\n    group: GroupNode,\n};\nconst defaultEdgeTypes = {\n    default: BezierEdge,\n    straight: StraightEdge,\n    step: StepEdge,\n    smoothstep: SmoothStepEdge,\n    simplebezier: SimpleBezierEdge,\n};\nconst initNodeOrigin = [0, 0];\nconst initSnapGrid = [15, 15];\nconst initDefaultViewport = { x: 0, y: 0, zoom: 1 };\nconst wrapperStyle = {\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    position: 'relative',\n    zIndex: 0,\n};\nconst ReactFlow = forwardRef(({ nodes, edges, defaultNodes, defaultEdges, className, nodeTypes = defaultNodeTypes, edgeTypes = defaultEdgeTypes, onNodeClick, onEdgeClick, onInit, onMove, onMoveStart, onMoveEnd, onConnect, onConnectStart, onConnectEnd, onClickConnectStart, onClickConnectEnd, onNodeMouseEnter, onNodeMouseMove, onNodeMouseLeave, onNodeContextMenu, onNodeDoubleClick, onNodeDragStart, onNodeDrag, onNodeDragStop, onNodesDelete, onEdgesDelete, onSelectionChange, onSelectionDragStart, onSelectionDrag, onSelectionDragStop, onSelectionContextMenu, onSelectionStart, onSelectionEnd, connectionMode = ConnectionMode.Strict, connectionLineType = ConnectionLineType.Bezier, connectionLineStyle, connectionLineComponent, connectionLineContainerStyle, deleteKeyCode = 'Backspace', selectionKeyCode = 'Shift', selectionOnDrag = false, selectionMode = SelectionMode.Full, panActivationKeyCode = 'Space', multiSelectionKeyCode = isMacOs() ? 'Meta' : 'Control', zoomActivationKeyCode = isMacOs() ? 'Meta' : 'Control', snapToGrid = false, snapGrid = initSnapGrid, onlyRenderVisibleElements = false, selectNodesOnDrag = true, nodesDraggable, nodesConnectable, nodesFocusable, nodeOrigin = initNodeOrigin, edgesFocusable, edgesUpdatable, elementsSelectable, defaultViewport = initDefaultViewport, minZoom = 0.5, maxZoom = 2, translateExtent = infiniteExtent, preventScrolling = true, nodeExtent, defaultMarkerColor = '#b1b1b7', zoomOnScroll = true, zoomOnPinch = true, panOnScroll = false, panOnScrollSpeed = 0.5, panOnScrollMode = PanOnScrollMode.Free, zoomOnDoubleClick = true, panOnDrag = true, onPaneClick, onPaneMouseEnter, onPaneMouseMove, onPaneMouseLeave, onPaneScroll, onPaneContextMenu, children, onEdgeUpdate, onEdgeContextMenu, onEdgeDoubleClick, onEdgeMouseEnter, onEdgeMouseMove, onEdgeMouseLeave, onEdgeUpdateStart, onEdgeUpdateEnd, edgeUpdaterRadius = 10, onNodesChange, onEdgesChange, noDragClassName = 'nodrag', noWheelClassName = 'nowheel', noPanClassName = 'nopan', fitView = false, fitViewOptions, connectOnClick = true, attributionPosition, proOptions, defaultEdgeOptions, elevateNodesOnSelect = true, elevateEdgesOnSelect = false, disableKeyboardA11y = false, autoPanOnConnect = true, autoPanOnNodeDrag = true, connectionRadius = 20, isValidConnection, onError, style, id, ...rest }, ref) => {\n    const rfId = id || '1';\n    return (jsx(\"div\", { ...rest, style: { ...style, ...wrapperStyle }, ref: ref, className: cc(['react-flow', className]), \"data-testid\": \"rf__wrapper\", id: id, children: jsxs(Wrapper, { children: [jsx(GraphView$1, { onInit: onInit, onMove: onMove, onMoveStart: onMoveStart, onMoveEnd: onMoveEnd, onNodeClick: onNodeClick, onEdgeClick: onEdgeClick, onNodeMouseEnter: onNodeMouseEnter, onNodeMouseMove: onNodeMouseMove, onNodeMouseLeave: onNodeMouseLeave, onNodeContextMenu: onNodeContextMenu, onNodeDoubleClick: onNodeDoubleClick, nodeTypes: nodeTypes, edgeTypes: edgeTypes, connectionLineType: connectionLineType, connectionLineStyle: connectionLineStyle, connectionLineComponent: connectionLineComponent, connectionLineContainerStyle: connectionLineContainerStyle, selectionKeyCode: selectionKeyCode, selectionOnDrag: selectionOnDrag, selectionMode: selectionMode, deleteKeyCode: deleteKeyCode, multiSelectionKeyCode: multiSelectionKeyCode, panActivationKeyCode: panActivationKeyCode, zoomActivationKeyCode: zoomActivationKeyCode, onlyRenderVisibleElements: onlyRenderVisibleElements, selectNodesOnDrag: selectNodesOnDrag, defaultViewport: defaultViewport, translateExtent: translateExtent, minZoom: minZoom, maxZoom: maxZoom, preventScrolling: preventScrolling, zoomOnScroll: zoomOnScroll, zoomOnPinch: zoomOnPinch, zoomOnDoubleClick: zoomOnDoubleClick, panOnScroll: panOnScroll, panOnScrollSpeed: panOnScrollSpeed, panOnScrollMode: panOnScrollMode, panOnDrag: panOnDrag, onPaneClick: onPaneClick, onPaneMouseEnter: onPaneMouseEnter, onPaneMouseMove: onPaneMouseMove, onPaneMouseLeave: onPaneMouseLeave, onPaneScroll: onPaneScroll, onPaneContextMenu: onPaneContextMenu, onSelectionContextMenu: onSelectionContextMenu, onSelectionStart: onSelectionStart, onSelectionEnd: onSelectionEnd, onEdgeUpdate: onEdgeUpdate, onEdgeContextMenu: onEdgeContextMenu, onEdgeDoubleClick: onEdgeDoubleClick, onEdgeMouseEnter: onEdgeMouseEnter, onEdgeMouseMove: onEdgeMouseMove, onEdgeMouseLeave: onEdgeMouseLeave, onEdgeUpdateStart: onEdgeUpdateStart, onEdgeUpdateEnd: onEdgeUpdateEnd, edgeUpdaterRadius: edgeUpdaterRadius, defaultMarkerColor: defaultMarkerColor, noDragClassName: noDragClassName, noWheelClassName: noWheelClassName, noPanClassName: noPanClassName, elevateEdgesOnSelect: elevateEdgesOnSelect, rfId: rfId, disableKeyboardA11y: disableKeyboardA11y, nodeOrigin: nodeOrigin, nodeExtent: nodeExtent }), jsx(StoreUpdater, { nodes: nodes, edges: edges, defaultNodes: defaultNodes, defaultEdges: defaultEdges, onConnect: onConnect, onConnectStart: onConnectStart, onConnectEnd: onConnectEnd, onClickConnectStart: onClickConnectStart, onClickConnectEnd: onClickConnectEnd, nodesDraggable: nodesDraggable, nodesConnectable: nodesConnectable, nodesFocusable: nodesFocusable, edgesFocusable: edgesFocusable, edgesUpdatable: edgesUpdatable, elementsSelectable: elementsSelectable, elevateNodesOnSelect: elevateNodesOnSelect, minZoom: minZoom, maxZoom: maxZoom, nodeExtent: nodeExtent, onNodesChange: onNodesChange, onEdgesChange: onEdgesChange, snapToGrid: snapToGrid, snapGrid: snapGrid, connectionMode: connectionMode, translateExtent: translateExtent, connectOnClick: connectOnClick, defaultEdgeOptions: defaultEdgeOptions, fitView: fitView, fitViewOptions: fitViewOptions, onNodesDelete: onNodesDelete, onEdgesDelete: onEdgesDelete, onNodeDragStart: onNodeDragStart, onNodeDrag: onNodeDrag, onNodeDragStop: onNodeDragStop, onSelectionDrag: onSelectionDrag, onSelectionDragStart: onSelectionDragStart, onSelectionDragStop: onSelectionDragStop, noPanClassName: noPanClassName, nodeOrigin: nodeOrigin, rfId: rfId, autoPanOnConnect: autoPanOnConnect, autoPanOnNodeDrag: autoPanOnNodeDrag, onError: onError, connectionRadius: connectionRadius, isValidConnection: isValidConnection }), jsx(Wrapper$1, { onSelectionChange: onSelectionChange }), children, jsx(Attribution, { proOptions: proOptions, position: attributionPosition }), jsx(A11yDescriptions, { rfId: rfId, disableKeyboardA11y: disableKeyboardA11y })] }) }));\n});\nReactFlow.displayName = 'ReactFlow';\n\nconst selector$1 = (s) => s.domNode?.querySelector('.react-flow__edgelabel-renderer');\nfunction EdgeLabelRenderer({ children }) {\n    const edgeLabelRenderer = useStore(selector$1);\n    if (!edgeLabelRenderer) {\n        return null;\n    }\n    return createPortal(children, edgeLabelRenderer);\n}\n\nfunction useUpdateNodeInternals() {\n    const store = useStoreApi();\n    return useCallback((id) => {\n        const { domNode, updateNodeDimensions } = store.getState();\n        const updateIds = Array.isArray(id) ? id : [id];\n        const updates = updateIds.reduce((res, updateId) => {\n            const nodeElement = domNode?.querySelector(`.react-flow__node[data-id=\"${updateId}\"]`);\n            if (nodeElement) {\n                res.push({ id: updateId, nodeElement, forceUpdate: true });\n            }\n            return res;\n        }, []);\n        requestAnimationFrame(() => updateNodeDimensions(updates));\n    }, []);\n}\n\nconst nodesSelector = (state) => state.getNodes();\nfunction useNodes() {\n    const nodes = useStore(nodesSelector, shallow);\n    return nodes;\n}\n\nconst edgesSelector = (state) => state.edges;\nfunction useEdges() {\n    const edges = useStore(edgesSelector, shallow);\n    return edges;\n}\n\nconst viewportSelector = (state) => ({\n    x: state.transform[0],\n    y: state.transform[1],\n    zoom: state.transform[2],\n});\nfunction useViewport() {\n    const viewport = useStore(viewportSelector, shallow);\n    return viewport;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createUseItemsState(applyChanges) {\n    return (initialItems) => {\n        const [items, setItems] = useState(initialItems);\n        const onItemsChange = useCallback((changes) => setItems((items) => applyChanges(changes, items)), []);\n        return [items, setItems, onItemsChange];\n    };\n}\nconst useNodesState = createUseItemsState(applyNodeChanges);\nconst useEdgesState = createUseItemsState(applyEdgeChanges);\n\nfunction useOnViewportChange({ onStart, onChange, onEnd }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onViewportChangeStart: onStart });\n    }, [onStart]);\n    useEffect(() => {\n        store.setState({ onViewportChange: onChange });\n    }, [onChange]);\n    useEffect(() => {\n        store.setState({ onViewportChangeEnd: onEnd });\n    }, [onEnd]);\n}\n\nfunction useOnSelectionChange({ onChange }) {\n    const store = useStoreApi();\n    useEffect(() => {\n        store.setState({ onSelectionChange: onChange });\n    }, [onChange]);\n}\n\nconst selector = (options) => (s) => {\n    if (s.nodeInternals.size === 0) {\n        return false;\n    }\n    return s\n        .getNodes()\n        .filter((n) => (options.includeHiddenNodes ? true : !n.hidden))\n        .every((n) => n[internalsSymbol]?.handleBounds !== undefined);\n};\nconst defaultOptions = {\n    includeHiddenNodes: false,\n};\nfunction useNodesInitialized(options = defaultOptions) {\n    const initialized = useStore(selector(options));\n    return initialized;\n}\n\nexport { BaseEdge, BezierEdge, ConnectionLineType, ConnectionMode, EdgeLabelRenderer, EdgeText$1 as EdgeText, Handle$1 as Handle, MarkerType, PanOnScrollMode, Panel, Position, ReactFlow, ReactFlowProvider, SelectionMode, SimpleBezierEdge, SmoothStepEdge, StepEdge, StraightEdge, addEdge, applyEdgeChanges, applyNodeChanges, boxToRect, clamp, getBezierPath, getBoundsOfRects, getConnectedEdges, getIncomers, getMarkerEnd, getNodePositionWithOrigin, getOutgoers, getRectOfNodes, getSimpleBezierPath, getSmoothStepPath, getStraightPath, getTransformForBounds, internalsSymbol, isEdge, isNode, rectToBox, updateEdge, useEdges, useEdgesState, useGetPointerPosition, useKeyPress, useNodeId, useNodes, useNodesInitialized, useNodesState, useOnSelectionChange, useOnViewportChange, useReactFlow, useStore, useStoreApi, useUpdateNodeInternals, useViewport };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}