{"ast":null,"code":"var _jsxFileName = \"/home/krishna/Desktop/vector/frontend/src/draggableNode.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// draggableNode.js\n\nexport const DraggableNode = ({\n  type,\n  label\n}) => {\n  const onDragStart = (event, nodeType) => {\n    const appData = {\n      nodeType\n    };\n    event.target.style.cursor = 'grabbing';\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(appData));\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  // Node type specific styles\n  const getNodeStyle = type => {\n    const baseStyle = {\n      cursor: 'grab',\n      minWidth: '100px',\n      height: '70px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      borderRadius: '12px',\n      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n      transition: 'all 0.2s ease',\n      position: 'relative',\n      overflow: 'hidden'\n    };\n    const typeStyles = {\n      customInput: {\n        backgroundColor: '#E3F2FD',\n        border: '2px solid #2196F3'\n      },\n      llm: {\n        backgroundColor: '#E8F5E9',\n        border: '2px solid #4CAF50'\n      },\n      customOutput: {\n        backgroundColor: '#FCE4EC',\n        border: '2px solid #E91E63'\n      },\n      text: {\n        backgroundColor: '#FFF3E0',\n        border: '2px solid #FF9800'\n      },\n      math: {\n        backgroundColor: '#E8EAF6',\n        border: '2px solid #3F51B5'\n      },\n      filter: {\n        backgroundColor: '#F3E5F5',\n        border: '2px solid #9C27B0'\n      },\n      delay: {\n        backgroundColor: '#E0F7FA',\n        border: '2px solid #00BCD4'\n      },\n      splitter: {\n        backgroundColor: '#F1F8E9',\n        border: '2px solid #8BC34A'\n      },\n      conditional: {\n        backgroundColor: '#FFF8E1',\n        border: '2px solid #FFC107'\n      }\n    };\n    return {\n      ...baseStyle,\n      ...typeStyles[type]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: type,\n    onDragStart: event => onDragStart(event, type),\n    onDragEnd: event => event.target.style.cursor = 'grab',\n    style: getNodeStyle(type),\n    draggable: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        padding: '4px 8px',\n        fontSize: '10px',\n        color: '#666',\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        borderBottom: '1px solid rgba(0, 0, 0, 0.1)'\n      },\n      children: type.replace(/([A-Z])/g, ' $1').trim()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#333',\n        fontWeight: '500',\n        marginTop: '8px'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n};\n_c = DraggableNode;\nvar _c;\n$RefreshReg$(_c, \"DraggableNode\");","map":{"version":3,"names":["DraggableNode","type","label","onDragStart","event","nodeType","appData","target","style","cursor","dataTransfer","setData","JSON","stringify","effectAllowed","getNodeStyle","baseStyle","minWidth","height","display","alignItems","justifyContent","flexDirection","borderRadius","boxShadow","transition","position","overflow","typeStyles","customInput","backgroundColor","border","llm","customOutput","text","math","filter","delay","splitter","conditional","_jsxDEV","className","onDragEnd","draggable","children","top","left","right","padding","fontSize","color","borderBottom","replace","trim","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","marginTop","_c","$RefreshReg$"],"sources":["/home/krishna/Desktop/vector/frontend/src/draggableNode.js"],"sourcesContent":["// draggableNode.js\r\n\r\nexport const DraggableNode = ({ type, label }) => {\r\n    const onDragStart = (event, nodeType) => {\r\n      const appData = { nodeType }\r\n      event.target.style.cursor = 'grabbing';\r\n      event.dataTransfer.setData('application/reactflow', JSON.stringify(appData));\r\n      event.dataTransfer.effectAllowed = 'move';\r\n    };\r\n\r\n    // Node type specific styles\r\n    const getNodeStyle = (type) => {\r\n        const baseStyle = {\r\n            cursor: 'grab',\r\n            minWidth: '100px',\r\n            height: '70px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flexDirection: 'column',\r\n            borderRadius: '12px',\r\n            boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n            transition: 'all 0.2s ease',\r\n            position: 'relative',\r\n            overflow: 'hidden'\r\n        };\r\n\r\n        const typeStyles = {\r\n            customInput: {\r\n                backgroundColor: '#E3F2FD',\r\n                border: '2px solid #2196F3'\r\n            },\r\n            llm: {\r\n                backgroundColor: '#E8F5E9',\r\n                border: '2px solid #4CAF50'\r\n            },\r\n            customOutput: {\r\n                backgroundColor: '#FCE4EC',\r\n                border: '2px solid #E91E63'\r\n            },\r\n            text: {\r\n                backgroundColor: '#FFF3E0',\r\n                border: '2px solid #FF9800'\r\n            },\r\n            math: {\r\n                backgroundColor: '#E8EAF6',\r\n                border: '2px solid #3F51B5'\r\n            },\r\n            filter: {\r\n                backgroundColor: '#F3E5F5',\r\n                border: '2px solid #9C27B0'\r\n            },\r\n            delay: {\r\n                backgroundColor: '#E0F7FA',\r\n                border: '2px solid #00BCD4'\r\n            },\r\n            splitter: {\r\n                backgroundColor: '#F1F8E9',\r\n                border: '2px solid #8BC34A'\r\n            },\r\n            conditional: {\r\n                backgroundColor: '#FFF8E1',\r\n                border: '2px solid #FFC107'\r\n            }\r\n        };\r\n\r\n        return {\r\n            ...baseStyle,\r\n            ...typeStyles[type]\r\n        };\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        className={type}\r\n        onDragStart={(event) => onDragStart(event, type)}\r\n        onDragEnd={(event) => (event.target.style.cursor = 'grab')}\r\n        style={getNodeStyle(type)}\r\n        draggable\r\n      >\r\n          <div style={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              padding: '4px 8px',\r\n              fontSize: '10px',\r\n              color: '#666',\r\n              backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n              borderBottom: '1px solid rgba(0, 0, 0, 0.1)'\r\n          }}>\r\n              {type.replace(/([A-Z])/g, ' $1').trim()}\r\n          </div>\r\n          <span style={{ \r\n              color: '#333',\r\n              fontWeight: '500',\r\n              marginTop: '8px'\r\n          }}>{label}</span>\r\n      </div>\r\n    );\r\n};\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}