{"ast":null,"code":"var _jsxFileName = \"/home/krishna/Desktop/vector/frontend/src/nodes/newNodes/SplitterNode.js\",\n  _s = $RefreshSig$();\nimport { BaseNode } from '../BaseNode';\nimport { useStore } from '../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SplitterNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const updateNodeField = useStore(state => state.updateNodeField);\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    data: data,\n    title: \"Splitter\",\n    inputs: [{\n      id: 'input',\n      label: 'Input'\n    }],\n    outputs: [{\n      id: 'output1',\n      label: 'Out 1'\n    }, {\n      id: 'output2',\n      label: 'Out 2'\n    }, {\n      id: 'output3',\n      label: 'Out 3'\n    }],\n    fields: [{\n      type: 'select',\n      name: 'splitType',\n      label: 'Split Type',\n      defaultValue: 'duplicate',\n      options: [{\n        value: 'duplicate',\n        label: 'Duplicate'\n      }, {\n        value: 'by_delimiter',\n        label: 'By Delimiter'\n      }, {\n        value: 'by_length',\n        label: 'By Length'\n      }]\n    }, {\n      type: 'text',\n      name: 'delimiter',\n      label: 'Delimiter',\n      defaultValue: ',',\n      placeholder: 'e.g., comma, space'\n    }],\n    onFieldChange: (fieldName, value) => updateNodeField(id, fieldName, value),\n    style: {\n      backgroundColor: '#e8f5e8'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_s(SplitterNode, \"9M95F+dnogx34XmSKZ0PPO6DKMs=\", false, function () {\n  return [useStore];\n});\n_c = SplitterNode;\nvar _c;\n$RefreshReg$(_c, \"SplitterNode\");","map":{"version":3,"names":["BaseNode","useStore","jsxDEV","_jsxDEV","SplitterNode","id","data","_s","updateNodeField","state","title","inputs","label","outputs","fields","type","name","defaultValue","options","value","placeholder","onFieldChange","fieldName","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/krishna/Desktop/vector/frontend/src/nodes/newNodes/SplitterNode.js"],"sourcesContent":["import { BaseNode } from '../BaseNode';\r\nimport { useStore } from '../../store';\r\nexport const SplitterNode = ({ id, data }) => {\r\n  const updateNodeField = useStore((state) => state.updateNodeField);\r\n\r\n  return (\r\n    <BaseNode\r\n      id={id}\r\n      data={data}\r\n      title=\"Splitter\"\r\n      inputs={[{ id: 'input', label: 'Input' }]}\r\n      outputs={[\r\n        { id: 'output1', label: 'Out 1' },\r\n        { id: 'output2', label: 'Out 2' },\r\n        { id: 'output3', label: 'Out 3' }\r\n      ]}\r\n      fields={[\r\n        {\r\n          type: 'select',\r\n          name: 'splitType',\r\n          label: 'Split Type',\r\n          defaultValue: 'duplicate',\r\n          options: [\r\n            { value: 'duplicate', label: 'Duplicate' },\r\n            { value: 'by_delimiter', label: 'By Delimiter' },\r\n            { value: 'by_length', label: 'By Length' }\r\n          ]\r\n        },\r\n        {\r\n          type: 'text',\r\n          name: 'delimiter',\r\n          label: 'Delimiter',\r\n          defaultValue: ',',\r\n          placeholder: 'e.g., comma, space'\r\n        }\r\n      ]}\r\n      onFieldChange={(fieldName, value) => updateNodeField(id, fieldName, value)}\r\n      style={{ backgroundColor: '#e8f5e8' }}\r\n    />\r\n  );\r\n};"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,EAAE;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,eAAe,GAAGP,QAAQ,CAAEQ,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EAElE,oBACEL,OAAA,CAACH,QAAQ;IACPK,EAAE,EAAEA,EAAG;IACPC,IAAI,EAAEA,IAAK;IACXI,KAAK,EAAC,UAAU;IAChBC,MAAM,EAAE,CAAC;MAAEN,EAAE,EAAE,OAAO;MAAEO,KAAK,EAAE;IAAQ,CAAC,CAAE;IAC1CC,OAAO,EAAE,CACP;MAAER,EAAE,EAAE,SAAS;MAAEO,KAAK,EAAE;IAAQ,CAAC,EACjC;MAAEP,EAAE,EAAE,SAAS;MAAEO,KAAK,EAAE;IAAQ,CAAC,EACjC;MAAEP,EAAE,EAAE,SAAS;MAAEO,KAAK,EAAE;IAAQ,CAAC,CACjC;IACFE,MAAM,EAAE,CACN;MACEC,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,WAAW;MACjBJ,KAAK,EAAE,YAAY;MACnBK,YAAY,EAAE,WAAW;MACzBC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,WAAW;QAAEP,KAAK,EAAE;MAAY,CAAC,EAC1C;QAAEO,KAAK,EAAE,cAAc;QAAEP,KAAK,EAAE;MAAe,CAAC,EAChD;QAAEO,KAAK,EAAE,WAAW;QAAEP,KAAK,EAAE;MAAY,CAAC;IAE9C,CAAC,EACD;MACEG,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE,WAAW;MACjBJ,KAAK,EAAE,WAAW;MAClBK,YAAY,EAAE,GAAG;MACjBG,WAAW,EAAE;IACf,CAAC,CACD;IACFC,aAAa,EAAEA,CAACC,SAAS,EAAEH,KAAK,KAAKX,eAAe,CAACH,EAAE,EAAEiB,SAAS,EAAEH,KAAK,CAAE;IAC3EI,KAAK,EAAE;MAAEC,eAAe,EAAE;IAAU;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEN,CAAC;AAACrB,EAAA,CAtCWH,YAAY;EAAA,QACCH,QAAQ;AAAA;AAAA4B,EAAA,GADrBzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}