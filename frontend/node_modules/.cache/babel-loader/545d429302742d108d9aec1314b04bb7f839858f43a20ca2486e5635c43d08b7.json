{"ast":null,"code":"var _ = require(\"./lodash\");\nvar Graph = require(\"./graphlib\").Graph;\nvar List = require(\"./data/list\");\n\n/*\r\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\r\n * arc set is a set of edges that can be removed to make a graph acyclic.\r\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\r\n * effective heuristic for the feedback arc set problem.\" This implementation\r\n * adjusts that from the paper to allow for weighted edges.\r\n */\nmodule.exports = greedyFAS;\nvar DEFAULT_WEIGHT_FN = _.constant(1);\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(_.map(results, function (e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n  var entry;\n  while (g.nodeCount()) {\n    while (entry = sinks.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while (entry = sources.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n  return results;\n}\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n    if (collectPredecessors) {\n      results.push({\n        v: edge.v,\n        w: edge.w\n      });\n    }\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry[\"in\"] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n  g.removeNode(entry.v);\n  return results;\n}\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, {\n      v: v,\n      \"in\": 0,\n      out: 0\n    });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn = Math.max(maxIn, fasGraph.node(e.w)[\"in\"] += weight);\n  });\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n  return {\n    graph: fasGraph,\n    buckets: buckets,\n    zeroIdx: zeroIdx\n  };\n}\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n}","map":{"version":3,"names":["_","require","Graph","List","module","exports","greedyFAS","DEFAULT_WEIGHT_FN","constant","g","weightFn","nodeCount","state","buildState","results","doGreedyFAS","graph","buckets","zeroIdx","flatten","map","e","outEdges","v","w","sources","length","sinks","entry","dequeue","removeNode","i","concat","collectPredecessors","undefined","forEach","inEdges","edge","weight","uEntry","node","push","out","assignBucket","wEntry","fasGraph","maxIn","maxOut","nodes","setNode","edges","prevWeight","edgeWeight","setEdge","Math","max","range","enqueue"],"sources":["C:/Users/vaibh/OneDrive/Desktop/Reseachpaper/vector/vector/node_modules/dagre/lib/greedy-fas.js"],"sourcesContent":["var _ = require(\"./lodash\");\r\nvar Graph = require(\"./graphlib\").Graph;\r\nvar List = require(\"./data/list\");\r\n\r\n/*\r\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\r\n * arc set is a set of edges that can be removed to make a graph acyclic.\r\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\r\n * effective heuristic for the feedback arc set problem.\" This implementation\r\n * adjusts that from the paper to allow for weighted edges.\r\n */\r\nmodule.exports = greedyFAS;\r\n\r\nvar DEFAULT_WEIGHT_FN = _.constant(1);\r\n\r\nfunction greedyFAS(g, weightFn) {\r\n  if (g.nodeCount() <= 1) {\r\n    return [];\r\n  }\r\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\r\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\r\n\r\n  // Expand multi-edges\r\n  return _.flatten(_.map(results, function(e) {\r\n    return g.outEdges(e.v, e.w);\r\n  }), true);\r\n}\r\n\r\nfunction doGreedyFAS(g, buckets, zeroIdx) {\r\n  var results = [];\r\n  var sources = buckets[buckets.length - 1];\r\n  var sinks = buckets[0];\r\n\r\n  var entry;\r\n  while (g.nodeCount()) {\r\n    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }\r\n    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }\r\n    if (g.nodeCount()) {\r\n      for (var i = buckets.length - 2; i > 0; --i) {\r\n        entry = buckets[i].dequeue();\r\n        if (entry) {\r\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\r\n  var results = collectPredecessors ? [] : undefined;\r\n\r\n  _.forEach(g.inEdges(entry.v), function(edge) {\r\n    var weight = g.edge(edge);\r\n    var uEntry = g.node(edge.v);\r\n\r\n    if (collectPredecessors) {\r\n      results.push({ v: edge.v, w: edge.w });\r\n    }\r\n\r\n    uEntry.out -= weight;\r\n    assignBucket(buckets, zeroIdx, uEntry);\r\n  });\r\n\r\n  _.forEach(g.outEdges(entry.v), function(edge) {\r\n    var weight = g.edge(edge);\r\n    var w = edge.w;\r\n    var wEntry = g.node(w);\r\n    wEntry[\"in\"] -= weight;\r\n    assignBucket(buckets, zeroIdx, wEntry);\r\n  });\r\n\r\n  g.removeNode(entry.v);\r\n\r\n  return results;\r\n}\r\n\r\nfunction buildState(g, weightFn) {\r\n  var fasGraph = new Graph();\r\n  var maxIn = 0;\r\n  var maxOut = 0;\r\n\r\n  _.forEach(g.nodes(), function(v) {\r\n    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });\r\n  });\r\n\r\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\r\n  // into a single edge for the fasGraph.\r\n  _.forEach(g.edges(), function(e) {\r\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\r\n    var weight = weightFn(e);\r\n    var edgeWeight = prevWeight + weight;\r\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\r\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\r\n    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);\r\n  });\r\n\r\n  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });\r\n  var zeroIdx = maxIn + 1;\r\n\r\n  _.forEach(fasGraph.nodes(), function(v) {\r\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\r\n  });\r\n\r\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\r\n}\r\n\r\nfunction assignBucket(buckets, zeroIdx, entry) {\r\n  if (!entry.out) {\r\n    buckets[0].enqueue(entry);\r\n  } else if (!entry[\"in\"]) {\r\n    buckets[buckets.length - 1].enqueue(entry);\r\n  } else {\r\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}