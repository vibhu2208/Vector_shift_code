{"ast":null,"code":"// store.js\n\nimport { create } from \"zustand\";\nimport { addEdge, applyNodeChanges, applyEdgeChanges, MarkerType } from 'reactflow';\nexport const useStore = create((set, get) => ({\n  nodes: [],\n  edges: [],\n  nodeIDs: {},\n  undoStack: [],\n  redoStack: [],\n  getNodeID: type => {\n    const newIDs = {\n      ...get().nodeIDs\n    };\n    if (newIDs[type] === undefined) {\n      newIDs[type] = 0;\n    }\n    newIDs[type] += 1;\n    set({\n      nodeIDs: newIDs\n    });\n    return `${type}-${newIDs[type]}`;\n  },\n  addNode: node => {\n    set(state => ({\n      undoStack: [...state.undoStack, {\n        nodes: state.nodes,\n        edges: state.edges\n      }],\n      redoStack: [],\n      nodes: [...state.nodes, node]\n    }));\n  },\n  onNodesChange: changes => {\n    set(state => ({\n      undoStack: [...state.undoStack, {\n        nodes: state.nodes,\n        edges: state.edges\n      }],\n      redoStack: [],\n      nodes: applyNodeChanges(changes, state.nodes)\n    }));\n  },\n  onEdgesChange: changes => {\n    set(state => ({\n      undoStack: [...state.undoStack, {\n        nodes: state.nodes,\n        edges: state.edges\n      }],\n      redoStack: [],\n      edges: applyEdgeChanges(changes, state.edges)\n    }));\n  },\n  onConnect: connection => {\n    set(state => ({\n      undoStack: [...state.undoStack, {\n        nodes: state.nodes,\n        edges: state.edges\n      }],\n      redoStack: [],\n      edges: addEdge({\n        ...connection,\n        type: 'smoothstep',\n        animated: true,\n        markerEnd: {\n          type: MarkerType.Arrow,\n          height: '20px',\n          width: '20px'\n        }\n      }, state.edges)\n    }));\n  },\n  updateNodeField: (nodeId, fieldName, fieldValue) => {\n    set(state => ({\n      undoStack: [...state.undoStack, {\n        nodes: state.nodes,\n        edges: state.edges\n      }],\n      redoStack: [],\n      nodes: state.nodes.map(node => {\n        if (node.id === nodeId) {\n          node.data = {\n            ...node.data,\n            [fieldName]: fieldValue\n          };\n        }\n        return node;\n      })\n    }));\n  },\n  deleteNode: nodeId => {\n    set(state => ({\n      undoStack: [...state.undoStack, {\n        nodes: state.nodes,\n        edges: state.edges\n      }],\n      redoStack: [],\n      nodes: state.nodes.filter(node => node.id !== nodeId),\n      edges: state.edges.filter(edge => edge.source !== nodeId && edge.target !== nodeId)\n    }));\n  },\n  deleteEdge: edgeId => {\n    set(state => ({\n      undoStack: [...state.undoStack, {\n        nodes: state.nodes,\n        edges: state.edges\n      }],\n      redoStack: [],\n      edges: state.edges.filter(edge => edge.id !== edgeId)\n    }));\n  },\n  undo: () => {\n    set(state => {\n      if (state.undoStack.length === 0) return state;\n      const prev = state.undoStack[state.undoStack.length - 1];\n      return {\n        ...state,\n        nodes: prev.nodes,\n        edges: prev.edges,\n        undoStack: state.undoStack.slice(0, -1),\n        redoStack: [...state.redoStack, {\n          nodes: state.nodes,\n          edges: state.edges\n        }]\n      };\n    });\n  },\n  redo: () => {\n    set(state => {\n      if (state.redoStack.length === 0) return state;\n      const next = state.redoStack[state.redoStack.length - 1];\n      return {\n        ...state,\n        nodes: next.nodes,\n        edges: next.edges,\n        redoStack: state.redoStack.slice(0, -1),\n        undoStack: [...state.undoStack, {\n          nodes: state.nodes,\n          edges: state.edges\n        }]\n      };\n    });\n  },\n  exportPipeline: () => {\n    const {\n      nodes,\n      edges\n    } = get();\n    const dataStr = JSON.stringify({\n      nodes,\n      edges\n    }, null, 2);\n    const blob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'pipeline.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  },\n  importPipeline: imported => {\n    set({\n      nodes: imported.nodes || [],\n      edges: imported.edges || []\n    });\n  },\n  setNodes: nodes => set(state => ({\n    undoStack: [...state.undoStack, {\n      nodes: state.nodes,\n      edges: state.edges\n    }],\n    redoStack: [],\n    nodes\n  }))\n}));","map":{"version":3,"names":["create","addEdge","applyNodeChanges","applyEdgeChanges","MarkerType","useStore","set","get","nodes","edges","nodeIDs","undoStack","redoStack","getNodeID","type","newIDs","undefined","addNode","node","state","onNodesChange","changes","onEdgesChange","onConnect","connection","animated","markerEnd","Arrow","height","width","updateNodeField","nodeId","fieldName","fieldValue","map","id","data","deleteNode","filter","edge","source","target","deleteEdge","edgeId","undo","length","prev","slice","redo","next","exportPipeline","dataStr","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","importPipeline","imported","setNodes"],"sources":["C:/Users/vaibh/OneDrive/Desktop/Reseachpaper/vector/vector/frontend/src/store.js"],"sourcesContent":["// store.js\n\nimport { create } from \"zustand\";\nimport {\n    addEdge,\n    applyNodeChanges,\n    applyEdgeChanges,\n    MarkerType,\n  } from 'reactflow';\n\nexport const useStore = create((set, get) => ({\n    nodes: [],\n    edges: [],\n    nodeIDs: {},\n    undoStack: [],\n    redoStack: [],\n    getNodeID: (type) => {\n        const newIDs = {...get().nodeIDs};\n        if (newIDs[type] === undefined) {\n            newIDs[type] = 0;\n        }\n        newIDs[type] += 1;\n        set({nodeIDs: newIDs});\n        return `${type}-${newIDs[type]}`;\n    },\n    addNode: (node) => {\n        set((state) => ({\n            undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n            redoStack: [],\n            nodes: [...state.nodes, node]\n        }));\n    },\n    onNodesChange: (changes) => {\n      set((state) => ({\n        undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n        redoStack: [],\n        nodes: applyNodeChanges(changes, state.nodes),\n      }));\n    },\n    onEdgesChange: (changes) => {\n      set((state) => ({\n        undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n        redoStack: [],\n        edges: applyEdgeChanges(changes, state.edges),\n      }));\n    },\n    onConnect: (connection) => {\n      set((state) => ({\n        undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n        redoStack: [],\n        edges: addEdge({...connection, type: 'smoothstep', animated: true, markerEnd: {type: MarkerType.Arrow, height: '20px', width: '20px'}}, state.edges),\n      }));\n    },\n    updateNodeField: (nodeId, fieldName, fieldValue) => {\n      set((state) => ({\n        undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n        redoStack: [],\n        nodes: state.nodes.map((node) => {\n          if (node.id === nodeId) {\n            node.data = { ...node.data, [fieldName]: fieldValue };\n          }\n          return node;\n        }),\n      }));\n    },\n    deleteNode: (nodeId) => {\n      set((state) => ({\n        undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n        redoStack: [],\n        nodes: state.nodes.filter((node) => node.id !== nodeId),\n        edges: state.edges.filter(\n          (edge) => edge.source !== nodeId && edge.target !== nodeId\n        ),\n      }));\n    },\n    deleteEdge: (edgeId) => {\n      set((state) => ({\n        undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n        redoStack: [],\n        edges: state.edges.filter((edge) => edge.id !== edgeId),\n      }));\n    },\n    undo: () => {\n      set((state) => {\n        if (state.undoStack.length === 0) return state;\n        const prev = state.undoStack[state.undoStack.length - 1];\n        return {\n          ...state,\n          nodes: prev.nodes,\n          edges: prev.edges,\n          undoStack: state.undoStack.slice(0, -1),\n          redoStack: [...state.redoStack, { nodes: state.nodes, edges: state.edges }],\n        };\n      });\n    },\n    redo: () => {\n      set((state) => {\n        if (state.redoStack.length === 0) return state;\n        const next = state.redoStack[state.redoStack.length - 1];\n        return {\n          ...state,\n          nodes: next.nodes,\n          edges: next.edges,\n          redoStack: state.redoStack.slice(0, -1),\n          undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n        };\n      });\n    },\n    exportPipeline: () => {\n      const { nodes, edges } = get();\n      const dataStr = JSON.stringify({ nodes, edges }, null, 2);\n      const blob = new Blob([dataStr], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'pipeline.json';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    },\n    importPipeline: (imported) => {\n      set({ nodes: imported.nodes || [], edges: imported.edges || [] });\n    },\n    setNodes: (nodes) => set((state) => ({\n      undoStack: [...state.undoStack, { nodes: state.nodes, edges: state.edges }],\n      redoStack: [],\n      nodes\n    })),\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}